{"version":3,"file":"app_deps.bundle.js","sources":["node_modules/browser-pack/_prelude.js","node_modules/@jimbly/howler/src/howler.core.js","node_modules/@jimbly/spine-core/dist/Animation.js","node_modules/@jimbly/spine-core/dist/AnimationState.js","node_modules/@jimbly/spine-core/dist/AnimationStateData.js","node_modules/@jimbly/spine-core/dist/AtlasAttachmentLoader.js","node_modules/@jimbly/spine-core/dist/Bone.js","node_modules/@jimbly/spine-core/dist/BoneData.js","node_modules/@jimbly/spine-core/dist/ConstraintData.js","node_modules/@jimbly/spine-core/dist/Event.js","node_modules/@jimbly/spine-core/dist/EventData.js","node_modules/@jimbly/spine-core/dist/IkConstraint.js","node_modules/@jimbly/spine-core/dist/IkConstraintData.js","node_modules/@jimbly/spine-core/dist/PathConstraint.js","node_modules/@jimbly/spine-core/dist/PathConstraintData.js","node_modules/@jimbly/spine-core/dist/Skeleton.js","node_modules/@jimbly/spine-core/dist/SkeletonBinary.js","node_modules/@jimbly/spine-core/dist/SkeletonData.js","node_modules/@jimbly/spine-core/dist/Skin.js","node_modules/@jimbly/spine-core/dist/Slot.js","node_modules/@jimbly/spine-core/dist/SlotData.js","node_modules/@jimbly/spine-core/dist/Texture.js","node_modules/@jimbly/spine-core/dist/TextureAtlas.js","node_modules/@jimbly/spine-core/dist/TransformConstraint.js","node_modules/@jimbly/spine-core/dist/TransformConstraintData.js","node_modules/@jimbly/spine-core/dist/Utils.js","node_modules/@jimbly/spine-core/dist/attachments/Attachment.js","node_modules/@jimbly/spine-core/dist/attachments/BoundingBoxAttachment.js","node_modules/@jimbly/spine-core/dist/attachments/ClippingAttachment.js","node_modules/@jimbly/spine-core/dist/attachments/MeshAttachment.js","node_modules/@jimbly/spine-core/dist/attachments/PathAttachment.js","node_modules/@jimbly/spine-core/dist/attachments/PointAttachment.js","node_modules/@jimbly/spine-core/dist/attachments/RegionAttachment.js","node_modules/gl-mat3/create.js","node_modules/gl-mat3/fromMat4.js","node_modules/gl-mat4/copy.js","node_modules/gl-mat4/create.js","node_modules/gl-mat4/identity.js","node_modules/gl-mat4/invert.js","node_modules/gl-mat4/lookAt.js","node_modules/gl-mat4/multiply.js","node_modules/gl-mat4/perspective.js","node_modules/gl-mat4/transpose.js","node_modules/glov-async/index.js","app_deps.js","../glov/client/require.js","../glov/client/shims/assert.js","../glov/client/shims/buffer.js","../glov/client/shims/not_worker.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*!\n *  howler.js v2.1.3\n *  howlerjs.com\n *\n *  (c) 2013-2019, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  Modified by Jimb Esser:\n *    Fix inconsistent return of self.\n *    Do not throw uncaught promise rejections at startup\n *    Fix audio not resuming upon keypress\n *    Fix audio not resuming upon mousedown\n *    Fix pre-loading entire audio file when streaming is desired\n *    Unlock audio even if WebAudio is disabled\n *    Expose `safeToPlay` so app doesn't queue up hundreds of sounds before we can play any\n *    Add `volume` parameter to `play()` so you can play a sound a specific volume without popping\n *    Add extra delay before firing `end` event to prevent sounds from being stopped before they even start on Android\n *    [PR'd] Fix creating unbounded number of Audio elements when `unlock` is called multiple times\n *    Add manualUnlock() function to trigger WebAudio resume upon non-event'd user input (e.g. gamepad)\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n      self.safeToPlay = false;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n      if  (self.state === 'running') {\n        self.safeToPlay = true;\n      }\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    manualUnlock: function() {\n      var self = this || Howler;\n\n      if (!self.noAudio && self.unlockFunction) {\n        self.unlockFunction();\n      }\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      // JE: Unlock even if not using WebAudio; Also, _audioUnlocked is never true here, and would be false while unlocking anyway\n      // if (self._audioUnlocked || !self.ctx) {\n      //   return self;\n      // }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      if (self.ctx) {\n        // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n        // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n        // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n        if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n          self._mobileUnloaded = true;\n          self.unload();\n        }\n      }\n\n      if (self.ctx) {\n        // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n        // http://stackoverflow.com/questions/24119684\n        self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n      }\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = self.unlockFunction = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        // JE: Don't add more to the pool than desired\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        function onUnlockFinish() {\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n          self.safeToPlay = true;\n          self.unlockFunction = null;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('mousedown', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        }\n\n        if (self.ctx) {\n          // Create an empty buffer.\n          var source = self.ctx.createBufferSource();\n          source.buffer = self._scratchBuffer;\n          source.connect(self.ctx.destination);\n\n          // Play the empty buffer.\n          if (typeof source.start === 'undefined') {\n            source.noteOn(0);\n          } else {\n            source.start(0);\n          }\n\n          // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n          if (typeof self.ctx.resume === 'function') {\n            self.ctx.resume();\n          }\n\n          // Setup a timeout to check that we are unlocked on the next event loop.\n          source.onended = function() {\n            source.disconnect(0);\n            onUnlockFinish();\n          };\n        } else {\n          // JE: non-WebAudio - we received user input, assume unlocked immediately\n          onUnlockFinish();\n        }\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('mousedown', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      // JE: Disabling this, it causes un-ignorable Uncaught Promise Rejection errors in Chrome.\n      // //.Check if the audio is locked and throw a warning.\n      // var testPlay = new Audio().play();\n      // if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n      //   testPlay.catch(function() {\n      //     console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n      //   });\n      // }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return self;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n        self.ctx.suspend().then(function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        });\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return self;\n      }\n\n      if (self.state === 'running' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\n      self._xhrHeaders = o.xhrHeaders || null;\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (Howler.autoUnlock) { // JE: Unlock even if not using WebAudio\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload) {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return self;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return self;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Number} volume\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, volume, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      // JE: With short timeouts, we get clipped on no sound at all on Android\n      timeout += 500;\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return null;\n      }\n\n      var sound_volume = typeof volume === 'number' ? volume : sound._volume;\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound_volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound_volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = parseFloat(from);\n      to = parseFloat(to);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Make sure the volume is in the right bounds.\n        vol = Math.max(0, vol);\n        vol = Math.min(1, vol);\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, undefined, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        // JE: If _html5 was requested, then we want this audio streamed, not buffered!\n        self._node.preload = parent._html5 ? 'metadata' : 'auto';\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.withCredentials = self._xhrWithCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhrHeaders) {\n        Object.keys(self._xhrHeaders).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhrHeaders[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  };\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      if (!Howler.masterGain) {\n        // Happening on Firefox 34 for some users, unsure why, does not reproduce\n        Howler.usingWebAudio = false;\n      }\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Define globally in case AMD is not available or unused.\n  if (typeof window !== 'undefined') {\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  }\n}());\n","\"use strict\";\n\nexports.__esModule = true;\nexports.TranslateYTimeline = exports.TranslateXTimeline = exports.TranslateTimeline = exports.TransformConstraintTimeline = exports.Timeline = exports.ShearYTimeline = exports.ShearXTimeline = exports.ShearTimeline = exports.ScaleYTimeline = exports.ScaleXTimeline = exports.ScaleTimeline = exports.RotateTimeline = exports.RGBTimeline = exports.RGBATimeline = exports.RGBA2Timeline = exports.RGB2Timeline = exports.PathConstraintSpacingTimeline = exports.PathConstraintPositionTimeline = exports.PathConstraintMixTimeline = exports.MixDirection = exports.MixBlend = exports.IkConstraintTimeline = exports.EventTimeline = exports.DrawOrderTimeline = exports.DeformTimeline = exports.CurveTimeline2 = exports.CurveTimeline1 = exports.CurveTimeline = exports.AttachmentTimeline = exports.Animation = exports.AlphaTimeline = void 0;\n\nvar _Attachment = require(\"./attachments/Attachment\");\n\nvar _Utils = require(\"./Utils\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/** A simple container for a list of timelines and a name. */\nvar Animation = /*#__PURE__*/function () {\n  function Animation(name, timelines, duration) {\n    this.timelines = null;\n    this.timelineIds = null;\n    if (!name) throw new Error(\"name cannot be null.\");\n    this.name = name;\n    this.setTimelines(timelines);\n    this.duration = duration;\n  }\n\n  var _proto = Animation.prototype;\n\n  _proto.setTimelines = function setTimelines(timelines) {\n    if (!timelines) throw new Error(\"timelines cannot be null.\");\n    this.timelines = timelines;\n    this.timelineIds = new _Utils.StringSet();\n\n    for (var i = 0; i < timelines.length; i++) {\n      this.timelineIds.addAll(timelines[i].getPropertyIds());\n    }\n  };\n\n  _proto.hasTimeline = function hasTimeline(ids) {\n    for (var i = 0; i < ids.length; i++) {\n      if (this.timelineIds.contains(ids[i])) return true;\n    }\n\n    return false;\n  }\n  /** Applies all the animation's timelines to the specified skeleton.\r\n   *\r\n   * See Timeline {@link Timeline#apply(Skeleton, float, float, Array, float, MixBlend, MixDirection)}.\r\n   * @param loop If true, the animation repeats after {@link #getDuration()}.\r\n   * @param events May be null to ignore fired events. */\n  ;\n\n  _proto.apply = function apply(skeleton, lastTime, time, loop, events, alpha, blend, direction) {\n    if (!skeleton) throw new Error(\"skeleton cannot be null.\");\n\n    if (loop && this.duration != 0) {\n      time %= this.duration;\n      if (lastTime > 0) lastTime %= this.duration;\n    }\n\n    var timelines = this.timelines;\n\n    for (var i = 0, n = timelines.length; i < n; i++) {\n      timelines[i].apply(skeleton, lastTime, time, events, alpha, blend, direction);\n    }\n  };\n\n  return Animation;\n}();\n/** Controls how a timeline value is mixed with the setup pose value or current pose value when a timeline's `alpha`\r\n * < 1.\r\n *\r\n * See Timeline {@link Timeline#apply(Skeleton, float, float, Array, float, MixBlend, MixDirection)}. */\n\n\nexports.Animation = Animation;\nvar MixBlend;\nexports.MixBlend = MixBlend;\n\n(function (MixBlend) {\n  /** Transitions from the setup value to the timeline value (the current value is not used). Before the first key, the setup\r\n   * value is set. */\n  MixBlend[MixBlend[\"setup\"] = 0] = \"setup\";\n  /** Transitions from the current value to the timeline value. Before the first key, transitions from the current value to\r\n   * the setup value. Timelines which perform instant transitions, such as {@link DrawOrderTimeline} or\r\n   * {@link AttachmentTimeline}, use the setup value before the first key.\r\n   *\r\n   * `first` is intended for the first animations applied, not for animations layered on top of those. */\n\n  MixBlend[MixBlend[\"first\"] = 1] = \"first\";\n  /** Transitions from the current value to the timeline value. No change is made before the first key (the current value is\r\n   * kept until the first key).\r\n   *\r\n   * `replace` is intended for animations layered on top of others, not for the first animations applied. */\n\n  MixBlend[MixBlend[\"replace\"] = 2] = \"replace\";\n  /** Transitions from the current value to the current value plus the timeline value. No change is made before the first key\r\n   * (the current value is kept until the first key).\r\n   *\r\n   * `add` is intended for animations layered on top of others, not for the first animations applied. Properties\r\n   * keyed by additive animations must be set manually or by another animation before applying the additive animations, else\r\n   * the property values will increase continually. */\n\n  MixBlend[MixBlend[\"add\"] = 3] = \"add\";\n})(MixBlend || (exports.MixBlend = MixBlend = {}));\n/** Indicates whether a timeline's `alpha` is mixing out over time toward 0 (the setup or current pose value) or\r\n * mixing in toward 1 (the timeline's value).\r\n *\r\n * See Timeline {@link Timeline#apply(Skeleton, float, float, Array, float, MixBlend, MixDirection)}. */\n\n\nvar MixDirection;\nexports.MixDirection = MixDirection;\n\n(function (MixDirection) {\n  MixDirection[MixDirection[\"mixIn\"] = 0] = \"mixIn\";\n  MixDirection[MixDirection[\"mixOut\"] = 1] = \"mixOut\";\n})(MixDirection || (exports.MixDirection = MixDirection = {}));\n\nvar Property = {\n  rotate: 0,\n  x: 1,\n  y: 2,\n  scaleX: 3,\n  scaleY: 4,\n  shearX: 5,\n  shearY: 6,\n  rgb: 7,\n  alpha: 8,\n  rgb2: 9,\n  attachment: 10,\n  deform: 11,\n  event: 12,\n  drawOrder: 13,\n  ikConstraint: 14,\n  transformConstraint: 15,\n  pathConstraintPosition: 16,\n  pathConstraintSpacing: 17,\n  pathConstraintMix: 18\n};\n/** The interface for all timelines. */\n\nvar Timeline = /*#__PURE__*/function () {\n  function Timeline(frameCount, propertyIds) {\n    this.propertyIds = null;\n    this.frames = null;\n    this.propertyIds = propertyIds;\n    this.frames = _Utils.Utils.newFloatArray(frameCount * this.getFrameEntries());\n  }\n\n  var _proto2 = Timeline.prototype;\n\n  _proto2.getPropertyIds = function getPropertyIds() {\n    return this.propertyIds;\n  };\n\n  _proto2.getFrameEntries = function getFrameEntries() {\n    return 1;\n  };\n\n  _proto2.getFrameCount = function getFrameCount() {\n    return this.frames.length / this.getFrameEntries();\n  };\n\n  _proto2.getDuration = function getDuration() {\n    return this.frames[this.frames.length - this.getFrameEntries()];\n  };\n\n  Timeline.search1 = function search1(frames, time) {\n    var n = frames.length;\n\n    for (var i = 1; i < n; i++) {\n      if (frames[i] > time) return i - 1;\n    }\n\n    return n - 1;\n  };\n\n  Timeline.search = function search(frames, time, step) {\n    var n = frames.length;\n\n    for (var i = step; i < n; i += step) {\n      if (frames[i] > time) return i - step;\n    }\n\n    return n - step;\n  };\n\n  return Timeline;\n}();\n/** The base class for timelines that use interpolation between key frame values. */\n\n\nexports.Timeline = Timeline;\n\nvar CurveTimeline = /*#__PURE__*/function (_Timeline) {\n  _inheritsLoose(CurveTimeline, _Timeline);\n\n  function CurveTimeline(frameCount, bezierCount, propertyIds) {\n    var _this;\n\n    _this = _Timeline.call(this, frameCount, propertyIds) || this;\n    _this.curves = null; // type, x, y, ...\n\n    _this.curves = _Utils.Utils.newFloatArray(frameCount + bezierCount * 18\n    /*BEZIER_SIZE*/\n    );\n    _this.curves[frameCount - 1] = 1\n    /*STEPPED*/\n    ;\n    return _this;\n  }\n  /** Sets the specified key frame to linear interpolation. */\n\n\n  var _proto3 = CurveTimeline.prototype;\n\n  _proto3.setLinear = function setLinear(frame) {\n    this.curves[frame] = 0\n    /*LINEAR*/\n    ;\n  }\n  /** Sets the specified key frame to stepped interpolation. */\n  ;\n\n  _proto3.setStepped = function setStepped(frame) {\n    this.curves[frame] = 1\n    /*STEPPED*/\n    ;\n  }\n  /** Shrinks the storage for Bezier curves, for use when <code>bezierCount</code> (specified in the constructor) was larger\r\n   * than the actual number of Bezier curves. */\n  ;\n\n  _proto3.shrink = function shrink(bezierCount) {\n    var size = this.getFrameCount() + bezierCount * 18\n    /*BEZIER_SIZE*/\n    ;\n\n    if (this.curves.length > size) {\n      var newCurves = _Utils.Utils.newFloatArray(size);\n\n      _Utils.Utils.arrayCopy(this.curves, 0, newCurves, 0, size);\n\n      this.curves = newCurves;\n    }\n  }\n  /** Stores the segments for the specified Bezier curve. For timelines that modify multiple values, there may be more than\r\n   * one curve per frame.\r\n   * @param bezier The ordinal of this Bezier curve for this timeline, between 0 and <code>bezierCount - 1</code> (specified\r\n   *           in the constructor), inclusive.\r\n   * @param frame Between 0 and <code>frameCount - 1</code>, inclusive.\r\n   * @param value The index of the value for this frame that this curve is used for.\r\n   * @param time1 The time for the first key.\r\n   * @param value1 The value for the first key.\r\n   * @param cx1 The time for the first Bezier handle.\r\n   * @param cy1 The value for the first Bezier handle.\r\n   * @param cx2 The time of the second Bezier handle.\r\n   * @param cy2 The value for the second Bezier handle.\r\n   * @param time2 The time for the second key.\r\n   * @param value2 The value for the second key. */\n  ;\n\n  _proto3.setBezier = function setBezier(bezier, frame, value, time1, value1, cx1, cy1, cx2, cy2, time2, value2) {\n    var curves = this.curves;\n    var i = this.getFrameCount() + bezier * 18\n    /*BEZIER_SIZE*/\n    ;\n    if (value == 0) curves[frame] = 2\n    /*BEZIER*/\n    + i;\n    var tmpx = (time1 - cx1 * 2 + cx2) * 0.03,\n        tmpy = (value1 - cy1 * 2 + cy2) * 0.03;\n    var dddx = ((cx1 - cx2) * 3 - time1 + time2) * 0.006,\n        dddy = ((cy1 - cy2) * 3 - value1 + value2) * 0.006;\n    var ddx = tmpx * 2 + dddx,\n        ddy = tmpy * 2 + dddy;\n    var dx = (cx1 - time1) * 0.3 + tmpx + dddx * 0.16666667,\n        dy = (cy1 - value1) * 0.3 + tmpy + dddy * 0.16666667;\n    var x = time1 + dx,\n        y = value1 + dy;\n\n    for (var n = i + 18\n    /*BEZIER_SIZE*/\n    ; i < n; i += 2) {\n      curves[i] = x;\n      curves[i + 1] = y;\n      dx += ddx;\n      dy += ddy;\n      ddx += dddx;\n      ddy += dddy;\n      x += dx;\n      y += dy;\n    }\n  }\n  /** Returns the Bezier interpolated value for the specified time.\r\n   * @param frameIndex The index into {@link #getFrames()} for the values of the frame before <code>time</code>.\r\n   * @param valueOffset The offset from <code>frameIndex</code> to the value this curve is used for.\r\n   * @param i The index of the Bezier segments. See {@link #getCurveType(int)}. */\n  ;\n\n  _proto3.getBezierValue = function getBezierValue(time, frameIndex, valueOffset, i) {\n    var curves = this.curves;\n\n    if (curves[i] > time) {\n      var _x = this.frames[frameIndex],\n          _y = this.frames[frameIndex + valueOffset];\n      return _y + (time - _x) / (curves[i] - _x) * (curves[i + 1] - _y);\n    }\n\n    var n = i + 18\n    /*BEZIER_SIZE*/\n    ;\n\n    for (i += 2; i < n; i += 2) {\n      if (curves[i] >= time) {\n        var _x2 = curves[i - 2],\n            _y2 = curves[i - 1];\n        return _y2 + (time - _x2) / (curves[i] - _x2) * (curves[i + 1] - _y2);\n      }\n    }\n\n    frameIndex += this.getFrameEntries();\n    var x = curves[n - 2],\n        y = curves[n - 1];\n    return y + (time - x) / (this.frames[frameIndex] - x) * (this.frames[frameIndex + valueOffset] - y);\n  };\n\n  return CurveTimeline;\n}(Timeline);\n\nexports.CurveTimeline = CurveTimeline;\n\nvar CurveTimeline1 = /*#__PURE__*/function (_CurveTimeline) {\n  _inheritsLoose(CurveTimeline1, _CurveTimeline);\n\n  function CurveTimeline1(frameCount, bezierCount, propertyId) {\n    return _CurveTimeline.call(this, frameCount, bezierCount, [propertyId]) || this;\n  }\n\n  var _proto4 = CurveTimeline1.prototype;\n\n  _proto4.getFrameEntries = function getFrameEntries() {\n    return 2\n    /*ENTRIES*/\n    ;\n  }\n  /** Sets the time and value for the specified frame.\r\n   * @param frame Between 0 and <code>frameCount</code>, inclusive.\r\n   * @param time The frame time in seconds. */\n  ;\n\n  _proto4.setFrame = function setFrame(frame, time, value) {\n    frame <<= 1;\n    this.frames[frame] = time;\n    this.frames[frame + 1\n    /*VALUE*/\n    ] = value;\n  }\n  /** Returns the interpolated value for the specified time. */\n  ;\n\n  _proto4.getCurveValue = function getCurveValue(time) {\n    var frames = this.frames;\n    var i = frames.length - 2;\n\n    for (var ii = 2; ii <= i; ii += 2) {\n      if (frames[ii] > time) {\n        i = ii - 2;\n        break;\n      }\n    }\n\n    var curveType = this.curves[i >> 1];\n\n    switch (curveType) {\n      case 0\n      /*LINEAR*/\n      :\n        var before = frames[i],\n            value = frames[i + 1\n        /*VALUE*/\n        ];\n        return value + (time - before) / (frames[i + 2\n        /*ENTRIES*/\n        ] - before) * (frames[i + 2\n        /*ENTRIES*/\n        + 1\n        /*VALUE*/\n        ] - value);\n\n      case 1\n      /*STEPPED*/\n      :\n        return frames[i + 1\n        /*VALUE*/\n        ];\n    }\n\n    return this.getBezierValue(time, i, 1\n    /*VALUE*/\n    , curveType - 2\n    /*BEZIER*/\n    );\n  };\n\n  return CurveTimeline1;\n}(CurveTimeline);\n/** The base class for a {@link CurveTimeline} which sets two properties. */\n\n\nexports.CurveTimeline1 = CurveTimeline1;\n\nvar CurveTimeline2 = /*#__PURE__*/function (_CurveTimeline2) {\n  _inheritsLoose(CurveTimeline2, _CurveTimeline2);\n\n  /** @param bezierCount The maximum number of Bezier curves. See {@link #shrink(int)}.\r\n   * @param propertyIds Unique identifiers for the properties the timeline modifies. */\n  function CurveTimeline2(frameCount, bezierCount, propertyId1, propertyId2) {\n    return _CurveTimeline2.call(this, frameCount, bezierCount, [propertyId1, propertyId2]) || this;\n  }\n\n  var _proto5 = CurveTimeline2.prototype;\n\n  _proto5.getFrameEntries = function getFrameEntries() {\n    return 3\n    /*ENTRIES*/\n    ;\n  }\n  /** Sets the time and values for the specified frame.\r\n   * @param frame Between 0 and <code>frameCount</code>, inclusive.\r\n   * @param time The frame time in seconds. */\n  ;\n\n  _proto5.setFrame = function setFrame(frame, time, value1, value2) {\n    frame *= 3\n    /*ENTRIES*/\n    ;\n    this.frames[frame] = time;\n    this.frames[frame + 1\n    /*VALUE1*/\n    ] = value1;\n    this.frames[frame + 2\n    /*VALUE2*/\n    ] = value2;\n  };\n\n  return CurveTimeline2;\n}(CurveTimeline);\n/** Changes a bone's local {@link Bone#rotation}. */\n\n\nexports.CurveTimeline2 = CurveTimeline2;\n\nvar RotateTimeline = /*#__PURE__*/function (_CurveTimeline3) {\n  _inheritsLoose(RotateTimeline, _CurveTimeline3);\n\n  function RotateTimeline(frameCount, bezierCount, boneIndex) {\n    var _this2;\n\n    _this2 = _CurveTimeline3.call(this, frameCount, bezierCount, Property.rotate + \"|\" + boneIndex) || this;\n    _this2.boneIndex = 0;\n    _this2.boneIndex = boneIndex;\n    return _this2;\n  }\n\n  var _proto6 = RotateTimeline.prototype;\n\n  _proto6.apply = function apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n    var bone = skeleton.bones[this.boneIndex];\n    if (!bone.active) return;\n    var frames = this.frames;\n\n    if (time < frames[0]) {\n      switch (blend) {\n        case MixBlend.setup:\n          bone.rotation = bone.data.rotation;\n          return;\n\n        case MixBlend.first:\n          bone.rotation += (bone.data.rotation - bone.rotation) * alpha;\n      }\n\n      return;\n    }\n\n    var r = this.getCurveValue(time);\n\n    switch (blend) {\n      case MixBlend.setup:\n        bone.rotation = bone.data.rotation + r * alpha;\n        break;\n\n      case MixBlend.first:\n      case MixBlend.replace:\n        r += bone.data.rotation - bone.rotation;\n\n      case MixBlend.add:\n        bone.rotation += r * alpha;\n    }\n  };\n\n  return RotateTimeline;\n}(CurveTimeline1);\n/** Changes a bone's local {@link Bone#x} and {@link Bone#y}. */\n\n\nexports.RotateTimeline = RotateTimeline;\n\nvar TranslateTimeline = /*#__PURE__*/function (_CurveTimeline4) {\n  _inheritsLoose(TranslateTimeline, _CurveTimeline4);\n\n  function TranslateTimeline(frameCount, bezierCount, boneIndex) {\n    var _this3;\n\n    _this3 = _CurveTimeline4.call(this, frameCount, bezierCount, Property.x + \"|\" + boneIndex, Property.y + \"|\" + boneIndex) || this;\n    _this3.boneIndex = 0;\n    _this3.boneIndex = boneIndex;\n    return _this3;\n  }\n\n  var _proto7 = TranslateTimeline.prototype;\n\n  _proto7.apply = function apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n    var bone = skeleton.bones[this.boneIndex];\n    if (!bone.active) return;\n    var frames = this.frames;\n\n    if (time < frames[0]) {\n      switch (blend) {\n        case MixBlend.setup:\n          bone.x = bone.data.x;\n          bone.y = bone.data.y;\n          return;\n\n        case MixBlend.first:\n          bone.x += (bone.data.x - bone.x) * alpha;\n          bone.y += (bone.data.y - bone.y) * alpha;\n      }\n\n      return;\n    }\n\n    var x = 0,\n        y = 0;\n    var i = Timeline.search(frames, time, 3\n    /*ENTRIES*/\n    );\n    var curveType = this.curves[i / 3\n    /*ENTRIES*/\n    ];\n\n    switch (curveType) {\n      case 0\n      /*LINEAR*/\n      :\n        var before = frames[i];\n        x = frames[i + 1\n        /*VALUE1*/\n        ];\n        y = frames[i + 2\n        /*VALUE2*/\n        ];\n        var t = (time - before) / (frames[i + 3\n        /*ENTRIES*/\n        ] - before);\n        x += (frames[i + 3\n        /*ENTRIES*/\n        + 1\n        /*VALUE1*/\n        ] - x) * t;\n        y += (frames[i + 3\n        /*ENTRIES*/\n        + 2\n        /*VALUE2*/\n        ] - y) * t;\n        break;\n\n      case 1\n      /*STEPPED*/\n      :\n        x = frames[i + 1\n        /*VALUE1*/\n        ];\n        y = frames[i + 2\n        /*VALUE2*/\n        ];\n        break;\n\n      default:\n        x = this.getBezierValue(time, i, 1\n        /*VALUE1*/\n        , curveType - 2\n        /*BEZIER*/\n        );\n        y = this.getBezierValue(time, i, 2\n        /*VALUE2*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        - 2\n        /*BEZIER*/\n        );\n    }\n\n    switch (blend) {\n      case MixBlend.setup:\n        bone.x = bone.data.x + x * alpha;\n        bone.y = bone.data.y + y * alpha;\n        break;\n\n      case MixBlend.first:\n      case MixBlend.replace:\n        bone.x += (bone.data.x + x - bone.x) * alpha;\n        bone.y += (bone.data.y + y - bone.y) * alpha;\n        break;\n\n      case MixBlend.add:\n        bone.x += x * alpha;\n        bone.y += y * alpha;\n    }\n  };\n\n  return TranslateTimeline;\n}(CurveTimeline2);\n/** Changes a bone's local {@link Bone#x}. */\n\n\nexports.TranslateTimeline = TranslateTimeline;\n\nvar TranslateXTimeline = /*#__PURE__*/function (_CurveTimeline5) {\n  _inheritsLoose(TranslateXTimeline, _CurveTimeline5);\n\n  function TranslateXTimeline(frameCount, bezierCount, boneIndex) {\n    var _this4;\n\n    _this4 = _CurveTimeline5.call(this, frameCount, bezierCount, Property.x + \"|\" + boneIndex) || this;\n    _this4.boneIndex = 0;\n    _this4.boneIndex = boneIndex;\n    return _this4;\n  }\n\n  var _proto8 = TranslateXTimeline.prototype;\n\n  _proto8.apply = function apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n    var bone = skeleton.bones[this.boneIndex];\n    if (!bone.active) return;\n    var frames = this.frames;\n\n    if (time < frames[0]) {\n      switch (blend) {\n        case MixBlend.setup:\n          bone.x = bone.data.x;\n          return;\n\n        case MixBlend.first:\n          bone.x += (bone.data.x - bone.x) * alpha;\n      }\n\n      return;\n    }\n\n    var x = this.getCurveValue(time);\n\n    switch (blend) {\n      case MixBlend.setup:\n        bone.x = bone.data.x + x * alpha;\n        break;\n\n      case MixBlend.first:\n      case MixBlend.replace:\n        bone.x += (bone.data.x + x - bone.x) * alpha;\n        break;\n\n      case MixBlend.add:\n        bone.x += x * alpha;\n    }\n  };\n\n  return TranslateXTimeline;\n}(CurveTimeline1);\n/** Changes a bone's local {@link Bone#x}. */\n\n\nexports.TranslateXTimeline = TranslateXTimeline;\n\nvar TranslateYTimeline = /*#__PURE__*/function (_CurveTimeline6) {\n  _inheritsLoose(TranslateYTimeline, _CurveTimeline6);\n\n  function TranslateYTimeline(frameCount, bezierCount, boneIndex) {\n    var _this5;\n\n    _this5 = _CurveTimeline6.call(this, frameCount, bezierCount, Property.y + \"|\" + boneIndex) || this;\n    _this5.boneIndex = 0;\n    _this5.boneIndex = boneIndex;\n    return _this5;\n  }\n\n  var _proto9 = TranslateYTimeline.prototype;\n\n  _proto9.apply = function apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n    var bone = skeleton.bones[this.boneIndex];\n    if (!bone.active) return;\n    var frames = this.frames;\n\n    if (time < frames[0]) {\n      switch (blend) {\n        case MixBlend.setup:\n          bone.y = bone.data.y;\n          return;\n\n        case MixBlend.first:\n          bone.y += (bone.data.y - bone.y) * alpha;\n      }\n\n      return;\n    }\n\n    var y = this.getCurveValue(time);\n\n    switch (blend) {\n      case MixBlend.setup:\n        bone.y = bone.data.y + y * alpha;\n        break;\n\n      case MixBlend.first:\n      case MixBlend.replace:\n        bone.y += (bone.data.y + y - bone.y) * alpha;\n        break;\n\n      case MixBlend.add:\n        bone.y += y * alpha;\n    }\n  };\n\n  return TranslateYTimeline;\n}(CurveTimeline1);\n/** Changes a bone's local {@link Bone#scaleX)} and {@link Bone#scaleY}. */\n\n\nexports.TranslateYTimeline = TranslateYTimeline;\n\nvar ScaleTimeline = /*#__PURE__*/function (_CurveTimeline7) {\n  _inheritsLoose(ScaleTimeline, _CurveTimeline7);\n\n  function ScaleTimeline(frameCount, bezierCount, boneIndex) {\n    var _this6;\n\n    _this6 = _CurveTimeline7.call(this, frameCount, bezierCount, Property.scaleX + \"|\" + boneIndex, Property.scaleY + \"|\" + boneIndex) || this;\n    _this6.boneIndex = 0;\n    _this6.boneIndex = boneIndex;\n    return _this6;\n  }\n\n  var _proto10 = ScaleTimeline.prototype;\n\n  _proto10.apply = function apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n    var bone = skeleton.bones[this.boneIndex];\n    if (!bone.active) return;\n    var frames = this.frames;\n\n    if (time < frames[0]) {\n      switch (blend) {\n        case MixBlend.setup:\n          bone.scaleX = bone.data.scaleX;\n          bone.scaleY = bone.data.scaleY;\n          return;\n\n        case MixBlend.first:\n          bone.scaleX += (bone.data.scaleX - bone.scaleX) * alpha;\n          bone.scaleY += (bone.data.scaleY - bone.scaleY) * alpha;\n      }\n\n      return;\n    }\n\n    var x, y;\n    var i = Timeline.search(frames, time, 3\n    /*ENTRIES*/\n    );\n    var curveType = this.curves[i / 3\n    /*ENTRIES*/\n    ];\n\n    switch (curveType) {\n      case 0\n      /*LINEAR*/\n      :\n        var before = frames[i];\n        x = frames[i + 1\n        /*VALUE1*/\n        ];\n        y = frames[i + 2\n        /*VALUE2*/\n        ];\n        var t = (time - before) / (frames[i + 3\n        /*ENTRIES*/\n        ] - before);\n        x += (frames[i + 3\n        /*ENTRIES*/\n        + 1\n        /*VALUE1*/\n        ] - x) * t;\n        y += (frames[i + 3\n        /*ENTRIES*/\n        + 2\n        /*VALUE2*/\n        ] - y) * t;\n        break;\n\n      case 1\n      /*STEPPED*/\n      :\n        x = frames[i + 1\n        /*VALUE1*/\n        ];\n        y = frames[i + 2\n        /*VALUE2*/\n        ];\n        break;\n\n      default:\n        x = this.getBezierValue(time, i, 1\n        /*VALUE1*/\n        , curveType - 2\n        /*BEZIER*/\n        );\n        y = this.getBezierValue(time, i, 2\n        /*VALUE2*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        - 2\n        /*BEZIER*/\n        );\n    }\n\n    x *= bone.data.scaleX;\n    y *= bone.data.scaleY;\n\n    if (alpha == 1) {\n      if (blend == MixBlend.add) {\n        bone.scaleX += x - bone.data.scaleX;\n        bone.scaleY += y - bone.data.scaleY;\n      } else {\n        bone.scaleX = x;\n        bone.scaleY = y;\n      }\n    } else {\n      var bx = 0,\n          by = 0;\n\n      if (direction == MixDirection.mixOut) {\n        switch (blend) {\n          case MixBlend.setup:\n            bx = bone.data.scaleX;\n            by = bone.data.scaleY;\n            bone.scaleX = bx + (Math.abs(x) * _Utils.MathUtils.signum(bx) - bx) * alpha;\n            bone.scaleY = by + (Math.abs(y) * _Utils.MathUtils.signum(by) - by) * alpha;\n            break;\n\n          case MixBlend.first:\n          case MixBlend.replace:\n            bx = bone.scaleX;\n            by = bone.scaleY;\n            bone.scaleX = bx + (Math.abs(x) * _Utils.MathUtils.signum(bx) - bx) * alpha;\n            bone.scaleY = by + (Math.abs(y) * _Utils.MathUtils.signum(by) - by) * alpha;\n            break;\n\n          case MixBlend.add:\n            bone.scaleX += (x - bone.data.scaleX) * alpha;\n            bone.scaleY += (y - bone.data.scaleY) * alpha;\n        }\n      } else {\n        switch (blend) {\n          case MixBlend.setup:\n            bx = Math.abs(bone.data.scaleX) * _Utils.MathUtils.signum(x);\n            by = Math.abs(bone.data.scaleY) * _Utils.MathUtils.signum(y);\n            bone.scaleX = bx + (x - bx) * alpha;\n            bone.scaleY = by + (y - by) * alpha;\n            break;\n\n          case MixBlend.first:\n          case MixBlend.replace:\n            bx = Math.abs(bone.scaleX) * _Utils.MathUtils.signum(x);\n            by = Math.abs(bone.scaleY) * _Utils.MathUtils.signum(y);\n            bone.scaleX = bx + (x - bx) * alpha;\n            bone.scaleY = by + (y - by) * alpha;\n            break;\n\n          case MixBlend.add:\n            bone.scaleX += (x - bone.data.scaleX) * alpha;\n            bone.scaleY += (y - bone.data.scaleY) * alpha;\n        }\n      }\n    }\n  };\n\n  return ScaleTimeline;\n}(CurveTimeline2);\n/** Changes a bone's local {@link Bone#scaleX)} and {@link Bone#scaleY}. */\n\n\nexports.ScaleTimeline = ScaleTimeline;\n\nvar ScaleXTimeline = /*#__PURE__*/function (_CurveTimeline8) {\n  _inheritsLoose(ScaleXTimeline, _CurveTimeline8);\n\n  function ScaleXTimeline(frameCount, bezierCount, boneIndex) {\n    var _this7;\n\n    _this7 = _CurveTimeline8.call(this, frameCount, bezierCount, Property.scaleX + \"|\" + boneIndex) || this;\n    _this7.boneIndex = 0;\n    _this7.boneIndex = boneIndex;\n    return _this7;\n  }\n\n  var _proto11 = ScaleXTimeline.prototype;\n\n  _proto11.apply = function apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n    var bone = skeleton.bones[this.boneIndex];\n    if (!bone.active) return;\n    var frames = this.frames;\n\n    if (time < frames[0]) {\n      switch (blend) {\n        case MixBlend.setup:\n          bone.scaleX = bone.data.scaleX;\n          return;\n\n        case MixBlend.first:\n          bone.scaleX += (bone.data.scaleX - bone.scaleX) * alpha;\n      }\n\n      return;\n    }\n\n    var x = this.getCurveValue(time) * bone.data.scaleX;\n\n    if (alpha == 1) {\n      if (blend == MixBlend.add) bone.scaleX += x - bone.data.scaleX;else bone.scaleX = x;\n    } else {\n      // Mixing out uses sign of setup or current pose, else use sign of key.\n      var bx = 0;\n\n      if (direction == MixDirection.mixOut) {\n        switch (blend) {\n          case MixBlend.setup:\n            bx = bone.data.scaleX;\n            bone.scaleX = bx + (Math.abs(x) * _Utils.MathUtils.signum(bx) - bx) * alpha;\n            break;\n\n          case MixBlend.first:\n          case MixBlend.replace:\n            bx = bone.scaleX;\n            bone.scaleX = bx + (Math.abs(x) * _Utils.MathUtils.signum(bx) - bx) * alpha;\n            break;\n\n          case MixBlend.add:\n            bone.scaleX += (x - bone.data.scaleX) * alpha;\n        }\n      } else {\n        switch (blend) {\n          case MixBlend.setup:\n            bx = Math.abs(bone.data.scaleX) * _Utils.MathUtils.signum(x);\n            bone.scaleX = bx + (x - bx) * alpha;\n            break;\n\n          case MixBlend.first:\n          case MixBlend.replace:\n            bx = Math.abs(bone.scaleX) * _Utils.MathUtils.signum(x);\n            bone.scaleX = bx + (x - bx) * alpha;\n            break;\n\n          case MixBlend.add:\n            bone.scaleX += (x - bone.data.scaleX) * alpha;\n        }\n      }\n    }\n  };\n\n  return ScaleXTimeline;\n}(CurveTimeline1);\n/** Changes a bone's local {@link Bone#scaleX)} and {@link Bone#scaleY}. */\n\n\nexports.ScaleXTimeline = ScaleXTimeline;\n\nvar ScaleYTimeline = /*#__PURE__*/function (_CurveTimeline9) {\n  _inheritsLoose(ScaleYTimeline, _CurveTimeline9);\n\n  function ScaleYTimeline(frameCount, bezierCount, boneIndex) {\n    var _this8;\n\n    _this8 = _CurveTimeline9.call(this, frameCount, bezierCount, Property.scaleY + \"|\" + boneIndex) || this;\n    _this8.boneIndex = 0;\n    _this8.boneIndex = boneIndex;\n    return _this8;\n  }\n\n  var _proto12 = ScaleYTimeline.prototype;\n\n  _proto12.apply = function apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n    var bone = skeleton.bones[this.boneIndex];\n    if (!bone.active) return;\n    var frames = this.frames;\n\n    if (time < frames[0]) {\n      switch (blend) {\n        case MixBlend.setup:\n          bone.scaleY = bone.data.scaleY;\n          return;\n\n        case MixBlend.first:\n          bone.scaleY += (bone.data.scaleY - bone.scaleY) * alpha;\n      }\n\n      return;\n    }\n\n    var y = this.getCurveValue(time) * bone.data.scaleY;\n\n    if (alpha == 1) {\n      if (blend == MixBlend.add) bone.scaleY += y - bone.data.scaleY;else bone.scaleY = y;\n    } else {\n      // Mixing out uses sign of setup or current pose, else use sign of key.\n      var by = 0;\n\n      if (direction == MixDirection.mixOut) {\n        switch (blend) {\n          case MixBlend.setup:\n            by = bone.data.scaleY;\n            bone.scaleY = by + (Math.abs(y) * _Utils.MathUtils.signum(by) - by) * alpha;\n            break;\n\n          case MixBlend.first:\n          case MixBlend.replace:\n            by = bone.scaleY;\n            bone.scaleY = by + (Math.abs(y) * _Utils.MathUtils.signum(by) - by) * alpha;\n            break;\n\n          case MixBlend.add:\n            bone.scaleY += (y - bone.data.scaleY) * alpha;\n        }\n      } else {\n        switch (blend) {\n          case MixBlend.setup:\n            by = Math.abs(bone.data.scaleY) * _Utils.MathUtils.signum(y);\n            bone.scaleY = by + (y - by) * alpha;\n            break;\n\n          case MixBlend.first:\n          case MixBlend.replace:\n            by = Math.abs(bone.scaleY) * _Utils.MathUtils.signum(y);\n            bone.scaleY = by + (y - by) * alpha;\n            break;\n\n          case MixBlend.add:\n            bone.scaleY += (y - bone.data.scaleY) * alpha;\n        }\n      }\n    }\n  };\n\n  return ScaleYTimeline;\n}(CurveTimeline1);\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\n\n\nexports.ScaleYTimeline = ScaleYTimeline;\n\nvar ShearTimeline = /*#__PURE__*/function (_CurveTimeline10) {\n  _inheritsLoose(ShearTimeline, _CurveTimeline10);\n\n  function ShearTimeline(frameCount, bezierCount, boneIndex) {\n    var _this9;\n\n    _this9 = _CurveTimeline10.call(this, frameCount, bezierCount, Property.shearX + \"|\" + boneIndex, Property.shearY + \"|\" + boneIndex) || this;\n    _this9.boneIndex = 0;\n    _this9.boneIndex = boneIndex;\n    return _this9;\n  }\n\n  var _proto13 = ShearTimeline.prototype;\n\n  _proto13.apply = function apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n    var bone = skeleton.bones[this.boneIndex];\n    if (!bone.active) return;\n    var frames = this.frames;\n\n    if (time < frames[0]) {\n      switch (blend) {\n        case MixBlend.setup:\n          bone.shearX = bone.data.shearX;\n          bone.shearY = bone.data.shearY;\n          return;\n\n        case MixBlend.first:\n          bone.shearX += (bone.data.shearX - bone.shearX) * alpha;\n          bone.shearY += (bone.data.shearY - bone.shearY) * alpha;\n      }\n\n      return;\n    }\n\n    var x = 0,\n        y = 0;\n    var i = Timeline.search(frames, time, 3\n    /*ENTRIES*/\n    );\n    var curveType = this.curves[i / 3\n    /*ENTRIES*/\n    ];\n\n    switch (curveType) {\n      case 0\n      /*LINEAR*/\n      :\n        var before = frames[i];\n        x = frames[i + 1\n        /*VALUE1*/\n        ];\n        y = frames[i + 2\n        /*VALUE2*/\n        ];\n        var t = (time - before) / (frames[i + 3\n        /*ENTRIES*/\n        ] - before);\n        x += (frames[i + 3\n        /*ENTRIES*/\n        + 1\n        /*VALUE1*/\n        ] - x) * t;\n        y += (frames[i + 3\n        /*ENTRIES*/\n        + 2\n        /*VALUE2*/\n        ] - y) * t;\n        break;\n\n      case 1\n      /*STEPPED*/\n      :\n        x = frames[i + 1\n        /*VALUE1*/\n        ];\n        y = frames[i + 2\n        /*VALUE2*/\n        ];\n        break;\n\n      default:\n        x = this.getBezierValue(time, i, 1\n        /*VALUE1*/\n        , curveType - 2\n        /*BEZIER*/\n        );\n        y = this.getBezierValue(time, i, 2\n        /*VALUE2*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        - 2\n        /*BEZIER*/\n        );\n    }\n\n    switch (blend) {\n      case MixBlend.setup:\n        bone.shearX = bone.data.shearX + x * alpha;\n        bone.shearY = bone.data.shearY + y * alpha;\n        break;\n\n      case MixBlend.first:\n      case MixBlend.replace:\n        bone.shearX += (bone.data.shearX + x - bone.shearX) * alpha;\n        bone.shearY += (bone.data.shearY + y - bone.shearY) * alpha;\n        break;\n\n      case MixBlend.add:\n        bone.shearX += x * alpha;\n        bone.shearY += y * alpha;\n    }\n  };\n\n  return ShearTimeline;\n}(CurveTimeline2);\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\n\n\nexports.ShearTimeline = ShearTimeline;\n\nvar ShearXTimeline = /*#__PURE__*/function (_CurveTimeline11) {\n  _inheritsLoose(ShearXTimeline, _CurveTimeline11);\n\n  function ShearXTimeline(frameCount, bezierCount, boneIndex) {\n    var _this10;\n\n    _this10 = _CurveTimeline11.call(this, frameCount, bezierCount, Property.shearX + \"|\" + boneIndex) || this;\n    _this10.boneIndex = 0;\n    _this10.boneIndex = boneIndex;\n    return _this10;\n  }\n\n  var _proto14 = ShearXTimeline.prototype;\n\n  _proto14.apply = function apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n    var bone = skeleton.bones[this.boneIndex];\n    if (!bone.active) return;\n    var frames = this.frames;\n\n    if (time < frames[0]) {\n      switch (blend) {\n        case MixBlend.setup:\n          bone.shearX = bone.data.shearX;\n          return;\n\n        case MixBlend.first:\n          bone.shearX += (bone.data.shearX - bone.shearX) * alpha;\n      }\n\n      return;\n    }\n\n    var x = this.getCurveValue(time);\n\n    switch (blend) {\n      case MixBlend.setup:\n        bone.shearX = bone.data.shearX + x * alpha;\n        break;\n\n      case MixBlend.first:\n      case MixBlend.replace:\n        bone.shearX += (bone.data.shearX + x - bone.shearX) * alpha;\n        break;\n\n      case MixBlend.add:\n        bone.shearX += x * alpha;\n    }\n  };\n\n  return ShearXTimeline;\n}(CurveTimeline1);\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\n\n\nexports.ShearXTimeline = ShearXTimeline;\n\nvar ShearYTimeline = /*#__PURE__*/function (_CurveTimeline12) {\n  _inheritsLoose(ShearYTimeline, _CurveTimeline12);\n\n  function ShearYTimeline(frameCount, bezierCount, boneIndex) {\n    var _this11;\n\n    _this11 = _CurveTimeline12.call(this, frameCount, bezierCount, Property.shearY + \"|\" + boneIndex) || this;\n    _this11.boneIndex = 0;\n    _this11.boneIndex = boneIndex;\n    return _this11;\n  }\n\n  var _proto15 = ShearYTimeline.prototype;\n\n  _proto15.apply = function apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n    var bone = skeleton.bones[this.boneIndex];\n    if (!bone.active) return;\n    var frames = this.frames;\n\n    if (time < frames[0]) {\n      switch (blend) {\n        case MixBlend.setup:\n          bone.shearY = bone.data.shearY;\n          return;\n\n        case MixBlend.first:\n          bone.shearY += (bone.data.shearY - bone.shearY) * alpha;\n      }\n\n      return;\n    }\n\n    var y = this.getCurveValue(time);\n\n    switch (blend) {\n      case MixBlend.setup:\n        bone.shearY = bone.data.shearY + y * alpha;\n        break;\n\n      case MixBlend.first:\n      case MixBlend.replace:\n        bone.shearY += (bone.data.shearY + y - bone.shearY) * alpha;\n        break;\n\n      case MixBlend.add:\n        bone.shearY += y * alpha;\n    }\n  };\n\n  return ShearYTimeline;\n}(CurveTimeline1);\n/** Changes a slot's {@link Slot#color}. */\n\n\nexports.ShearYTimeline = ShearYTimeline;\n\nvar RGBATimeline = /*#__PURE__*/function (_CurveTimeline13) {\n  _inheritsLoose(RGBATimeline, _CurveTimeline13);\n\n  function RGBATimeline(frameCount, bezierCount, slotIndex) {\n    var _this12;\n\n    _this12 = _CurveTimeline13.call(this, frameCount, bezierCount, [Property.rgb + \"|\" + slotIndex, Property.alpha + \"|\" + slotIndex]) || this;\n    _this12.slotIndex = 0;\n    _this12.slotIndex = slotIndex;\n    return _this12;\n  }\n\n  var _proto16 = RGBATimeline.prototype;\n\n  _proto16.getFrameEntries = function getFrameEntries() {\n    return 5\n    /*ENTRIES*/\n    ;\n  }\n  /** Sets the time in seconds, red, green, blue, and alpha for the specified key frame. */\n  ;\n\n  _proto16.setFrame = function setFrame(frame, time, r, g, b, a) {\n    frame *= 5\n    /*ENTRIES*/\n    ;\n    this.frames[frame] = time;\n    this.frames[frame + 1\n    /*R*/\n    ] = r;\n    this.frames[frame + 2\n    /*G*/\n    ] = g;\n    this.frames[frame + 3\n    /*B*/\n    ] = b;\n    this.frames[frame + 4\n    /*A*/\n    ] = a;\n  };\n\n  _proto16.apply = function apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n    var slot = skeleton.slots[this.slotIndex];\n    if (!slot.bone.active) return;\n    var frames = this.frames;\n    var color = slot.color;\n\n    if (time < frames[0]) {\n      var setup = slot.data.color;\n\n      switch (blend) {\n        case MixBlend.setup:\n          color.setFromColor(setup);\n          return;\n\n        case MixBlend.first:\n          color.add((setup.r - color.r) * alpha, (setup.g - color.g) * alpha, (setup.b - color.b) * alpha, (setup.a - color.a) * alpha);\n      }\n\n      return;\n    }\n\n    var r = 0,\n        g = 0,\n        b = 0,\n        a = 0;\n    var i = Timeline.search(frames, time, 5\n    /*ENTRIES*/\n    );\n    var curveType = this.curves[i / 5\n    /*ENTRIES*/\n    ];\n\n    switch (curveType) {\n      case 0\n      /*LINEAR*/\n      :\n        var before = frames[i];\n        r = frames[i + 1\n        /*R*/\n        ];\n        g = frames[i + 2\n        /*G*/\n        ];\n        b = frames[i + 3\n        /*B*/\n        ];\n        a = frames[i + 4\n        /*A*/\n        ];\n        var t = (time - before) / (frames[i + 5\n        /*ENTRIES*/\n        ] - before);\n        r += (frames[i + 5\n        /*ENTRIES*/\n        + 1\n        /*R*/\n        ] - r) * t;\n        g += (frames[i + 5\n        /*ENTRIES*/\n        + 2\n        /*G*/\n        ] - g) * t;\n        b += (frames[i + 5\n        /*ENTRIES*/\n        + 3\n        /*B*/\n        ] - b) * t;\n        a += (frames[i + 5\n        /*ENTRIES*/\n        + 4\n        /*A*/\n        ] - a) * t;\n        break;\n\n      case 1\n      /*STEPPED*/\n      :\n        r = frames[i + 1\n        /*R*/\n        ];\n        g = frames[i + 2\n        /*G*/\n        ];\n        b = frames[i + 3\n        /*B*/\n        ];\n        a = frames[i + 4\n        /*A*/\n        ];\n        break;\n\n      default:\n        r = this.getBezierValue(time, i, 1\n        /*R*/\n        , curveType - 2\n        /*BEZIER*/\n        );\n        g = this.getBezierValue(time, i, 2\n        /*G*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        - 2\n        /*BEZIER*/\n        );\n        b = this.getBezierValue(time, i, 3\n        /*B*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        * 2 - 2\n        /*BEZIER*/\n        );\n        a = this.getBezierValue(time, i, 4\n        /*A*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        * 3 - 2\n        /*BEZIER*/\n        );\n    }\n\n    if (alpha == 1) color.set(r, g, b, a);else {\n      if (blend == MixBlend.setup) color.setFromColor(slot.data.color);\n      color.add((r - color.r) * alpha, (g - color.g) * alpha, (b - color.b) * alpha, (a - color.a) * alpha);\n    }\n  };\n\n  return RGBATimeline;\n}(CurveTimeline);\n/** Changes a slot's {@link Slot#color}. */\n\n\nexports.RGBATimeline = RGBATimeline;\n\nvar RGBTimeline = /*#__PURE__*/function (_CurveTimeline14) {\n  _inheritsLoose(RGBTimeline, _CurveTimeline14);\n\n  function RGBTimeline(frameCount, bezierCount, slotIndex) {\n    var _this13;\n\n    _this13 = _CurveTimeline14.call(this, frameCount, bezierCount, [Property.rgb + \"|\" + slotIndex]) || this;\n    _this13.slotIndex = 0;\n    _this13.slotIndex = slotIndex;\n    return _this13;\n  }\n\n  var _proto17 = RGBTimeline.prototype;\n\n  _proto17.getFrameEntries = function getFrameEntries() {\n    return 4\n    /*ENTRIES*/\n    ;\n  }\n  /** Sets the time in seconds, red, green, blue, and alpha for the specified key frame. */\n  ;\n\n  _proto17.setFrame = function setFrame(frame, time, r, g, b) {\n    frame <<= 2;\n    this.frames[frame] = time;\n    this.frames[frame + 1\n    /*R*/\n    ] = r;\n    this.frames[frame + 2\n    /*G*/\n    ] = g;\n    this.frames[frame + 3\n    /*B*/\n    ] = b;\n  };\n\n  _proto17.apply = function apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n    var slot = skeleton.slots[this.slotIndex];\n    if (!slot.bone.active) return;\n    var frames = this.frames;\n    var color = slot.color;\n\n    if (time < frames[0]) {\n      var setup = slot.data.color;\n\n      switch (blend) {\n        case MixBlend.setup:\n          color.r = setup.r;\n          color.g = setup.g;\n          color.b = setup.b;\n          return;\n\n        case MixBlend.first:\n          color.r += (setup.r - color.r) * alpha;\n          color.g += (setup.g - color.g) * alpha;\n          color.b += (setup.b - color.b) * alpha;\n      }\n\n      return;\n    }\n\n    var r = 0,\n        g = 0,\n        b = 0;\n    var i = Timeline.search(frames, time, 4\n    /*ENTRIES*/\n    );\n    var curveType = this.curves[i >> 2];\n\n    switch (curveType) {\n      case 0\n      /*LINEAR*/\n      :\n        var before = frames[i];\n        r = frames[i + 1\n        /*R*/\n        ];\n        g = frames[i + 2\n        /*G*/\n        ];\n        b = frames[i + 3\n        /*B*/\n        ];\n        var t = (time - before) / (frames[i + 4\n        /*ENTRIES*/\n        ] - before);\n        r += (frames[i + 4\n        /*ENTRIES*/\n        + 1\n        /*R*/\n        ] - r) * t;\n        g += (frames[i + 4\n        /*ENTRIES*/\n        + 2\n        /*G*/\n        ] - g) * t;\n        b += (frames[i + 4\n        /*ENTRIES*/\n        + 3\n        /*B*/\n        ] - b) * t;\n        break;\n\n      case 1\n      /*STEPPED*/\n      :\n        r = frames[i + 1\n        /*R*/\n        ];\n        g = frames[i + 2\n        /*G*/\n        ];\n        b = frames[i + 3\n        /*B*/\n        ];\n        break;\n\n      default:\n        r = this.getBezierValue(time, i, 1\n        /*R*/\n        , curveType - 2\n        /*BEZIER*/\n        );\n        g = this.getBezierValue(time, i, 2\n        /*G*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        - 2\n        /*BEZIER*/\n        );\n        b = this.getBezierValue(time, i, 3\n        /*B*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        * 2 - 2\n        /*BEZIER*/\n        );\n    }\n\n    if (alpha == 1) {\n      color.r = r;\n      color.g = g;\n      color.b = b;\n    } else {\n      if (blend == MixBlend.setup) {\n        var _setup = slot.data.color;\n        color.r = _setup.r;\n        color.g = _setup.g;\n        color.b = _setup.b;\n      }\n\n      color.r += (r - color.r) * alpha;\n      color.g += (g - color.g) * alpha;\n      color.b += (b - color.b) * alpha;\n    }\n  };\n\n  return RGBTimeline;\n}(CurveTimeline);\n/** Changes a bone's local {@link Bone#shearX} and {@link Bone#shearY}. */\n\n\nexports.RGBTimeline = RGBTimeline;\n\nvar AlphaTimeline = /*#__PURE__*/function (_CurveTimeline15) {\n  _inheritsLoose(AlphaTimeline, _CurveTimeline15);\n\n  function AlphaTimeline(frameCount, bezierCount, slotIndex) {\n    var _this14;\n\n    _this14 = _CurveTimeline15.call(this, frameCount, bezierCount, Property.alpha + \"|\" + slotIndex) || this;\n    _this14.slotIndex = 0;\n    _this14.slotIndex = slotIndex;\n    return _this14;\n  }\n\n  var _proto18 = AlphaTimeline.prototype;\n\n  _proto18.apply = function apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n    var slot = skeleton.slots[this.slotIndex];\n    if (!slot.bone.active) return;\n    var color = slot.color;\n\n    if (time < this.frames[0]) {\n      // Time is before first frame.\n      var setup = slot.data.color;\n\n      switch (blend) {\n        case MixBlend.setup:\n          color.a = setup.a;\n          return;\n\n        case MixBlend.first:\n          color.a += (setup.a - color.a) * alpha;\n      }\n\n      return;\n    }\n\n    var a = this.getCurveValue(time);\n    if (alpha == 1) color.a = a;else {\n      if (blend == MixBlend.setup) color.a = slot.data.color.a;\n      color.a += (a - color.a) * alpha;\n    }\n  };\n\n  return AlphaTimeline;\n}(CurveTimeline1);\n/** Changes a slot's {@link Slot#color} and {@link Slot#darkColor} for two color tinting. */\n\n\nexports.AlphaTimeline = AlphaTimeline;\n\nvar RGBA2Timeline = /*#__PURE__*/function (_CurveTimeline16) {\n  _inheritsLoose(RGBA2Timeline, _CurveTimeline16);\n\n  function RGBA2Timeline(frameCount, bezierCount, slotIndex) {\n    var _this15;\n\n    _this15 = _CurveTimeline16.call(this, frameCount, bezierCount, [Property.rgb + \"|\" + slotIndex, Property.alpha + \"|\" + slotIndex, Property.rgb2 + \"|\" + slotIndex]) || this;\n    _this15.slotIndex = 0;\n    _this15.slotIndex = slotIndex;\n    return _this15;\n  }\n\n  var _proto19 = RGBA2Timeline.prototype;\n\n  _proto19.getFrameEntries = function getFrameEntries() {\n    return 8\n    /*ENTRIES*/\n    ;\n  }\n  /** Sets the time in seconds, light, and dark colors for the specified key frame. */\n  ;\n\n  _proto19.setFrame = function setFrame(frame, time, r, g, b, a, r2, g2, b2) {\n    frame <<= 3;\n    this.frames[frame] = time;\n    this.frames[frame + 1\n    /*R*/\n    ] = r;\n    this.frames[frame + 2\n    /*G*/\n    ] = g;\n    this.frames[frame + 3\n    /*B*/\n    ] = b;\n    this.frames[frame + 4\n    /*A*/\n    ] = a;\n    this.frames[frame + 5\n    /*R2*/\n    ] = r2;\n    this.frames[frame + 6\n    /*G2*/\n    ] = g2;\n    this.frames[frame + 7\n    /*B2*/\n    ] = b2;\n  };\n\n  _proto19.apply = function apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n    var slot = skeleton.slots[this.slotIndex];\n    if (!slot.bone.active) return;\n    var frames = this.frames;\n    var light = slot.color,\n        dark = slot.darkColor;\n\n    if (time < frames[0]) {\n      var setupLight = slot.data.color,\n          setupDark = slot.data.darkColor;\n\n      switch (blend) {\n        case MixBlend.setup:\n          light.setFromColor(setupLight);\n          dark.r = setupDark.r;\n          dark.g = setupDark.g;\n          dark.b = setupDark.b;\n          return;\n\n        case MixBlend.first:\n          light.add((setupLight.r - light.r) * alpha, (setupLight.g - light.g) * alpha, (setupLight.b - light.b) * alpha, (setupLight.a - light.a) * alpha);\n          dark.r += (setupDark.r - dark.r) * alpha;\n          dark.g += (setupDark.g - dark.g) * alpha;\n          dark.b += (setupDark.b - dark.b) * alpha;\n      }\n\n      return;\n    }\n\n    var r = 0,\n        g = 0,\n        b = 0,\n        a = 0,\n        r2 = 0,\n        g2 = 0,\n        b2 = 0;\n    var i = Timeline.search(frames, time, 8\n    /*ENTRIES*/\n    );\n    var curveType = this.curves[i >> 3];\n\n    switch (curveType) {\n      case 0\n      /*LINEAR*/\n      :\n        var before = frames[i];\n        r = frames[i + 1\n        /*R*/\n        ];\n        g = frames[i + 2\n        /*G*/\n        ];\n        b = frames[i + 3\n        /*B*/\n        ];\n        a = frames[i + 4\n        /*A*/\n        ];\n        r2 = frames[i + 5\n        /*R2*/\n        ];\n        g2 = frames[i + 6\n        /*G2*/\n        ];\n        b2 = frames[i + 7\n        /*B2*/\n        ];\n        var t = (time - before) / (frames[i + 8\n        /*ENTRIES*/\n        ] - before);\n        r += (frames[i + 8\n        /*ENTRIES*/\n        + 1\n        /*R*/\n        ] - r) * t;\n        g += (frames[i + 8\n        /*ENTRIES*/\n        + 2\n        /*G*/\n        ] - g) * t;\n        b += (frames[i + 8\n        /*ENTRIES*/\n        + 3\n        /*B*/\n        ] - b) * t;\n        a += (frames[i + 8\n        /*ENTRIES*/\n        + 4\n        /*A*/\n        ] - a) * t;\n        r2 += (frames[i + 8\n        /*ENTRIES*/\n        + 5\n        /*R2*/\n        ] - r2) * t;\n        g2 += (frames[i + 8\n        /*ENTRIES*/\n        + 6\n        /*G2*/\n        ] - g2) * t;\n        b2 += (frames[i + 8\n        /*ENTRIES*/\n        + 7\n        /*B2*/\n        ] - b2) * t;\n        break;\n\n      case 1\n      /*STEPPED*/\n      :\n        r = frames[i + 1\n        /*R*/\n        ];\n        g = frames[i + 2\n        /*G*/\n        ];\n        b = frames[i + 3\n        /*B*/\n        ];\n        a = frames[i + 4\n        /*A*/\n        ];\n        r2 = frames[i + 5\n        /*R2*/\n        ];\n        g2 = frames[i + 6\n        /*G2*/\n        ];\n        b2 = frames[i + 7\n        /*B2*/\n        ];\n        break;\n\n      default:\n        r = this.getBezierValue(time, i, 1\n        /*R*/\n        , curveType - 2\n        /*BEZIER*/\n        );\n        g = this.getBezierValue(time, i, 2\n        /*G*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        - 2\n        /*BEZIER*/\n        );\n        b = this.getBezierValue(time, i, 3\n        /*B*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        * 2 - 2\n        /*BEZIER*/\n        );\n        a = this.getBezierValue(time, i, 4\n        /*A*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        * 3 - 2\n        /*BEZIER*/\n        );\n        r2 = this.getBezierValue(time, i, 5\n        /*R2*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        * 4 - 2\n        /*BEZIER*/\n        );\n        g2 = this.getBezierValue(time, i, 6\n        /*G2*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        * 5 - 2\n        /*BEZIER*/\n        );\n        b2 = this.getBezierValue(time, i, 7\n        /*B2*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        * 6 - 2\n        /*BEZIER*/\n        );\n    }\n\n    if (alpha == 1) {\n      light.set(r, g, b, a);\n      dark.r = r2;\n      dark.g = g2;\n      dark.b = b2;\n    } else {\n      if (blend == MixBlend.setup) {\n        light.setFromColor(slot.data.color);\n        var _setupDark = slot.data.darkColor;\n        dark.r = _setupDark.r;\n        dark.g = _setupDark.g;\n        dark.b = _setupDark.b;\n      }\n\n      light.add((r - light.r) * alpha, (g - light.g) * alpha, (b - light.b) * alpha, (a - light.a) * alpha);\n      dark.r += (r2 - dark.r) * alpha;\n      dark.g += (g2 - dark.g) * alpha;\n      dark.b += (b2 - dark.b) * alpha;\n    }\n  };\n\n  return RGBA2Timeline;\n}(CurveTimeline);\n/** Changes a slot's {@link Slot#color} and {@link Slot#darkColor} for two color tinting. */\n\n\nexports.RGBA2Timeline = RGBA2Timeline;\n\nvar RGB2Timeline = /*#__PURE__*/function (_CurveTimeline17) {\n  _inheritsLoose(RGB2Timeline, _CurveTimeline17);\n\n  function RGB2Timeline(frameCount, bezierCount, slotIndex) {\n    var _this16;\n\n    _this16 = _CurveTimeline17.call(this, frameCount, bezierCount, [Property.rgb + \"|\" + slotIndex, Property.rgb2 + \"|\" + slotIndex]) || this;\n    _this16.slotIndex = 0;\n    _this16.slotIndex = slotIndex;\n    return _this16;\n  }\n\n  var _proto20 = RGB2Timeline.prototype;\n\n  _proto20.getFrameEntries = function getFrameEntries() {\n    return 7\n    /*ENTRIES*/\n    ;\n  }\n  /** Sets the time in seconds, light, and dark colors for the specified key frame. */\n  ;\n\n  _proto20.setFrame = function setFrame(frame, time, r, g, b, r2, g2, b2) {\n    frame *= 7\n    /*ENTRIES*/\n    ;\n    this.frames[frame] = time;\n    this.frames[frame + 1\n    /*R*/\n    ] = r;\n    this.frames[frame + 2\n    /*G*/\n    ] = g;\n    this.frames[frame + 3\n    /*B*/\n    ] = b;\n    this.frames[frame + 4\n    /*R2*/\n    ] = r2;\n    this.frames[frame + 5\n    /*G2*/\n    ] = g2;\n    this.frames[frame + 6\n    /*B2*/\n    ] = b2;\n  };\n\n  _proto20.apply = function apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n    var slot = skeleton.slots[this.slotIndex];\n    if (!slot.bone.active) return;\n    var frames = this.frames;\n    var light = slot.color,\n        dark = slot.darkColor;\n\n    if (time < frames[0]) {\n      var setupLight = slot.data.color,\n          setupDark = slot.data.darkColor;\n\n      switch (blend) {\n        case MixBlend.setup:\n          light.r = setupLight.r;\n          light.g = setupLight.g;\n          light.b = setupLight.b;\n          dark.r = setupDark.r;\n          dark.g = setupDark.g;\n          dark.b = setupDark.b;\n          return;\n\n        case MixBlend.first:\n          light.r += (setupLight.r - light.r) * alpha;\n          light.g += (setupLight.g - light.g) * alpha;\n          light.b += (setupLight.b - light.b) * alpha;\n          dark.r += (setupDark.r - dark.r) * alpha;\n          dark.g += (setupDark.g - dark.g) * alpha;\n          dark.b += (setupDark.b - dark.b) * alpha;\n      }\n\n      return;\n    }\n\n    var r = 0,\n        g = 0,\n        b = 0,\n        a = 0,\n        r2 = 0,\n        g2 = 0,\n        b2 = 0;\n    var i = Timeline.search(frames, time, 7\n    /*ENTRIES*/\n    );\n    var curveType = this.curves[i / 7\n    /*ENTRIES*/\n    ];\n\n    switch (curveType) {\n      case 0\n      /*LINEAR*/\n      :\n        var before = frames[i];\n        r = frames[i + 1\n        /*R*/\n        ];\n        g = frames[i + 2\n        /*G*/\n        ];\n        b = frames[i + 3\n        /*B*/\n        ];\n        r2 = frames[i + 4\n        /*R2*/\n        ];\n        g2 = frames[i + 5\n        /*G2*/\n        ];\n        b2 = frames[i + 6\n        /*B2*/\n        ];\n        var t = (time - before) / (frames[i + 7\n        /*ENTRIES*/\n        ] - before);\n        r += (frames[i + 7\n        /*ENTRIES*/\n        + 1\n        /*R*/\n        ] - r) * t;\n        g += (frames[i + 7\n        /*ENTRIES*/\n        + 2\n        /*G*/\n        ] - g) * t;\n        b += (frames[i + 7\n        /*ENTRIES*/\n        + 3\n        /*B*/\n        ] - b) * t;\n        r2 += (frames[i + 7\n        /*ENTRIES*/\n        + 4\n        /*R2*/\n        ] - r2) * t;\n        g2 += (frames[i + 7\n        /*ENTRIES*/\n        + 5\n        /*G2*/\n        ] - g2) * t;\n        b2 += (frames[i + 7\n        /*ENTRIES*/\n        + 6\n        /*B2*/\n        ] - b2) * t;\n        break;\n\n      case 1\n      /*STEPPED*/\n      :\n        r = frames[i + 1\n        /*R*/\n        ];\n        g = frames[i + 2\n        /*G*/\n        ];\n        b = frames[i + 3\n        /*B*/\n        ];\n        r2 = frames[i + 4\n        /*R2*/\n        ];\n        g2 = frames[i + 5\n        /*G2*/\n        ];\n        b2 = frames[i + 6\n        /*B2*/\n        ];\n        break;\n\n      default:\n        r = this.getBezierValue(time, i, 1\n        /*R*/\n        , curveType - 2\n        /*BEZIER*/\n        );\n        g = this.getBezierValue(time, i, 2\n        /*G*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        - 2\n        /*BEZIER*/\n        );\n        b = this.getBezierValue(time, i, 3\n        /*B*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        * 2 - 2\n        /*BEZIER*/\n        );\n        r2 = this.getBezierValue(time, i, 4\n        /*R2*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        * 3 - 2\n        /*BEZIER*/\n        );\n        g2 = this.getBezierValue(time, i, 5\n        /*G2*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        * 4 - 2\n        /*BEZIER*/\n        );\n        b2 = this.getBezierValue(time, i, 6\n        /*B2*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        * 5 - 2\n        /*BEZIER*/\n        );\n    }\n\n    if (alpha == 1) {\n      light.r = r;\n      light.g = g;\n      light.b = b;\n      dark.r = r2;\n      dark.g = g2;\n      dark.b = b2;\n    } else {\n      if (blend == MixBlend.setup) {\n        var _setupLight = slot.data.color,\n            _setupDark2 = slot.data.darkColor;\n        light.r = _setupLight.r;\n        light.g = _setupLight.g;\n        light.b = _setupLight.b;\n        dark.r = _setupDark2.r;\n        dark.g = _setupDark2.g;\n        dark.b = _setupDark2.b;\n      }\n\n      light.r += (r - light.r) * alpha;\n      light.g += (g - light.g) * alpha;\n      light.b += (b - light.b) * alpha;\n      dark.r += (r2 - dark.r) * alpha;\n      dark.g += (g2 - dark.g) * alpha;\n      dark.b += (b2 - dark.b) * alpha;\n    }\n  };\n\n  return RGB2Timeline;\n}(CurveTimeline);\n/** Changes a slot's {@link Slot#attachment}. */\n\n\nexports.RGB2Timeline = RGB2Timeline;\n\nvar AttachmentTimeline = /*#__PURE__*/function (_Timeline2) {\n  _inheritsLoose(AttachmentTimeline, _Timeline2);\n\n  function AttachmentTimeline(frameCount, slotIndex) {\n    var _this17;\n\n    _this17 = _Timeline2.call(this, frameCount, [Property.attachment + \"|\" + slotIndex]) || this;\n    _this17.slotIndex = 0;\n    _this17.slotIndex = slotIndex;\n    _this17.attachmentNames = new Array(frameCount);\n    return _this17;\n  }\n\n  var _proto21 = AttachmentTimeline.prototype;\n\n  _proto21.getFrameCount = function getFrameCount() {\n    return this.frames.length;\n  }\n  /** Sets the time in seconds and the attachment name for the specified key frame. */\n  ;\n\n  _proto21.setFrame = function setFrame(frame, time, attachmentName) {\n    this.frames[frame] = time;\n    this.attachmentNames[frame] = attachmentName;\n  };\n\n  _proto21.apply = function apply(skeleton, lastTime, time, events, alpha, blend, direction) {\n    var slot = skeleton.slots[this.slotIndex];\n    if (!slot.bone.active) return;\n\n    if (direction == MixDirection.mixOut) {\n      if (blend == MixBlend.setup) this.setAttachment(skeleton, slot, slot.data.attachmentName);\n      return;\n    }\n\n    if (time < this.frames[0]) {\n      if (blend == MixBlend.setup || blend == MixBlend.first) this.setAttachment(skeleton, slot, slot.data.attachmentName);\n      return;\n    }\n\n    this.setAttachment(skeleton, slot, this.attachmentNames[Timeline.search1(this.frames, time)]);\n  };\n\n  _proto21.setAttachment = function setAttachment(skeleton, slot, attachmentName) {\n    slot.setAttachment(!attachmentName ? null : skeleton.getAttachment(this.slotIndex, attachmentName));\n  };\n\n  return AttachmentTimeline;\n}(Timeline);\n/** Changes a slot's {@link Slot#deform} to deform a {@link VertexAttachment}. */\n\n\nexports.AttachmentTimeline = AttachmentTimeline;\n\nvar DeformTimeline = /*#__PURE__*/function (_CurveTimeline18) {\n  _inheritsLoose(DeformTimeline, _CurveTimeline18);\n\n  function DeformTimeline(frameCount, bezierCount, slotIndex, attachment) {\n    var _this18;\n\n    _this18 = _CurveTimeline18.call(this, frameCount, bezierCount, [Property.deform + \"|\" + slotIndex + \"|\" + attachment.id]) || this;\n    _this18.slotIndex = 0;\n    /** The attachment that will be deformed. */\n\n    _this18.attachment = null;\n    /** The vertices for each key frame. */\n\n    _this18.vertices = null;\n    _this18.slotIndex = slotIndex;\n    _this18.attachment = attachment;\n    _this18.vertices = new Array(frameCount);\n    return _this18;\n  }\n\n  var _proto22 = DeformTimeline.prototype;\n\n  _proto22.getFrameCount = function getFrameCount() {\n    return this.frames.length;\n  }\n  /** Sets the time in seconds and the vertices for the specified key frame.\r\n   * @param vertices Vertex positions for an unweighted VertexAttachment, or deform offsets if it has weights. */\n  ;\n\n  _proto22.setFrame = function setFrame(frame, time, vertices) {\n    this.frames[frame] = time;\n    this.vertices[frame] = vertices;\n  }\n  /** @param value1 Ignored (0 is used for a deform timeline).\r\n   * @param value2 Ignored (1 is used for a deform timeline). */\n  ;\n\n  _proto22.setBezier = function setBezier(bezier, frame, value, time1, value1, cx1, cy1, cx2, cy2, time2, value2) {\n    var curves = this.curves;\n    var i = this.getFrameCount() + bezier * 18\n    /*BEZIER_SIZE*/\n    ;\n    if (value == 0) curves[frame] = 2\n    /*BEZIER*/\n    + i;\n    var tmpx = (time1 - cx1 * 2 + cx2) * 0.03,\n        tmpy = cy2 * 0.03 - cy1 * 0.06;\n    var dddx = ((cx1 - cx2) * 3 - time1 + time2) * 0.006,\n        dddy = (cy1 - cy2 + 0.33333333) * 0.018;\n    var ddx = tmpx * 2 + dddx,\n        ddy = tmpy * 2 + dddy;\n    var dx = (cx1 - time1) * 0.3 + tmpx + dddx * 0.16666667,\n        dy = cy1 * 0.3 + tmpy + dddy * 0.16666667;\n    var x = time1 + dx,\n        y = dy;\n\n    for (var n = i + 18\n    /*BEZIER_SIZE*/\n    ; i < n; i += 2) {\n      curves[i] = x;\n      curves[i + 1] = y;\n      dx += ddx;\n      dy += ddy;\n      ddx += dddx;\n      ddy += dddy;\n      x += dx;\n      y += dy;\n    }\n  };\n\n  _proto22.getCurvePercent = function getCurvePercent(time, frame) {\n    var curves = this.curves;\n    var i = curves[frame];\n\n    switch (i) {\n      case 0\n      /*LINEAR*/\n      :\n        var _x3 = this.frames[frame];\n        return (time - _x3) / (this.frames[frame + this.getFrameEntries()] - _x3);\n\n      case 1\n      /*STEPPED*/\n      :\n        return 0;\n    }\n\n    i -= 2\n    /*BEZIER*/\n    ;\n\n    if (curves[i] > time) {\n      var _x4 = this.frames[frame];\n      return curves[i + 1] * (time - _x4) / (curves[i] - _x4);\n    }\n\n    var n = i + 18\n    /*BEZIER_SIZE*/\n    ;\n\n    for (i += 2; i < n; i += 2) {\n      if (curves[i] >= time) {\n        var _x5 = curves[i - 2],\n            _y3 = curves[i - 1];\n        return _y3 + (time - _x5) / (curves[i] - _x5) * (curves[i + 1] - _y3);\n      }\n    }\n\n    var x = curves[n - 2],\n        y = curves[n - 1];\n    return y + (1 - y) * (time - x) / (this.frames[frame + this.getFrameEntries()] - x);\n  };\n\n  _proto22.apply = function apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n    var slot = skeleton.slots[this.slotIndex];\n    if (!slot.bone.active) return;\n    var slotAttachment = slot.getAttachment();\n    if (!(slotAttachment instanceof _Attachment.VertexAttachment) || slotAttachment.deformAttachment != this.attachment) return;\n    var deform = slot.deform;\n    if (deform.length == 0) blend = MixBlend.setup;\n    var vertices = this.vertices;\n    var vertexCount = vertices[0].length;\n    var frames = this.frames;\n\n    if (time < frames[0]) {\n      var vertexAttachment = slotAttachment;\n\n      switch (blend) {\n        case MixBlend.setup:\n          deform.length = 0;\n          return;\n\n        case MixBlend.first:\n          if (alpha == 1) {\n            deform.length = 0;\n            return;\n          }\n\n          deform.length = vertexCount;\n\n          if (!vertexAttachment.bones) {\n            // Unweighted vertex positions.\n            var setupVertices = vertexAttachment.vertices;\n\n            for (var i = 0; i < vertexCount; i++) {\n              deform[i] += (setupVertices[i] - deform[i]) * alpha;\n            }\n          } else {\n            // Weighted deform offsets.\n            alpha = 1 - alpha;\n\n            for (var i = 0; i < vertexCount; i++) {\n              deform[i] *= alpha;\n            }\n          }\n\n      }\n\n      return;\n    }\n\n    deform.length = vertexCount;\n\n    if (time >= frames[frames.length - 1]) {\n      // Time is after last frame.\n      var lastVertices = vertices[frames.length - 1];\n\n      if (alpha == 1) {\n        if (blend == MixBlend.add) {\n          var _vertexAttachment = slotAttachment;\n\n          if (!_vertexAttachment.bones) {\n            // Unweighted vertex positions, with alpha.\n            var _setupVertices = _vertexAttachment.vertices;\n\n            for (var _i = 0; _i < vertexCount; _i++) {\n              deform[_i] += lastVertices[_i] - _setupVertices[_i];\n            }\n          } else {\n            // Weighted deform offsets, with alpha.\n            for (var _i2 = 0; _i2 < vertexCount; _i2++) {\n              deform[_i2] += lastVertices[_i2];\n            }\n          }\n        } else _Utils.Utils.arrayCopy(lastVertices, 0, deform, 0, vertexCount);\n      } else {\n        switch (blend) {\n          case MixBlend.setup:\n            {\n              var _vertexAttachment3 = slotAttachment;\n\n              if (!_vertexAttachment3.bones) {\n                // Unweighted vertex positions, with alpha.\n                var _setupVertices2 = _vertexAttachment3.vertices;\n\n                for (var _i3 = 0; _i3 < vertexCount; _i3++) {\n                  var setup = _setupVertices2[_i3];\n                  deform[_i3] = setup + (lastVertices[_i3] - setup) * alpha;\n                }\n              } else {\n                // Weighted deform offsets, with alpha.\n                for (var _i4 = 0; _i4 < vertexCount; _i4++) {\n                  deform[_i4] = lastVertices[_i4] * alpha;\n                }\n              }\n\n              break;\n            }\n\n          case MixBlend.first:\n          case MixBlend.replace:\n            for (var _i5 = 0; _i5 < vertexCount; _i5++) {\n              deform[_i5] += (lastVertices[_i5] - deform[_i5]) * alpha;\n            }\n\n            break;\n\n          case MixBlend.add:\n            var _vertexAttachment2 = slotAttachment;\n\n            if (!_vertexAttachment2.bones) {\n              // Unweighted vertex positions, with alpha.\n              var _setupVertices3 = _vertexAttachment2.vertices;\n\n              for (var _i6 = 0; _i6 < vertexCount; _i6++) {\n                deform[_i6] += (lastVertices[_i6] - _setupVertices3[_i6]) * alpha;\n              }\n            } else {\n              // Weighted deform offsets, with alpha.\n              for (var _i7 = 0; _i7 < vertexCount; _i7++) {\n                deform[_i7] += lastVertices[_i7] * alpha;\n              }\n            }\n\n        }\n      }\n\n      return;\n    } // Interpolate between the previous frame and the current frame.\n\n\n    var frame = Timeline.search1(frames, time);\n    var percent = this.getCurvePercent(time, frame);\n    var prevVertices = vertices[frame];\n    var nextVertices = vertices[frame + 1];\n\n    if (alpha == 1) {\n      if (blend == MixBlend.add) {\n        var _vertexAttachment4 = slotAttachment;\n\n        if (!_vertexAttachment4.bones) {\n          // Unweighted vertex positions, with alpha.\n          var _setupVertices4 = _vertexAttachment4.vertices;\n\n          for (var _i8 = 0; _i8 < vertexCount; _i8++) {\n            var prev = prevVertices[_i8];\n            deform[_i8] += prev + (nextVertices[_i8] - prev) * percent - _setupVertices4[_i8];\n          }\n        } else {\n          // Weighted deform offsets, with alpha.\n          for (var _i9 = 0; _i9 < vertexCount; _i9++) {\n            var _prev = prevVertices[_i9];\n            deform[_i9] += _prev + (nextVertices[_i9] - _prev) * percent;\n          }\n        }\n      } else {\n        for (var _i10 = 0; _i10 < vertexCount; _i10++) {\n          var _prev2 = prevVertices[_i10];\n          deform[_i10] = _prev2 + (nextVertices[_i10] - _prev2) * percent;\n        }\n      }\n    } else {\n      switch (blend) {\n        case MixBlend.setup:\n          {\n            var _vertexAttachment6 = slotAttachment;\n\n            if (!_vertexAttachment6.bones) {\n              // Unweighted vertex positions, with alpha.\n              var _setupVertices5 = _vertexAttachment6.vertices;\n\n              for (var _i11 = 0; _i11 < vertexCount; _i11++) {\n                var _prev3 = prevVertices[_i11],\n                    _setup2 = _setupVertices5[_i11];\n                deform[_i11] = _setup2 + (_prev3 + (nextVertices[_i11] - _prev3) * percent - _setup2) * alpha;\n              }\n            } else {\n              // Weighted deform offsets, with alpha.\n              for (var _i12 = 0; _i12 < vertexCount; _i12++) {\n                var _prev4 = prevVertices[_i12];\n                deform[_i12] = (_prev4 + (nextVertices[_i12] - _prev4) * percent) * alpha;\n              }\n            }\n\n            break;\n          }\n\n        case MixBlend.first:\n        case MixBlend.replace:\n          for (var _i13 = 0; _i13 < vertexCount; _i13++) {\n            var _prev5 = prevVertices[_i13];\n            deform[_i13] += (_prev5 + (nextVertices[_i13] - _prev5) * percent - deform[_i13]) * alpha;\n          }\n\n          break;\n\n        case MixBlend.add:\n          var _vertexAttachment5 = slotAttachment;\n\n          if (!_vertexAttachment5.bones) {\n            // Unweighted vertex positions, with alpha.\n            var _setupVertices6 = _vertexAttachment5.vertices;\n\n            for (var _i14 = 0; _i14 < vertexCount; _i14++) {\n              var _prev6 = prevVertices[_i14];\n              deform[_i14] += (_prev6 + (nextVertices[_i14] - _prev6) * percent - _setupVertices6[_i14]) * alpha;\n            }\n          } else {\n            // Weighted deform offsets, with alpha.\n            for (var _i15 = 0; _i15 < vertexCount; _i15++) {\n              var _prev7 = prevVertices[_i15];\n              deform[_i15] += (_prev7 + (nextVertices[_i15] - _prev7) * percent) * alpha;\n            }\n          }\n\n      }\n    }\n  };\n\n  return DeformTimeline;\n}(CurveTimeline);\n/** Fires an {@link Event} when specific animation times are reached. */\n\n\nexports.DeformTimeline = DeformTimeline;\n\nvar EventTimeline = /*#__PURE__*/function (_Timeline3) {\n  _inheritsLoose(EventTimeline, _Timeline3);\n\n  function EventTimeline(frameCount) {\n    var _this19;\n\n    _this19 = _Timeline3.call(this, frameCount, EventTimeline.propertyIds) || this;\n    /** The event for each key frame. */\n\n    _this19.events = null;\n    _this19.events = new Array(frameCount);\n    return _this19;\n  }\n\n  var _proto23 = EventTimeline.prototype;\n\n  _proto23.getFrameCount = function getFrameCount() {\n    return this.frames.length;\n  }\n  /** Sets the time in seconds and the event for the specified key frame. */\n  ;\n\n  _proto23.setFrame = function setFrame(frame, event) {\n    this.frames[frame] = event.time;\n    this.events[frame] = event;\n  }\n  /** Fires events for frames > `lastTime` and <= `time`. */\n  ;\n\n  _proto23.apply = function apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n    if (!firedEvents) return;\n    var frames = this.frames;\n    var frameCount = this.frames.length;\n\n    if (lastTime > time) {\n      // Fire events after last time for looped animations.\n      this.apply(skeleton, lastTime, Number.MAX_VALUE, firedEvents, alpha, blend, direction);\n      lastTime = -1;\n    } else if (lastTime >= frames[frameCount - 1]) // Last time is after last frame.\n      return;\n\n    if (time < frames[0]) return; // Time is before first frame.\n\n    var i = 0;\n    if (lastTime < frames[0]) i = 0;else {\n      i = Timeline.search1(frames, lastTime) + 1;\n      var frameTime = frames[i];\n\n      while (i > 0) {\n        // Fire multiple events with the same frame.\n        if (frames[i - 1] != frameTime) break;\n        i--;\n      }\n    }\n\n    for (; i < frameCount && time >= frames[i]; i++) {\n      firedEvents.push(this.events[i]);\n    }\n  };\n\n  return EventTimeline;\n}(Timeline);\n\nexports.EventTimeline = EventTimeline;\nEventTimeline.propertyIds = [\"\" + Property.event];\n/** Changes a skeleton's {@link Skeleton#drawOrder}. */\n\nvar DrawOrderTimeline = /*#__PURE__*/function (_Timeline4) {\n  _inheritsLoose(DrawOrderTimeline, _Timeline4);\n\n  function DrawOrderTimeline(frameCount) {\n    var _this20;\n\n    _this20 = _Timeline4.call(this, frameCount, DrawOrderTimeline.propertyIds) || this;\n    /** The draw order for each key frame. See {@link #setFrame(int, float, int[])}. */\n\n    _this20.drawOrders = null;\n    _this20.drawOrders = new Array(frameCount);\n    return _this20;\n  }\n\n  var _proto24 = DrawOrderTimeline.prototype;\n\n  _proto24.getFrameCount = function getFrameCount() {\n    return this.frames.length;\n  }\n  /** Sets the time in seconds and the draw order for the specified key frame.\r\n   * @param drawOrder For each slot in {@link Skeleton#slots}, the index of the new draw order. May be null to use setup pose\r\n   *           draw order. */\n  ;\n\n  _proto24.setFrame = function setFrame(frame, time, drawOrder) {\n    this.frames[frame] = time;\n    this.drawOrders[frame] = drawOrder;\n  };\n\n  _proto24.apply = function apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n    if (direction == MixDirection.mixOut) {\n      if (blend == MixBlend.setup) _Utils.Utils.arrayCopy(skeleton.slots, 0, skeleton.drawOrder, 0, skeleton.slots.length);\n      return;\n    }\n\n    if (time < this.frames[0]) {\n      if (blend == MixBlend.setup || blend == MixBlend.first) _Utils.Utils.arrayCopy(skeleton.slots, 0, skeleton.drawOrder, 0, skeleton.slots.length);\n      return;\n    }\n\n    var drawOrderToSetupIndex = this.drawOrders[Timeline.search1(this.frames, time)];\n    if (!drawOrderToSetupIndex) _Utils.Utils.arrayCopy(skeleton.slots, 0, skeleton.drawOrder, 0, skeleton.slots.length);else {\n      var drawOrder = skeleton.drawOrder;\n      var slots = skeleton.slots;\n\n      for (var i = 0, n = drawOrderToSetupIndex.length; i < n; i++) {\n        drawOrder[i] = slots[drawOrderToSetupIndex[i]];\n      }\n    }\n  };\n\n  return DrawOrderTimeline;\n}(Timeline);\n\nexports.DrawOrderTimeline = DrawOrderTimeline;\nDrawOrderTimeline.propertyIds = [\"\" + Property.drawOrder];\n/** Changes an IK constraint's {@link IkConstraint#mix}, {@link IkConstraint#softness},\r\n * {@link IkConstraint#bendDirection}, {@link IkConstraint#stretch}, and {@link IkConstraint#compress}. */\n\nvar IkConstraintTimeline = /*#__PURE__*/function (_CurveTimeline19) {\n  _inheritsLoose(IkConstraintTimeline, _CurveTimeline19);\n\n  function IkConstraintTimeline(frameCount, bezierCount, ikConstraintIndex) {\n    var _this21;\n\n    _this21 = _CurveTimeline19.call(this, frameCount, bezierCount, [Property.ikConstraint + \"|\" + ikConstraintIndex]) || this;\n    /** The index of the IK constraint slot in {@link Skeleton#ikConstraints} that will be changed. */\n\n    _this21.ikConstraintIndex = 0;\n    _this21.ikConstraintIndex = ikConstraintIndex;\n    return _this21;\n  }\n\n  var _proto25 = IkConstraintTimeline.prototype;\n\n  _proto25.getFrameEntries = function getFrameEntries() {\n    return 6\n    /*ENTRIES*/\n    ;\n  }\n  /** Sets the time in seconds, mix, softness, bend direction, compress, and stretch for the specified key frame. */\n  ;\n\n  _proto25.setFrame = function setFrame(frame, time, mix, softness, bendDirection, compress, stretch) {\n    frame *= 6\n    /*ENTRIES*/\n    ;\n    this.frames[frame] = time;\n    this.frames[frame + 1\n    /*MIX*/\n    ] = mix;\n    this.frames[frame + 2\n    /*SOFTNESS*/\n    ] = softness;\n    this.frames[frame + 3\n    /*BEND_DIRECTION*/\n    ] = bendDirection;\n    this.frames[frame + 4\n    /*COMPRESS*/\n    ] = compress ? 1 : 0;\n    this.frames[frame + 5\n    /*STRETCH*/\n    ] = stretch ? 1 : 0;\n  };\n\n  _proto25.apply = function apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n    var constraint = skeleton.ikConstraints[this.ikConstraintIndex];\n    if (!constraint.active) return;\n    var frames = this.frames;\n\n    if (time < frames[0]) {\n      switch (blend) {\n        case MixBlend.setup:\n          constraint.mix = constraint.data.mix;\n          constraint.softness = constraint.data.softness;\n          constraint.bendDirection = constraint.data.bendDirection;\n          constraint.compress = constraint.data.compress;\n          constraint.stretch = constraint.data.stretch;\n          return;\n\n        case MixBlend.first:\n          constraint.mix += (constraint.data.mix - constraint.mix) * alpha;\n          constraint.softness += (constraint.data.softness - constraint.softness) * alpha;\n          constraint.bendDirection = constraint.data.bendDirection;\n          constraint.compress = constraint.data.compress;\n          constraint.stretch = constraint.data.stretch;\n      }\n\n      return;\n    }\n\n    var mix = 0,\n        softness = 0;\n    var i = Timeline.search(frames, time, 6\n    /*ENTRIES*/\n    );\n    var curveType = this.curves[i / 6\n    /*ENTRIES*/\n    ];\n\n    switch (curveType) {\n      case 0\n      /*LINEAR*/\n      :\n        var before = frames[i];\n        mix = frames[i + 1\n        /*MIX*/\n        ];\n        softness = frames[i + 2\n        /*SOFTNESS*/\n        ];\n        var t = (time - before) / (frames[i + 6\n        /*ENTRIES*/\n        ] - before);\n        mix += (frames[i + 6\n        /*ENTRIES*/\n        + 1\n        /*MIX*/\n        ] - mix) * t;\n        softness += (frames[i + 6\n        /*ENTRIES*/\n        + 2\n        /*SOFTNESS*/\n        ] - softness) * t;\n        break;\n\n      case 1\n      /*STEPPED*/\n      :\n        mix = frames[i + 1\n        /*MIX*/\n        ];\n        softness = frames[i + 2\n        /*SOFTNESS*/\n        ];\n        break;\n\n      default:\n        mix = this.getBezierValue(time, i, 1\n        /*MIX*/\n        , curveType - 2\n        /*BEZIER*/\n        );\n        softness = this.getBezierValue(time, i, 2\n        /*SOFTNESS*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        - 2\n        /*BEZIER*/\n        );\n    }\n\n    if (blend == MixBlend.setup) {\n      constraint.mix = constraint.data.mix + (mix - constraint.data.mix) * alpha;\n      constraint.softness = constraint.data.softness + (softness - constraint.data.softness) * alpha;\n\n      if (direction == MixDirection.mixOut) {\n        constraint.bendDirection = constraint.data.bendDirection;\n        constraint.compress = constraint.data.compress;\n        constraint.stretch = constraint.data.stretch;\n      } else {\n        constraint.bendDirection = frames[i + 3\n        /*BEND_DIRECTION*/\n        ];\n        constraint.compress = frames[i + 4\n        /*COMPRESS*/\n        ] != 0;\n        constraint.stretch = frames[i + 5\n        /*STRETCH*/\n        ] != 0;\n      }\n    } else {\n      constraint.mix += (mix - constraint.mix) * alpha;\n      constraint.softness += (softness - constraint.softness) * alpha;\n\n      if (direction == MixDirection.mixIn) {\n        constraint.bendDirection = frames[i + 3\n        /*BEND_DIRECTION*/\n        ];\n        constraint.compress = frames[i + 4\n        /*COMPRESS*/\n        ] != 0;\n        constraint.stretch = frames[i + 5\n        /*STRETCH*/\n        ] != 0;\n      }\n    }\n  };\n\n  return IkConstraintTimeline;\n}(CurveTimeline);\n/** Changes a transform constraint's {@link TransformConstraint#rotateMix}, {@link TransformConstraint#translateMix},\r\n * {@link TransformConstraint#scaleMix}, and {@link TransformConstraint#shearMix}. */\n\n\nexports.IkConstraintTimeline = IkConstraintTimeline;\n\nvar TransformConstraintTimeline = /*#__PURE__*/function (_CurveTimeline20) {\n  _inheritsLoose(TransformConstraintTimeline, _CurveTimeline20);\n\n  function TransformConstraintTimeline(frameCount, bezierCount, transformConstraintIndex) {\n    var _this22;\n\n    _this22 = _CurveTimeline20.call(this, frameCount, bezierCount, [Property.transformConstraint + \"|\" + transformConstraintIndex]) || this;\n    /** The index of the transform constraint slot in {@link Skeleton#transformConstraints} that will be changed. */\n\n    _this22.transformConstraintIndex = 0;\n    _this22.transformConstraintIndex = transformConstraintIndex;\n    return _this22;\n  }\n\n  var _proto26 = TransformConstraintTimeline.prototype;\n\n  _proto26.getFrameEntries = function getFrameEntries() {\n    return 7\n    /*ENTRIES*/\n    ;\n  }\n  /** The time in seconds, rotate mix, translate mix, scale mix, and shear mix for the specified key frame. */\n  ;\n\n  _proto26.setFrame = function setFrame(frame, time, mixRotate, mixX, mixY, mixScaleX, mixScaleY, mixShearY) {\n    var frames = this.frames;\n    frame *= 7\n    /*ENTRIES*/\n    ;\n    frames[frame] = time;\n    frames[frame + 1\n    /*ROTATE*/\n    ] = mixRotate;\n    frames[frame + 2\n    /*X*/\n    ] = mixX;\n    frames[frame + 3\n    /*Y*/\n    ] = mixY;\n    frames[frame + 4\n    /*SCALEX*/\n    ] = mixScaleX;\n    frames[frame + 5\n    /*SCALEY*/\n    ] = mixScaleY;\n    frames[frame + 6\n    /*SHEARY*/\n    ] = mixShearY;\n  };\n\n  _proto26.apply = function apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n    var constraint = skeleton.transformConstraints[this.transformConstraintIndex];\n    if (!constraint.active) return;\n    var frames = this.frames;\n\n    if (time < frames[0]) {\n      var data = constraint.data;\n\n      switch (blend) {\n        case MixBlend.setup:\n          constraint.mixRotate = data.mixRotate;\n          constraint.mixX = data.mixX;\n          constraint.mixY = data.mixY;\n          constraint.mixScaleX = data.mixScaleX;\n          constraint.mixScaleY = data.mixScaleY;\n          constraint.mixShearY = data.mixShearY;\n          return;\n\n        case MixBlend.first:\n          constraint.mixRotate += (data.mixRotate - constraint.mixRotate) * alpha;\n          constraint.mixX += (data.mixX - constraint.mixX) * alpha;\n          constraint.mixY += (data.mixY - constraint.mixY) * alpha;\n          constraint.mixScaleX += (data.mixScaleX - constraint.mixScaleX) * alpha;\n          constraint.mixScaleY += (data.mixScaleY - constraint.mixScaleY) * alpha;\n          constraint.mixShearY += (data.mixShearY - constraint.mixShearY) * alpha;\n      }\n\n      return;\n    }\n\n    var rotate, x, y, scaleX, scaleY, shearY;\n    var i = Timeline.search(frames, time, 7\n    /*ENTRIES*/\n    );\n    var curveType = this.curves[i / 7\n    /*ENTRIES*/\n    ];\n\n    switch (curveType) {\n      case 0\n      /*LINEAR*/\n      :\n        var before = frames[i];\n        rotate = frames[i + 1\n        /*ROTATE*/\n        ];\n        x = frames[i + 2\n        /*X*/\n        ];\n        y = frames[i + 3\n        /*Y*/\n        ];\n        scaleX = frames[i + 4\n        /*SCALEX*/\n        ];\n        scaleY = frames[i + 5\n        /*SCALEY*/\n        ];\n        shearY = frames[i + 6\n        /*SHEARY*/\n        ];\n        var t = (time - before) / (frames[i + 7\n        /*ENTRIES*/\n        ] - before);\n        rotate += (frames[i + 7\n        /*ENTRIES*/\n        + 1\n        /*ROTATE*/\n        ] - rotate) * t;\n        x += (frames[i + 7\n        /*ENTRIES*/\n        + 2\n        /*X*/\n        ] - x) * t;\n        y += (frames[i + 7\n        /*ENTRIES*/\n        + 3\n        /*Y*/\n        ] - y) * t;\n        scaleX += (frames[i + 7\n        /*ENTRIES*/\n        + 4\n        /*SCALEX*/\n        ] - scaleX) * t;\n        scaleY += (frames[i + 7\n        /*ENTRIES*/\n        + 5\n        /*SCALEY*/\n        ] - scaleY) * t;\n        shearY += (frames[i + 7\n        /*ENTRIES*/\n        + 6\n        /*SHEARY*/\n        ] - shearY) * t;\n        break;\n\n      case 1\n      /*STEPPED*/\n      :\n        rotate = frames[i + 1\n        /*ROTATE*/\n        ];\n        x = frames[i + 2\n        /*X*/\n        ];\n        y = frames[i + 3\n        /*Y*/\n        ];\n        scaleX = frames[i + 4\n        /*SCALEX*/\n        ];\n        scaleY = frames[i + 5\n        /*SCALEY*/\n        ];\n        shearY = frames[i + 6\n        /*SHEARY*/\n        ];\n        break;\n\n      default:\n        rotate = this.getBezierValue(time, i, 1\n        /*ROTATE*/\n        , curveType - 2\n        /*BEZIER*/\n        );\n        x = this.getBezierValue(time, i, 2\n        /*X*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        - 2\n        /*BEZIER*/\n        );\n        y = this.getBezierValue(time, i, 3\n        /*Y*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        * 2 - 2\n        /*BEZIER*/\n        );\n        scaleX = this.getBezierValue(time, i, 4\n        /*SCALEX*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        * 3 - 2\n        /*BEZIER*/\n        );\n        scaleY = this.getBezierValue(time, i, 5\n        /*SCALEY*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        * 4 - 2\n        /*BEZIER*/\n        );\n        shearY = this.getBezierValue(time, i, 6\n        /*SHEARY*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        * 5 - 2\n        /*BEZIER*/\n        );\n    }\n\n    if (blend == MixBlend.setup) {\n      var _data = constraint.data;\n      constraint.mixRotate = _data.mixRotate + (rotate - _data.mixRotate) * alpha;\n      constraint.mixX = _data.mixX + (x - _data.mixX) * alpha;\n      constraint.mixY = _data.mixY + (y - _data.mixY) * alpha;\n      constraint.mixScaleX = _data.mixScaleX + (scaleX - _data.mixScaleX) * alpha;\n      constraint.mixScaleY = _data.mixScaleY + (scaleY - _data.mixScaleY) * alpha;\n      constraint.mixShearY = _data.mixShearY + (shearY - _data.mixShearY) * alpha;\n    } else {\n      constraint.mixRotate += (rotate - constraint.mixRotate) * alpha;\n      constraint.mixX += (x - constraint.mixX) * alpha;\n      constraint.mixY += (y - constraint.mixY) * alpha;\n      constraint.mixScaleX += (scaleX - constraint.mixScaleX) * alpha;\n      constraint.mixScaleY += (scaleY - constraint.mixScaleY) * alpha;\n      constraint.mixShearY += (shearY - constraint.mixShearY) * alpha;\n    }\n  };\n\n  return TransformConstraintTimeline;\n}(CurveTimeline);\n/** Changes a path constraint's {@link PathConstraint#position}. */\n\n\nexports.TransformConstraintTimeline = TransformConstraintTimeline;\n\nvar PathConstraintPositionTimeline = /*#__PURE__*/function (_CurveTimeline21) {\n  _inheritsLoose(PathConstraintPositionTimeline, _CurveTimeline21);\n\n  function PathConstraintPositionTimeline(frameCount, bezierCount, pathConstraintIndex) {\n    var _this23;\n\n    _this23 = _CurveTimeline21.call(this, frameCount, bezierCount, Property.pathConstraintPosition + \"|\" + pathConstraintIndex) || this;\n    /** The index of the path constraint slot in {@link Skeleton#pathConstraints} that will be changed. */\n\n    _this23.pathConstraintIndex = 0;\n    _this23.pathConstraintIndex = pathConstraintIndex;\n    return _this23;\n  }\n\n  var _proto27 = PathConstraintPositionTimeline.prototype;\n\n  _proto27.apply = function apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n    var constraint = skeleton.pathConstraints[this.pathConstraintIndex];\n    if (!constraint.active) return;\n    var frames = this.frames;\n\n    if (time < frames[0]) {\n      switch (blend) {\n        case MixBlend.setup:\n          constraint.position = constraint.data.position;\n          return;\n\n        case MixBlend.first:\n          constraint.position += (constraint.data.position - constraint.position) * alpha;\n      }\n\n      return;\n    }\n\n    var position = this.getCurveValue(time);\n    if (blend == MixBlend.setup) constraint.position = constraint.data.position + (position - constraint.data.position) * alpha;else constraint.position += (position - constraint.position) * alpha;\n  };\n\n  return PathConstraintPositionTimeline;\n}(CurveTimeline1);\n/** Changes a path constraint's {@link PathConstraint#spacing}. */\n\n\nexports.PathConstraintPositionTimeline = PathConstraintPositionTimeline;\n\nvar PathConstraintSpacingTimeline = /*#__PURE__*/function (_CurveTimeline22) {\n  _inheritsLoose(PathConstraintSpacingTimeline, _CurveTimeline22);\n\n  function PathConstraintSpacingTimeline(frameCount, bezierCount, pathConstraintIndex) {\n    var _this24;\n\n    _this24 = _CurveTimeline22.call(this, frameCount, bezierCount, Property.pathConstraintSpacing + \"|\" + pathConstraintIndex) || this;\n    /** The index of the path constraint slot in {@link Skeleton#getPathConstraints()} that will be changed. */\n\n    _this24.pathConstraintIndex = 0;\n    _this24.pathConstraintIndex = pathConstraintIndex;\n    return _this24;\n  }\n\n  var _proto28 = PathConstraintSpacingTimeline.prototype;\n\n  _proto28.apply = function apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n    var constraint = skeleton.pathConstraints[this.pathConstraintIndex];\n    if (!constraint.active) return;\n    var frames = this.frames;\n\n    if (time < frames[0]) {\n      switch (blend) {\n        case MixBlend.setup:\n          constraint.spacing = constraint.data.spacing;\n          return;\n\n        case MixBlend.first:\n          constraint.spacing += (constraint.data.spacing - constraint.spacing) * alpha;\n      }\n\n      return;\n    }\n\n    var spacing = this.getCurveValue(time);\n    if (blend == MixBlend.setup) constraint.spacing = constraint.data.spacing + (spacing - constraint.data.spacing) * alpha;else constraint.spacing += (spacing - constraint.spacing) * alpha;\n  };\n\n  return PathConstraintSpacingTimeline;\n}(CurveTimeline1);\n/** Changes a transform constraint's {@link PathConstraint#getMixRotate()}, {@link PathConstraint#getMixX()}, and\r\n * {@link PathConstraint#getMixY()}. */\n\n\nexports.PathConstraintSpacingTimeline = PathConstraintSpacingTimeline;\n\nvar PathConstraintMixTimeline = /*#__PURE__*/function (_CurveTimeline23) {\n  _inheritsLoose(PathConstraintMixTimeline, _CurveTimeline23);\n\n  function PathConstraintMixTimeline(frameCount, bezierCount, pathConstraintIndex) {\n    var _this25;\n\n    _this25 = _CurveTimeline23.call(this, frameCount, bezierCount, [Property.pathConstraintMix + \"|\" + pathConstraintIndex]) || this;\n    /** The index of the path constraint slot in {@link Skeleton#getPathConstraints()} that will be changed. */\n\n    _this25.pathConstraintIndex = 0;\n    _this25.pathConstraintIndex = pathConstraintIndex;\n    return _this25;\n  }\n\n  var _proto29 = PathConstraintMixTimeline.prototype;\n\n  _proto29.getFrameEntries = function getFrameEntries() {\n    return 4\n    /*ENTRIES*/\n    ;\n  };\n\n  _proto29.setFrame = function setFrame(frame, time, mixRotate, mixX, mixY) {\n    var frames = this.frames;\n    frame <<= 2;\n    frames[frame] = time;\n    frames[frame + 1\n    /*ROTATE*/\n    ] = mixRotate;\n    frames[frame + 2\n    /*X*/\n    ] = mixX;\n    frames[frame + 3\n    /*Y*/\n    ] = mixY;\n  };\n\n  _proto29.apply = function apply(skeleton, lastTime, time, firedEvents, alpha, blend, direction) {\n    var constraint = skeleton.pathConstraints[this.pathConstraintIndex];\n    if (!constraint.active) return;\n    var frames = this.frames;\n\n    if (time < frames[0]) {\n      switch (blend) {\n        case MixBlend.setup:\n          constraint.mixRotate = constraint.data.mixRotate;\n          constraint.mixX = constraint.data.mixX;\n          constraint.mixY = constraint.data.mixY;\n          return;\n\n        case MixBlend.first:\n          constraint.mixRotate += (constraint.data.mixRotate - constraint.mixRotate) * alpha;\n          constraint.mixX += (constraint.data.mixX - constraint.mixX) * alpha;\n          constraint.mixY += (constraint.data.mixY - constraint.mixY) * alpha;\n      }\n\n      return;\n    }\n\n    var rotate, x, y;\n    var i = Timeline.search(frames, time, 4\n    /*ENTRIES*/\n    );\n    var curveType = this.curves[i >> 2];\n\n    switch (curveType) {\n      case 0\n      /*LINEAR*/\n      :\n        var before = frames[i];\n        rotate = frames[i + 1\n        /*ROTATE*/\n        ];\n        x = frames[i + 2\n        /*X*/\n        ];\n        y = frames[i + 3\n        /*Y*/\n        ];\n        var t = (time - before) / (frames[i + 4\n        /*ENTRIES*/\n        ] - before);\n        rotate += (frames[i + 4\n        /*ENTRIES*/\n        + 1\n        /*ROTATE*/\n        ] - rotate) * t;\n        x += (frames[i + 4\n        /*ENTRIES*/\n        + 2\n        /*X*/\n        ] - x) * t;\n        y += (frames[i + 4\n        /*ENTRIES*/\n        + 3\n        /*Y*/\n        ] - y) * t;\n        break;\n\n      case 1\n      /*STEPPED*/\n      :\n        rotate = frames[i + 1\n        /*ROTATE*/\n        ];\n        x = frames[i + 2\n        /*X*/\n        ];\n        y = frames[i + 3\n        /*Y*/\n        ];\n        break;\n\n      default:\n        rotate = this.getBezierValue(time, i, 1\n        /*ROTATE*/\n        , curveType - 2\n        /*BEZIER*/\n        );\n        x = this.getBezierValue(time, i, 2\n        /*X*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        - 2\n        /*BEZIER*/\n        );\n        y = this.getBezierValue(time, i, 3\n        /*Y*/\n        , curveType + 18\n        /*BEZIER_SIZE*/\n        * 2 - 2\n        /*BEZIER*/\n        );\n    }\n\n    if (blend == MixBlend.setup) {\n      var data = constraint.data;\n      constraint.mixRotate = data.mixRotate + (rotate - data.mixRotate) * alpha;\n      constraint.mixX = data.mixX + (x - data.mixX) * alpha;\n      constraint.mixY = data.mixY + (y - data.mixY) * alpha;\n    } else {\n      constraint.mixRotate += (rotate - constraint.mixRotate) * alpha;\n      constraint.mixX += (x - constraint.mixX) * alpha;\n      constraint.mixY += (y - constraint.mixY) * alpha;\n    }\n  };\n\n  return PathConstraintMixTimeline;\n}(CurveTimeline);\n\nexports.PathConstraintMixTimeline = PathConstraintMixTimeline;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","\"use strict\";\n\nexports.__esModule = true;\nexports.TrackEntry = exports.SUBSEQUENT = exports.SETUP = exports.HOLD_SUBSEQUENT = exports.HOLD_MIX = exports.HOLD_FIRST = exports.FIRST = exports.EventType = exports.EventQueue = exports.CURRENT = exports.AnimationStateAdapter = exports.AnimationState = void 0;\n\nvar _Animation = require(\"./Animation\");\n\nvar _Utils = require(\"./Utils\");\n\n/******************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated January 1, 2020. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2020, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\r\n * or otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\n\n/** Applies animations over time, queues animations for later playback, mixes (crossfading) between animations, and applies\r\n * multiple animations on top of each other (layering).\r\n *\r\n * See [Applying Animations](http://esotericsoftware.com/spine-applying-animations/) in the Spine Runtimes Guide. */\nvar AnimationState = /*#__PURE__*/function () {\n  function AnimationState(data) {\n    /** The AnimationStateData to look up mix durations. */\n    this.data = null;\n    /** The list of tracks that currently have animations, which may contain null entries. */\n\n    this.tracks = new Array();\n    /** Multiplier for the delta time when the animation state is updated, causing time for all animations and mixes to play slower\r\n     * or faster. Defaults to 1.\r\n     *\r\n     * See TrackEntry {@link TrackEntry#timeScale} for affecting a single animation. */\n\n    this.timeScale = 1;\n    this.unkeyedState = 0;\n    this.events = new Array();\n    this.listeners = new Array();\n    this.queue = new EventQueue(this);\n    this.propertyIDs = new _Utils.StringSet();\n    this.animationsChanged = false;\n    this.trackEntryPool = new _Utils.Pool(function () {\n      return new TrackEntry();\n    });\n    this.data = data;\n  }\n\n  AnimationState.emptyAnimation = function emptyAnimation() {\n    if (!_emptyAnimation) _emptyAnimation = new _Animation.Animation(\"<empty>\", [], 0);\n    return _emptyAnimation;\n  }\n  /** Increments each track entry {@link TrackEntry#trackTime()}, setting queued animations as current if needed. */\n  ;\n\n  var _proto = AnimationState.prototype;\n\n  _proto.update = function update(delta) {\n    delta *= this.timeScale;\n    var tracks = this.tracks;\n\n    for (var i = 0, n = tracks.length; i < n; i++) {\n      var current = tracks[i];\n      if (!current) continue;\n      current.animationLast = current.nextAnimationLast;\n      current.trackLast = current.nextTrackLast;\n      var currentDelta = delta * current.timeScale;\n\n      if (current.delay > 0) {\n        current.delay -= currentDelta;\n        if (current.delay > 0) continue;\n        currentDelta = -current.delay;\n        current.delay = 0;\n      }\n\n      var next = current.next;\n\n      if (next) {\n        // When the next entry's delay is passed, change to the next entry, preserving leftover time.\n        var nextTime = current.trackLast - next.delay;\n\n        if (nextTime >= 0) {\n          next.delay = 0;\n          next.trackTime += current.timeScale == 0 ? 0 : (nextTime / current.timeScale + delta) * next.timeScale;\n          current.trackTime += currentDelta;\n          this.setCurrent(i, next, true);\n\n          while (next.mixingFrom) {\n            next.mixTime += delta;\n            next = next.mixingFrom;\n          }\n\n          continue;\n        }\n      } else if (current.trackLast >= current.trackEnd && !current.mixingFrom) {\n        tracks[i] = null;\n        this.queue.end(current);\n        this.clearNext(current);\n        continue;\n      }\n\n      if (current.mixingFrom && this.updateMixingFrom(current, delta)) {\n        // End mixing from entries once all have completed.\n        var from = current.mixingFrom;\n        current.mixingFrom = null;\n        if (from) from.mixingTo = null;\n\n        while (from) {\n          this.queue.end(from);\n          from = from.mixingFrom;\n        }\n      }\n\n      current.trackTime += currentDelta;\n    }\n\n    this.queue.drain();\n  }\n  /** Returns true when all mixing from entries are complete. */\n  ;\n\n  _proto.updateMixingFrom = function updateMixingFrom(to, delta) {\n    var from = to.mixingFrom;\n    if (!from) return true;\n    var finished = this.updateMixingFrom(from, delta);\n    from.animationLast = from.nextAnimationLast;\n    from.trackLast = from.nextTrackLast; // Require mixTime > 0 to ensure the mixing from entry was applied at least once.\n\n    if (to.mixTime > 0 && to.mixTime >= to.mixDuration) {\n      // Require totalAlpha == 0 to ensure mixing is complete, unless mixDuration == 0 (the transition is a single frame).\n      if (from.totalAlpha == 0 || to.mixDuration == 0) {\n        to.mixingFrom = from.mixingFrom;\n        if (from.mixingFrom) from.mixingFrom.mixingTo = to;\n        to.interruptAlpha = from.interruptAlpha;\n        this.queue.end(from);\n      }\n\n      return finished;\n    }\n\n    from.trackTime += delta * from.timeScale;\n    to.mixTime += delta;\n    return false;\n  }\n  /** Poses the skeleton using the track entry animations. There are no side effects other than invoking listeners, so the\r\n   * animation state can be applied to multiple skeletons to pose them identically.\r\n   * @returns True if any animations were applied. */\n  ;\n\n  _proto.apply = function apply(skeleton) {\n    if (!skeleton) throw new Error(\"skeleton cannot be null.\");\n    if (this.animationsChanged) this._animationsChanged();\n    var events = this.events;\n    var tracks = this.tracks;\n    var applied = false;\n\n    for (var _i = 0, _n = tracks.length; _i < _n; _i++) {\n      var current = tracks[_i];\n      if (!current || current.delay > 0) continue;\n      applied = true;\n      var blend = _i == 0 ? _Animation.MixBlend.first : current.mixBlend; // Apply mixing from entries first.\n\n      var mix = current.alpha;\n      if (current.mixingFrom) mix *= this.applyMixingFrom(current, skeleton, blend);else if (current.trackTime >= current.trackEnd && !current.next) mix = 0; // Apply current entry.\n\n      var animationLast = current.animationLast,\n          animationTime = current.getAnimationTime(),\n          applyTime = animationTime;\n      var applyEvents = events;\n\n      if (current.reverse) {\n        applyTime = current.animation.duration - applyTime;\n        applyEvents = null;\n      }\n\n      var timelines = current.animation.timelines;\n      var timelineCount = timelines.length;\n\n      if (_i == 0 && mix == 1 || blend == _Animation.MixBlend.add) {\n        for (var ii = 0; ii < timelineCount; ii++) {\n          // Fixes issue #302 on IOS9 where mix, blend sometimes became undefined and caused assets\n          // to sometimes stop rendering when using color correction, as their RGBA values become NaN.\n          // (https://github.com/pixijs/pixi-spine/issues/302)\n          _Utils.Utils.webkit602BugfixHelper(mix, blend);\n\n          var timeline = timelines[ii];\n          if (timeline instanceof _Animation.AttachmentTimeline) this.applyAttachmentTimeline(timeline, skeleton, applyTime, blend, true);else timeline.apply(skeleton, animationLast, applyTime, applyEvents, mix, blend, _Animation.MixDirection.mixIn);\n        }\n      } else {\n        var timelineMode = current.timelineMode;\n        var firstFrame = current.timelinesRotation.length != timelineCount << 1;\n        if (firstFrame) current.timelinesRotation.length = timelineCount << 1;\n\n        for (var _ii = 0; _ii < timelineCount; _ii++) {\n          var _timeline = timelines[_ii];\n          var timelineBlend = timelineMode[_ii] == SUBSEQUENT ? blend : _Animation.MixBlend.setup;\n\n          if (_timeline instanceof _Animation.RotateTimeline) {\n            this.applyRotateTimeline(_timeline, skeleton, applyTime, mix, timelineBlend, current.timelinesRotation, _ii << 1, firstFrame);\n          } else if (_timeline instanceof _Animation.AttachmentTimeline) {\n            this.applyAttachmentTimeline(_timeline, skeleton, applyTime, blend, true);\n          } else {\n            // This fixes the WebKit 602 specific issue described at http://esotericsoftware.com/forum/iOS-10-disappearing-graphics-10109\n            _Utils.Utils.webkit602BugfixHelper(mix, blend);\n\n            _timeline.apply(skeleton, animationLast, applyTime, applyEvents, mix, timelineBlend, _Animation.MixDirection.mixIn);\n          }\n        }\n      }\n\n      this.queueEvents(current, animationTime);\n      events.length = 0;\n      current.nextAnimationLast = animationTime;\n      current.nextTrackLast = current.trackTime;\n    } // Set slots attachments to the setup pose, if needed. This occurs if an animation that is mixing out sets attachments so\n    // subsequent timelines see any deform, but the subsequent timelines don't set an attachment (eg they are also mixing out or\n    // the time is before the first key).\n\n\n    var setupState = this.unkeyedState + SETUP;\n    var slots = skeleton.slots;\n\n    for (var i = 0, n = skeleton.slots.length; i < n; i++) {\n      var slot = slots[i];\n\n      if (slot.attachmentState == setupState) {\n        var attachmentName = slot.data.attachmentName;\n        slot.setAttachment(!attachmentName ? null : skeleton.getAttachment(slot.data.index, attachmentName));\n      }\n    }\n\n    this.unkeyedState += 2; // Increasing after each use avoids the need to reset attachmentState for every slot.\n\n    this.queue.drain();\n    return applied;\n  };\n\n  _proto.applyMixingFrom = function applyMixingFrom(to, skeleton, blend) {\n    var from = to.mixingFrom;\n    if (from.mixingFrom) this.applyMixingFrom(from, skeleton, blend);\n    var mix = 0;\n\n    if (to.mixDuration == 0) {\n      // Single frame mix to undo mixingFrom changes.\n      mix = 1;\n      if (blend == _Animation.MixBlend.first) blend = _Animation.MixBlend.setup;\n    } else {\n      mix = to.mixTime / to.mixDuration;\n      if (mix > 1) mix = 1;\n      if (blend != _Animation.MixBlend.first) blend = from.mixBlend;\n    }\n\n    var attachments = mix < from.attachmentThreshold,\n        drawOrder = mix < from.drawOrderThreshold;\n    var timelines = from.animation.timelines;\n    var timelineCount = timelines.length;\n    var alphaHold = from.alpha * to.interruptAlpha,\n        alphaMix = alphaHold * (1 - mix);\n    var animationLast = from.animationLast,\n        animationTime = from.getAnimationTime(),\n        applyTime = animationTime;\n    var events = null;\n    if (from.reverse) applyTime = from.animation.duration - applyTime;else if (mix < from.eventThreshold) events = this.events;\n\n    if (blend == _Animation.MixBlend.add) {\n      for (var i = 0; i < timelineCount; i++) {\n        timelines[i].apply(skeleton, animationLast, applyTime, events, alphaMix, blend, _Animation.MixDirection.mixOut);\n      }\n    } else {\n      var timelineMode = from.timelineMode;\n      var timelineHoldMix = from.timelineHoldMix;\n      var firstFrame = from.timelinesRotation.length != timelineCount << 1;\n      if (firstFrame) from.timelinesRotation.length = timelineCount << 1;\n      from.totalAlpha = 0;\n\n      for (var _i2 = 0; _i2 < timelineCount; _i2++) {\n        var timeline = timelines[_i2];\n        var direction = _Animation.MixDirection.mixOut;\n        var timelineBlend = void 0;\n        var alpha = 0;\n\n        switch (timelineMode[_i2]) {\n          case SUBSEQUENT:\n            if (!drawOrder && timeline instanceof _Animation.DrawOrderTimeline) continue;\n            timelineBlend = blend;\n            alpha = alphaMix;\n            break;\n\n          case FIRST:\n            timelineBlend = _Animation.MixBlend.setup;\n            alpha = alphaMix;\n            break;\n\n          case HOLD_SUBSEQUENT:\n            timelineBlend = blend;\n            alpha = alphaHold;\n            break;\n\n          case HOLD_FIRST:\n            timelineBlend = _Animation.MixBlend.setup;\n            alpha = alphaHold;\n            break;\n\n          default:\n            timelineBlend = _Animation.MixBlend.setup;\n            var holdMix = timelineHoldMix[_i2];\n            alpha = alphaHold * Math.max(0, 1 - holdMix.mixTime / holdMix.mixDuration);\n            break;\n        }\n\n        from.totalAlpha += alpha;\n        if (timeline instanceof _Animation.RotateTimeline) this.applyRotateTimeline(timeline, skeleton, applyTime, alpha, timelineBlend, from.timelinesRotation, _i2 << 1, firstFrame);else if (timeline instanceof _Animation.AttachmentTimeline) this.applyAttachmentTimeline(timeline, skeleton, applyTime, timelineBlend, attachments);else {\n          // This fixes the WebKit 602 specific issue described at http://esotericsoftware.com/forum/iOS-10-disappearing-graphics-10109\n          _Utils.Utils.webkit602BugfixHelper(alpha, blend);\n\n          if (drawOrder && timeline instanceof _Animation.DrawOrderTimeline && timelineBlend == _Animation.MixBlend.setup) direction = _Animation.MixDirection.mixIn;\n          timeline.apply(skeleton, animationLast, applyTime, events, alpha, timelineBlend, direction);\n        }\n      }\n    }\n\n    if (to.mixDuration > 0) this.queueEvents(from, animationTime);\n    this.events.length = 0;\n    from.nextAnimationLast = animationTime;\n    from.nextTrackLast = from.trackTime;\n    return mix;\n  };\n\n  _proto.applyAttachmentTimeline = function applyAttachmentTimeline(timeline, skeleton, time, blend, attachments) {\n    var slot = skeleton.slots[timeline.slotIndex];\n    if (!slot.bone.active) return;\n\n    if (time < timeline.frames[0]) {\n      // Time is before first frame.\n      if (blend == _Animation.MixBlend.setup || blend == _Animation.MixBlend.first) this.setAttachment(skeleton, slot, slot.data.attachmentName, attachments);\n    } else this.setAttachment(skeleton, slot, timeline.attachmentNames[_Animation.Timeline.search1(timeline.frames, time)], attachments); // If an attachment wasn't set (ie before the first frame or attachments is false), set the setup attachment later.\n\n\n    if (slot.attachmentState <= this.unkeyedState) slot.attachmentState = this.unkeyedState + SETUP;\n  };\n\n  _proto.setAttachment = function setAttachment(skeleton, slot, attachmentName, attachments) {\n    slot.setAttachment(!attachmentName ? null : skeleton.getAttachment(slot.data.index, attachmentName));\n    if (attachments) slot.attachmentState = this.unkeyedState + CURRENT;\n  };\n\n  _proto.applyRotateTimeline = function applyRotateTimeline(timeline, skeleton, time, alpha, blend, timelinesRotation, i, firstFrame) {\n    if (firstFrame) timelinesRotation[i] = 0;\n\n    if (alpha == 1) {\n      timeline.apply(skeleton, 0, time, null, 1, blend, _Animation.MixDirection.mixIn);\n      return;\n    }\n\n    var bone = skeleton.bones[timeline.boneIndex];\n    if (!bone.active) return;\n    var frames = timeline.frames;\n    var r1 = 0,\n        r2 = 0;\n\n    if (time < frames[0]) {\n      switch (blend) {\n        case _Animation.MixBlend.setup:\n          bone.rotation = bone.data.rotation;\n\n        default:\n          return;\n\n        case _Animation.MixBlend.first:\n          r1 = bone.rotation;\n          r2 = bone.data.rotation;\n      }\n    } else {\n      r1 = blend == _Animation.MixBlend.setup ? bone.data.rotation : bone.rotation;\n      r2 = bone.data.rotation + timeline.getCurveValue(time);\n    } // Mix between rotations using the direction of the shortest route on the first frame while detecting crosses.\n\n\n    var total = 0,\n        diff = r2 - r1;\n    diff -= (16384 - (16384.499999999996 - diff / 360 | 0)) * 360;\n\n    if (diff == 0) {\n      total = timelinesRotation[i];\n    } else {\n      var lastTotal = 0,\n          lastDiff = 0;\n\n      if (firstFrame) {\n        lastTotal = 0;\n        lastDiff = diff;\n      } else {\n        lastTotal = timelinesRotation[i]; // Angle and direction of mix, including loops.\n\n        lastDiff = timelinesRotation[i + 1]; // Difference between bones.\n      }\n\n      var current = diff > 0,\n          dir = lastTotal >= 0; // Detect cross at 0 (not 180).\n\n      if (_Utils.MathUtils.signum(lastDiff) != _Utils.MathUtils.signum(diff) && Math.abs(lastDiff) <= 90) {\n        // A cross after a 360 rotation is a loop.\n        if (Math.abs(lastTotal) > 180) lastTotal += 360 * _Utils.MathUtils.signum(lastTotal);\n        dir = current;\n      }\n\n      total = diff + lastTotal - lastTotal % 360; // Store loops as part of lastTotal.\n\n      if (dir != current) total += 360 * _Utils.MathUtils.signum(lastTotal);\n      timelinesRotation[i] = total;\n    }\n\n    timelinesRotation[i + 1] = diff;\n    bone.rotation = r1 + total * alpha;\n  };\n\n  _proto.queueEvents = function queueEvents(entry, animationTime) {\n    var animationStart = entry.animationStart,\n        animationEnd = entry.animationEnd;\n    var duration = animationEnd - animationStart;\n    var trackLastWrapped = entry.trackLast % duration; // Queue events before complete.\n\n    var events = this.events;\n    var i = 0,\n        n = events.length;\n\n    for (; i < n; i++) {\n      var event = events[i];\n      if (event.time < trackLastWrapped) break;\n      if (event.time > animationEnd) continue; // Discard events outside animation start/end.\n\n      this.queue.event(entry, event);\n    } // Queue complete if completed a loop iteration or the animation.\n\n\n    var complete = false;\n    if (entry.loop) complete = duration == 0 || trackLastWrapped > entry.trackTime % duration;else complete = animationTime >= animationEnd && entry.animationLast < animationEnd;\n    if (complete) this.queue.complete(entry); // Queue events after complete.\n\n    for (; i < n; i++) {\n      var _event = events[i];\n      if (_event.time < animationStart) continue; // Discard events outside animation start/end.\n\n      this.queue.event(entry, _event);\n    }\n  }\n  /** Removes all animations from all tracks, leaving skeletons in their current pose.\r\n   *\r\n   * It may be desired to use {@link AnimationState#setEmptyAnimation()} to mix the skeletons back to the setup pose,\r\n   * rather than leaving them in their current pose. */\n  ;\n\n  _proto.clearTracks = function clearTracks() {\n    var oldDrainDisabled = this.queue.drainDisabled;\n    this.queue.drainDisabled = true;\n\n    for (var i = 0, n = this.tracks.length; i < n; i++) {\n      this.clearTrack(i);\n    }\n\n    this.tracks.length = 0;\n    this.queue.drainDisabled = oldDrainDisabled;\n    this.queue.drain();\n  }\n  /** Removes all animations from the track, leaving skeletons in their current pose.\r\n   *\r\n   * It may be desired to use {@link AnimationState#setEmptyAnimation()} to mix the skeletons back to the setup pose,\r\n   * rather than leaving them in their current pose. */\n  ;\n\n  _proto.clearTrack = function clearTrack(trackIndex) {\n    if (trackIndex >= this.tracks.length) return;\n    var current = this.tracks[trackIndex];\n    if (!current) return;\n    this.queue.end(current);\n    this.clearNext(current);\n    var entry = current;\n\n    while (true) {\n      var from = entry.mixingFrom;\n      if (!from) break;\n      this.queue.end(from);\n      entry.mixingFrom = null;\n      entry.mixingTo = null;\n      entry = from;\n    }\n\n    this.tracks[current.trackIndex] = null;\n    this.queue.drain();\n  };\n\n  _proto.setCurrent = function setCurrent(index, current, interrupt) {\n    var from = this.expandToIndex(index);\n    this.tracks[index] = current;\n    current.previous = null;\n\n    if (from) {\n      if (interrupt) this.queue.interrupt(from);\n      current.mixingFrom = from;\n      from.mixingTo = current;\n      current.mixTime = 0; // Store the interrupted mix percentage.\n\n      if (from.mixingFrom && from.mixDuration > 0) current.interruptAlpha *= Math.min(1, from.mixTime / from.mixDuration);\n      from.timelinesRotation.length = 0; // Reset rotation for mixing out, in case entry was mixed in.\n    }\n\n    this.queue.start(current);\n  }\n  /** Sets an animation by name.\r\n    *\r\n    * See {@link #setAnimationWith()}. */\n  ;\n\n  _proto.setAnimation = function setAnimation(trackIndex, animationName, loop) {\n    if (loop === void 0) {\n      loop = false;\n    }\n\n    var animation = this.data.skeletonData.findAnimation(animationName);\n    if (!animation) throw new Error(\"Animation not found: \" + animationName);\n    return this.setAnimationWith(trackIndex, animation, loop);\n  }\n  /** Sets the current animation for a track, discarding any queued animations. If the formerly current track entry was never\r\n   * applied to a skeleton, it is replaced (not mixed from).\r\n   * @param loop If true, the animation will repeat. If false it will not, instead its last frame is applied if played beyond its\r\n   *           duration. In either case {@link TrackEntry#trackEnd} determines when the track is cleared.\r\n   * @returns A track entry to allow further customization of animation playback. References to the track entry must not be kept\r\n   *         after the {@link AnimationStateListener#dispose()} event occurs. */\n  ;\n\n  _proto.setAnimationWith = function setAnimationWith(trackIndex, animation, loop) {\n    if (loop === void 0) {\n      loop = false;\n    }\n\n    if (!animation) throw new Error(\"animation cannot be null.\");\n    var interrupt = true;\n    var current = this.expandToIndex(trackIndex);\n\n    if (current) {\n      if (current.nextTrackLast == -1) {\n        // Don't mix from an entry that was never applied.\n        this.tracks[trackIndex] = current.mixingFrom;\n        this.queue.interrupt(current);\n        this.queue.end(current);\n        this.clearNext(current);\n        current = current.mixingFrom;\n        interrupt = false;\n      } else this.clearNext(current);\n    }\n\n    var entry = this.trackEntry(trackIndex, animation, loop, current);\n    this.setCurrent(trackIndex, entry, interrupt);\n    this.queue.drain();\n    return entry;\n  }\n  /** Queues an animation by name.\r\n   *\r\n   * See {@link #addAnimationWith()}. */\n  ;\n\n  _proto.addAnimation = function addAnimation(trackIndex, animationName, loop, delay) {\n    if (loop === void 0) {\n      loop = false;\n    }\n\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    var animation = this.data.skeletonData.findAnimation(animationName);\n    if (!animation) throw new Error(\"Animation not found: \" + animationName);\n    return this.addAnimationWith(trackIndex, animation, loop, delay);\n  }\n  /** Adds an animation to be played after the current or last queued animation for a track. If the track is empty, it is\r\n   * equivalent to calling {@link #setAnimationWith()}.\r\n   * @param delay If > 0, sets {@link TrackEntry#delay}. If <= 0, the delay set is the duration of the previous track entry\r\n   *           minus any mix duration (from the {@link AnimationStateData}) plus the specified `delay` (ie the mix\r\n   *           ends at (`delay` = 0) or before (`delay` < 0) the previous track entry duration). If the\r\n   *           previous entry is looping, its next loop completion is used instead of its duration.\r\n   * @returns A track entry to allow further customization of animation playback. References to the track entry must not be kept\r\n   *         after the {@link AnimationStateListener#dispose()} event occurs. */\n  ;\n\n  _proto.addAnimationWith = function addAnimationWith(trackIndex, animation, loop, delay) {\n    if (loop === void 0) {\n      loop = false;\n    }\n\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (!animation) throw new Error(\"animation cannot be null.\");\n    var last = this.expandToIndex(trackIndex);\n\n    if (last) {\n      while (last.next) {\n        last = last.next;\n      }\n    }\n\n    var entry = this.trackEntry(trackIndex, animation, loop, last);\n\n    if (!last) {\n      this.setCurrent(trackIndex, entry, true);\n      this.queue.drain();\n    } else {\n      last.next = entry;\n      entry.previous = last;\n      if (delay <= 0) delay += last.getTrackComplete() - entry.mixDuration;\n    }\n\n    entry.delay = delay;\n    return entry;\n  }\n  /** Sets an empty animation for a track, discarding any queued animations, and sets the track entry's\r\n   * {@link TrackEntry#mixduration}. An empty animation has no timelines and serves as a placeholder for mixing in or out.\r\n   *\r\n   * Mixing out is done by setting an empty animation with a mix duration using either {@link #setEmptyAnimation()},\r\n   * {@link #setEmptyAnimations()}, or {@link #addEmptyAnimation()}. Mixing to an empty animation causes\r\n   * the previous animation to be applied less and less over the mix duration. Properties keyed in the previous animation\r\n   * transition to the value from lower tracks or to the setup pose value if no lower tracks key the property. A mix duration of\r\n   * 0 still mixes out over one frame.\r\n   *\r\n   * Mixing in is done by first setting an empty animation, then adding an animation using\r\n   * {@link #addAnimation()} and on the returned track entry, set the\r\n   * {@link TrackEntry#setMixDuration()}. Mixing from an empty animation causes the new animation to be applied more and\r\n   * more over the mix duration. Properties keyed in the new animation transition from the value from lower tracks or from the\r\n   * setup pose value if no lower tracks key the property to the value keyed in the new animation. */\n  ;\n\n  _proto.setEmptyAnimation = function setEmptyAnimation(trackIndex, mixDuration) {\n    if (mixDuration === void 0) {\n      mixDuration = 0;\n    }\n\n    var entry = this.setAnimationWith(trackIndex, AnimationState.emptyAnimation(), false);\n    entry.mixDuration = mixDuration;\n    entry.trackEnd = mixDuration;\n    return entry;\n  }\n  /** Adds an empty animation to be played after the current or last queued animation for a track, and sets the track entry's\r\n   * {@link TrackEntry#mixDuration}. If the track is empty, it is equivalent to calling\r\n   * {@link #setEmptyAnimation()}.\r\n   *\r\n   * See {@link #setEmptyAnimation()}.\r\n   * @param delay If > 0, sets {@link TrackEntry#delay}. If <= 0, the delay set is the duration of the previous track entry\r\n   *           minus any mix duration plus the specified `delay` (ie the mix ends at (`delay` = 0) or\r\n   *           before (`delay` < 0) the previous track entry duration). If the previous entry is looping, its next\r\n   *           loop completion is used instead of its duration.\r\n   * @return A track entry to allow further customization of animation playback. References to the track entry must not be kept\r\n   *         after the {@link AnimationStateListener#dispose()} event occurs. */\n  ;\n\n  _proto.addEmptyAnimation = function addEmptyAnimation(trackIndex, mixDuration, delay) {\n    if (mixDuration === void 0) {\n      mixDuration = 0;\n    }\n\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    var entry = this.addAnimationWith(trackIndex, AnimationState.emptyAnimation(), false, delay);\n    if (delay <= 0) entry.delay += entry.mixDuration - mixDuration;\n    entry.mixDuration = mixDuration;\n    entry.trackEnd = mixDuration;\n    return entry;\n  }\n  /** Sets an empty animation for every track, discarding any queued animations, and mixes to it over the specified mix\r\n    * duration. */\n  ;\n\n  _proto.setEmptyAnimations = function setEmptyAnimations(mixDuration) {\n    if (mixDuration === void 0) {\n      mixDuration = 0;\n    }\n\n    var oldDrainDisabled = this.queue.drainDisabled;\n    this.queue.drainDisabled = true;\n\n    for (var i = 0, n = this.tracks.length; i < n; i++) {\n      var current = this.tracks[i];\n      if (current) this.setEmptyAnimation(current.trackIndex, mixDuration);\n    }\n\n    this.queue.drainDisabled = oldDrainDisabled;\n    this.queue.drain();\n  };\n\n  _proto.expandToIndex = function expandToIndex(index) {\n    if (index < this.tracks.length) return this.tracks[index];\n\n    _Utils.Utils.ensureArrayCapacity(this.tracks, index + 1, null);\n\n    this.tracks.length = index + 1;\n    return null;\n  }\n  /** @param last May be null. */\n  ;\n\n  _proto.trackEntry = function trackEntry(trackIndex, animation, loop, last) {\n    var entry = this.trackEntryPool.obtain();\n    entry.reset();\n    entry.trackIndex = trackIndex;\n    entry.animation = animation;\n    entry.loop = loop;\n    entry.holdPrevious = false;\n    entry.eventThreshold = 0;\n    entry.attachmentThreshold = 0;\n    entry.drawOrderThreshold = 0;\n    entry.animationStart = 0;\n    entry.animationEnd = animation.duration;\n    entry.animationLast = -1;\n    entry.nextAnimationLast = -1;\n    entry.delay = 0;\n    entry.trackTime = 0;\n    entry.trackLast = -1;\n    entry.nextTrackLast = -1;\n    entry.trackEnd = Number.MAX_VALUE;\n    entry.timeScale = 1;\n    entry.alpha = 1;\n    entry.interruptAlpha = 1;\n    entry.mixTime = 0;\n    entry.mixDuration = !last ? 0 : this.data.getMix(last.animation, animation);\n    entry.mixBlend = _Animation.MixBlend.replace;\n    return entry;\n  }\n  /** Removes the {@link TrackEntry#getNext() next entry} and all entries after it for the specified entry. */\n  ;\n\n  _proto.clearNext = function clearNext(entry) {\n    var next = entry.next;\n\n    while (next) {\n      this.queue.dispose(next);\n      next = next.next;\n    }\n\n    entry.next = null;\n  };\n\n  _proto._animationsChanged = function _animationsChanged() {\n    this.animationsChanged = false;\n    this.propertyIDs.clear();\n    var tracks = this.tracks;\n\n    for (var i = 0, n = tracks.length; i < n; i++) {\n      var entry = tracks[i];\n      if (!entry) continue;\n\n      while (entry.mixingFrom) {\n        entry = entry.mixingFrom;\n      }\n\n      do {\n        if (!entry.mixingTo || entry.mixBlend != _Animation.MixBlend.add) this.computeHold(entry);\n        entry = entry.mixingTo;\n      } while (entry);\n    }\n  };\n\n  _proto.computeHold = function computeHold(entry) {\n    var to = entry.mixingTo;\n    var timelines = entry.animation.timelines;\n    var timelinesCount = entry.animation.timelines.length;\n    var timelineMode = entry.timelineMode;\n    timelineMode.length = timelinesCount;\n    var timelineHoldMix = entry.timelineHoldMix;\n    timelineHoldMix.length = 0;\n    var propertyIDs = this.propertyIDs;\n\n    if (to && to.holdPrevious) {\n      for (var i = 0; i < timelinesCount; i++) {\n        timelineMode[i] = propertyIDs.addAll(timelines[i].getPropertyIds()) ? HOLD_FIRST : HOLD_SUBSEQUENT;\n      }\n\n      return;\n    }\n\n    outer: for (var _i3 = 0; _i3 < timelinesCount; _i3++) {\n      var timeline = timelines[_i3];\n      var ids = timeline.getPropertyIds();\n      if (!propertyIDs.addAll(ids)) timelineMode[_i3] = SUBSEQUENT;else if (!to || timeline instanceof _Animation.AttachmentTimeline || timeline instanceof _Animation.DrawOrderTimeline || timeline instanceof _Animation.EventTimeline || !to.animation.hasTimeline(ids)) {\n        timelineMode[_i3] = FIRST;\n      } else {\n        for (var next = to.mixingTo; next; next = next.mixingTo) {\n          if (next.animation.hasTimeline(ids)) continue;\n\n          if (entry.mixDuration > 0) {\n            timelineMode[_i3] = HOLD_MIX;\n            timelineHoldMix[_i3] = next;\n            continue outer;\n          }\n\n          break;\n        }\n\n        timelineMode[_i3] = HOLD_FIRST;\n      }\n    }\n  }\n  /** Returns the track entry for the animation currently playing on the track, or null if no animation is currently playing. */\n  ;\n\n  _proto.getCurrent = function getCurrent(trackIndex) {\n    if (trackIndex >= this.tracks.length) return null;\n    return this.tracks[trackIndex];\n  }\n  /** Adds a listener to receive events for all track entries. */\n  ;\n\n  _proto.addListener = function addListener(listener) {\n    if (!listener) throw new Error(\"listener cannot be null.\");\n    this.listeners.push(listener);\n  }\n  /** Removes the listener added with {@link #addListener()}. */\n  ;\n\n  _proto.removeListener = function removeListener(listener) {\n    var index = this.listeners.indexOf(listener);\n    if (index >= 0) this.listeners.splice(index, 1);\n  }\n  /** Removes all listeners added with {@link #addListener()}. */\n  ;\n\n  _proto.clearListeners = function clearListeners() {\n    this.listeners.length = 0;\n  }\n  /** Discards all listener notifications that have not yet been delivered. This can be useful to call from an\r\n   * {@link AnimationStateListener} when it is known that further notifications that may have been already queued for delivery\r\n   * are not wanted because new animations are being set. */\n  ;\n\n  _proto.clearListenerNotifications = function clearListenerNotifications() {\n    this.queue.clear();\n  };\n\n  return AnimationState;\n}();\n/** Stores settings and other state for the playback of an animation on an {@link AnimationState} track.\r\n *\r\n * References to a track entry must not be kept after the {@link AnimationStateListener#dispose()} event occurs. */\n\n\nexports.AnimationState = AnimationState;\n\nvar TrackEntry = /*#__PURE__*/function () {\n  function TrackEntry() {\n    /** The animation to apply for this track entry. */\n    this.animation = null;\n    this.previous = null;\n    /** The animation queued to start after this animation, or null. `next` makes up a linked list. */\n\n    this.next = null;\n    /** The track entry for the previous animation when mixing from the previous animation to this animation, or null if no\r\n     * mixing is currently occuring. When mixing from multiple animations, `mixingFrom` makes up a linked list. */\n\n    this.mixingFrom = null;\n    /** The track entry for the next animation when mixing from this animation to the next animation, or null if no mixing is\r\n     * currently occuring. When mixing to multiple animations, `mixingTo` makes up a linked list. */\n\n    this.mixingTo = null;\n    /** The listener for events generated by this track entry, or null.\r\n     *\r\n     * A track entry returned from {@link AnimationState#setAnimation()} is already the current animation\r\n     * for the track, so the track entry listener {@link AnimationStateListener#start()} will not be called. */\n\n    this.listener = null;\n    /** The index of the track where this track entry is either current or queued.\r\n     *\r\n     * See {@link AnimationState#getCurrent()}. */\n\n    this.trackIndex = 0;\n    /** If true, the animation will repeat. If false it will not, instead its last frame is applied if played beyond its\r\n     * duration. */\n\n    this.loop = false;\n    /** If true, when mixing from the previous animation to this animation, the previous animation is applied as normal instead\r\n     * of being mixed out.\r\n     *\r\n     * When mixing between animations that key the same property, if a lower track also keys that property then the value will\r\n     * briefly dip toward the lower track value during the mix. This happens because the first animation mixes from 100% to 0%\r\n     * while the second animation mixes from 0% to 100%. Setting `holdPrevious` to true applies the first animation\r\n     * at 100% during the mix so the lower track value is overwritten. Such dipping does not occur on the lowest track which\r\n     * keys the property, only when a higher track also keys the property.\r\n     *\r\n     * Snapping will occur if `holdPrevious` is true and this animation does not key all the same properties as the\r\n     * previous animation. */\n\n    this.holdPrevious = false;\n    this.reverse = false;\n    /** When the mix percentage ({@link #mixTime} / {@link #mixDuration}) is less than the\r\n     * `eventThreshold`, event timelines are applied while this animation is being mixed out. Defaults to 0, so event\r\n     * timelines are not applied while this animation is being mixed out. */\n\n    this.eventThreshold = 0;\n    /** When the mix percentage ({@link #mixtime} / {@link #mixDuration}) is less than the\r\n     * `attachmentThreshold`, attachment timelines are applied while this animation is being mixed out. Defaults to\r\n     * 0, so attachment timelines are not applied while this animation is being mixed out. */\n\n    this.attachmentThreshold = 0;\n    /** When the mix percentage ({@link #mixTime} / {@link #mixDuration}) is less than the\r\n     * `drawOrderThreshold`, draw order timelines are applied while this animation is being mixed out. Defaults to 0,\r\n     * so draw order timelines are not applied while this animation is being mixed out. */\n\n    this.drawOrderThreshold = 0;\n    /** Seconds when this animation starts, both initially and after looping. Defaults to 0.\r\n     *\r\n     * When changing the `animationStart` time, it often makes sense to set {@link #animationLast} to the same\r\n     * value to prevent timeline keys before the start time from triggering. */\n\n    this.animationStart = 0;\n    /** Seconds for the last frame of this animation. Non-looping animations won't play past this time. Looping animations will\r\n     * loop back to {@link #animationStart} at this time. Defaults to the animation {@link Animation#duration}. */\n\n    this.animationEnd = 0;\n    /** The time in seconds this animation was last applied. Some timelines use this for one-time triggers. Eg, when this\r\n     * animation is applied, event timelines will fire all events between the `animationLast` time (exclusive) and\r\n     * `animationTime` (inclusive). Defaults to -1 to ensure triggers on frame 0 happen the first time this animation\r\n     * is applied. */\n\n    this.animationLast = 0;\n    this.nextAnimationLast = 0;\n    /** Seconds to postpone playing the animation. When this track entry is the current track entry, `delay`\r\n     * postpones incrementing the {@link #trackTime}. When this track entry is queued, `delay` is the time from\r\n     * the start of the previous animation to when this track entry will become the current track entry (ie when the previous\r\n     * track entry {@link TrackEntry#trackTime} >= this track entry's `delay`).\r\n     *\r\n     * {@link #timeScale} affects the delay. */\n\n    this.delay = 0;\n    /** Current time in seconds this track entry has been the current track entry. The track time determines\r\n     * {@link #animationTime}. The track time can be set to start the animation at a time other than 0, without affecting\r\n     * looping. */\n\n    this.trackTime = 0;\n    this.trackLast = 0;\n    this.nextTrackLast = 0;\n    /** The track time in seconds when this animation will be removed from the track. Defaults to the highest possible float\r\n     * value, meaning the animation will be applied until a new animation is set or the track is cleared. If the track end time\r\n     * is reached, no other animations are queued for playback, and mixing from any previous animations is complete, then the\r\n     * properties keyed by the animation are set to the setup pose and the track is cleared.\r\n     *\r\n     * It may be desired to use {@link AnimationState#addEmptyAnimation()} rather than have the animation\r\n     * abruptly cease being applied. */\n\n    this.trackEnd = 0;\n    /** Multiplier for the delta time when this track entry is updated, causing time for this animation to pass slower or\r\n     * faster. Defaults to 1.\r\n     *\r\n     * {@link #mixTime} is not affected by track entry time scale, so {@link #mixDuration} may need to be adjusted to\r\n     * match the animation speed.\r\n     *\r\n     * When using {@link AnimationState#addAnimation()} with a `delay` <= 0, note the\r\n     * {@link #delay} is set using the mix duration from the {@link AnimationStateData}, assuming time scale to be 1. If\r\n     * the time scale is not 1, the delay may need to be adjusted.\r\n     *\r\n     * See AnimationState {@link AnimationState#timeScale} for affecting all animations. */\n\n    this.timeScale = 0;\n    /** Values < 1 mix this animation with the skeleton's current pose (usually the pose resulting from lower tracks). Defaults\r\n     * to 1, which overwrites the skeleton's current pose with this animation.\r\n     *\r\n     * Typically track 0 is used to completely pose the skeleton, then alpha is used on higher tracks. It doesn't make sense to\r\n     * use alpha on track 0 if the skeleton pose is from the last frame render. */\n\n    this.alpha = 0;\n    /** Seconds from 0 to the {@link #getMixDuration()} when mixing from the previous animation to this animation. May be\r\n     * slightly more than `mixDuration` when the mix is complete. */\n\n    this.mixTime = 0;\n    /** Seconds for mixing from the previous animation to this animation. Defaults to the value provided by AnimationStateData\r\n     * {@link AnimationStateData#getMix()} based on the animation before this animation (if any).\r\n     *\r\n     * A mix duration of 0 still mixes out over one frame to provide the track entry being mixed out a chance to revert the\r\n     * properties it was animating.\r\n     *\r\n     * The `mixDuration` can be set manually rather than use the value from\r\n     * {@link AnimationStateData#getMix()}. In that case, the `mixDuration` can be set for a new\r\n     * track entry only before {@link AnimationState#update(float)} is first called.\r\n     *\r\n     * When using {@link AnimationState#addAnimation()} with a `delay` <= 0, note the\r\n     * {@link #delay} is set using the mix duration from the {@link AnimationStateData}, not a mix duration set\r\n     * afterward. */\n\n    this.mixDuration = 0;\n    this.interruptAlpha = 0;\n    this.totalAlpha = 0;\n    /** Controls how properties keyed in the animation are mixed with lower tracks. Defaults to {@link MixBlend#replace}, which\r\n     * replaces the values from the lower tracks with the animation values. {@link MixBlend#add} adds the animation values to\r\n     * the values from the lower tracks.\r\n     *\r\n     * The `mixBlend` can be set for a new track entry only before {@link AnimationState#apply()} is first\r\n     * called. */\n\n    this.mixBlend = _Animation.MixBlend.replace;\n    this.timelineMode = new Array();\n    this.timelineHoldMix = new Array();\n    this.timelinesRotation = new Array();\n  }\n\n  var _proto2 = TrackEntry.prototype;\n\n  _proto2.reset = function reset() {\n    this.next = null;\n    this.previous = null;\n    this.mixingFrom = null;\n    this.mixingTo = null;\n    this.animation = null;\n    this.listener = null;\n    this.timelineMode.length = 0;\n    this.timelineHoldMix.length = 0;\n    this.timelinesRotation.length = 0;\n  }\n  /** Uses {@link #trackTime} to compute the `animationTime`, which is between {@link #animationStart}\r\n   * and {@link #animationEnd}. When the `trackTime` is 0, the `animationTime` is equal to the\r\n   * `animationStart` time. */\n  ;\n\n  _proto2.getAnimationTime = function getAnimationTime() {\n    if (this.loop) {\n      var duration = this.animationEnd - this.animationStart;\n      if (duration == 0) return this.animationStart;\n      return this.trackTime % duration + this.animationStart;\n    }\n\n    return Math.min(this.trackTime + this.animationStart, this.animationEnd);\n  };\n\n  _proto2.setAnimationLast = function setAnimationLast(animationLast) {\n    this.animationLast = animationLast;\n    this.nextAnimationLast = animationLast;\n  }\n  /** Returns true if at least one loop has been completed.\r\n   *\r\n   * See {@link AnimationStateListener#complete()}. */\n  ;\n\n  _proto2.isComplete = function isComplete() {\n    return this.trackTime >= this.animationEnd - this.animationStart;\n  }\n  /** Resets the rotation directions for mixing this entry's rotate timelines. This can be useful to avoid bones rotating the\r\n   * long way around when using {@link #alpha} and starting animations on other tracks.\r\n   *\r\n   * Mixing with {@link MixBlend#replace} involves finding a rotation between two others, which has two possible solutions:\r\n   * the short way or the long way around. The two rotations likely change over time, so which direction is the short or long\r\n   * way also changes. If the short way was always chosen, bones would flip to the other side when that direction became the\r\n   * long way. TrackEntry chooses the short way the first time it is applied and remembers that direction. */\n  ;\n\n  _proto2.resetRotationDirections = function resetRotationDirections() {\n    this.timelinesRotation.length = 0;\n  };\n\n  _proto2.getTrackComplete = function getTrackComplete() {\n    var duration = this.animationEnd - this.animationStart;\n\n    if (duration != 0) {\n      if (this.loop) return duration * (1 + (this.trackTime / duration | 0)); // Completion of next loop.\n\n      if (this.trackTime < duration) return duration; // Before duration.\n    }\n\n    return this.trackTime; // Next update.\n  };\n\n  return TrackEntry;\n}();\n\nexports.TrackEntry = TrackEntry;\n\nvar EventQueue = /*#__PURE__*/function () {\n  function EventQueue(animState) {\n    this.objects = [];\n    this.drainDisabled = false;\n    this.animState = null;\n    this.animState = animState;\n  }\n\n  var _proto3 = EventQueue.prototype;\n\n  _proto3.start = function start(entry) {\n    this.objects.push(EventType.start);\n    this.objects.push(entry);\n    this.animState.animationsChanged = true;\n  };\n\n  _proto3.interrupt = function interrupt(entry) {\n    this.objects.push(EventType.interrupt);\n    this.objects.push(entry);\n  };\n\n  _proto3.end = function end(entry) {\n    this.objects.push(EventType.end);\n    this.objects.push(entry);\n    this.animState.animationsChanged = true;\n  };\n\n  _proto3.dispose = function dispose(entry) {\n    this.objects.push(EventType.dispose);\n    this.objects.push(entry);\n  };\n\n  _proto3.complete = function complete(entry) {\n    this.objects.push(EventType.complete);\n    this.objects.push(entry);\n  };\n\n  _proto3.event = function event(entry, _event2) {\n    this.objects.push(EventType.event);\n    this.objects.push(entry);\n    this.objects.push(_event2);\n  };\n\n  _proto3.drain = function drain() {\n    if (this.drainDisabled) return;\n    this.drainDisabled = true;\n    var objects = this.objects;\n    var listeners = this.animState.listeners;\n\n    for (var i = 0; i < objects.length; i += 2) {\n      var type = objects[i];\n      var entry = objects[i + 1];\n\n      switch (type) {\n        case EventType.start:\n          if (entry.listener && entry.listener.start) entry.listener.start(entry);\n\n          for (var ii = 0; ii < listeners.length; ii++) {\n            if (listeners[ii].start) listeners[ii].start(entry);\n          }\n\n          break;\n\n        case EventType.interrupt:\n          if (entry.listener && entry.listener.interrupt) entry.listener.interrupt(entry);\n\n          for (var _ii2 = 0; _ii2 < listeners.length; _ii2++) {\n            if (listeners[_ii2].interrupt) listeners[_ii2].interrupt(entry);\n          }\n\n          break;\n\n        case EventType.end:\n          if (entry.listener && entry.listener.end) entry.listener.end(entry);\n\n          for (var _ii3 = 0; _ii3 < listeners.length; _ii3++) {\n            if (listeners[_ii3].end) listeners[_ii3].end(entry);\n          }\n\n        // Fall through.\n\n        case EventType.dispose:\n          if (entry.listener && entry.listener.dispose) entry.listener.dispose(entry);\n\n          for (var _ii4 = 0; _ii4 < listeners.length; _ii4++) {\n            if (listeners[_ii4].dispose) listeners[_ii4].dispose(entry);\n          }\n\n          this.animState.trackEntryPool.free(entry);\n          break;\n\n        case EventType.complete:\n          if (entry.listener && entry.listener.complete) entry.listener.complete(entry);\n\n          for (var _ii5 = 0; _ii5 < listeners.length; _ii5++) {\n            if (listeners[_ii5].complete) listeners[_ii5].complete(entry);\n          }\n\n          break;\n\n        case EventType.event:\n          var event = objects[i++ + 2];\n          if (entry.listener && entry.listener.event) entry.listener.event(entry, event);\n\n          for (var _ii6 = 0; _ii6 < listeners.length; _ii6++) {\n            if (listeners[_ii6].event) listeners[_ii6].event(entry, event);\n          }\n\n          break;\n      }\n    }\n\n    this.clear();\n    this.drainDisabled = false;\n  };\n\n  _proto3.clear = function clear() {\n    this.objects.length = 0;\n  };\n\n  return EventQueue;\n}();\n\nexports.EventQueue = EventQueue;\nvar EventType;\nexports.EventType = EventType;\n\n(function (EventType) {\n  EventType[EventType[\"start\"] = 0] = \"start\";\n  EventType[EventType[\"interrupt\"] = 1] = \"interrupt\";\n  EventType[EventType[\"end\"] = 2] = \"end\";\n  EventType[EventType[\"dispose\"] = 3] = \"dispose\";\n  EventType[EventType[\"complete\"] = 4] = \"complete\";\n  EventType[EventType[\"event\"] = 5] = \"event\";\n})(EventType || (exports.EventType = EventType = {}));\n\nvar AnimationStateAdapter = /*#__PURE__*/function () {\n  function AnimationStateAdapter() {}\n\n  var _proto4 = AnimationStateAdapter.prototype;\n\n  _proto4.start = function start(entry) {};\n\n  _proto4.interrupt = function interrupt(entry) {};\n\n  _proto4.end = function end(entry) {};\n\n  _proto4.dispose = function dispose(entry) {};\n\n  _proto4.complete = function complete(entry) {};\n\n  _proto4.event = function event(entry, _event3) {};\n\n  return AnimationStateAdapter;\n}();\n/** 1. A previously applied timeline has set this property.\r\n *\r\n * Result: Mix from the current pose to the timeline pose. */\n\n\nexports.AnimationStateAdapter = AnimationStateAdapter;\nvar SUBSEQUENT = 0;\n/** 1. This is the first timeline to set this property.\r\n * 2. The next track entry applied after this one does not have a timeline to set this property.\r\n *\r\n * Result: Mix from the setup pose to the timeline pose. */\n\nexports.SUBSEQUENT = SUBSEQUENT;\nvar FIRST = 1;\n/** 1) A previously applied timeline has set this property.<br>\r\n * 2) The next track entry to be applied does have a timeline to set this property.<br>\r\n * 3) The next track entry after that one does not have a timeline to set this property.<br>\r\n * Result: Mix from the current pose to the timeline pose, but do not mix out. This avoids \"dipping\" when crossfading\r\n * animations that key the same property. A subsequent timeline will set this property using a mix. */\n\nexports.FIRST = FIRST;\nvar HOLD_SUBSEQUENT = 2;\n/** 1) This is the first timeline to set this property.<br>\r\n * 2) The next track entry to be applied does have a timeline to set this property.<br>\r\n * 3) The next track entry after that one does not have a timeline to set this property.<br>\r\n * Result: Mix from the setup pose to the timeline pose, but do not mix out. This avoids \"dipping\" when crossfading animations\r\n * that key the same property. A subsequent timeline will set this property using a mix. */\n\nexports.HOLD_SUBSEQUENT = HOLD_SUBSEQUENT;\nvar HOLD_FIRST = 3;\n/** 1. This is the first timeline to set this property.\r\n * 2. The next track entry to be applied does have a timeline to set this property.\r\n * 3. The next track entry after that one does have a timeline to set this property.\r\n * 4. timelineHoldMix stores the first subsequent track entry that does not have a timeline to set this property.\r\n *\r\n * Result: The same as HOLD except the mix percentage from the timelineHoldMix track entry is used. This handles when more than\r\n * 2 track entries in a row have a timeline that sets the same property.\r\n *\r\n * Eg, A -> B -> C -> D where A, B, and C have a timeline setting same property, but D does not. When A is applied, to avoid\r\n * \"dipping\" A is not mixed out, however D (the first entry that doesn't set the property) mixing in is used to mix out A\r\n * (which affects B and C). Without using D to mix out, A would be applied fully until mixing completes, then snap into\r\n * place. */\n\nexports.HOLD_FIRST = HOLD_FIRST;\nvar HOLD_MIX = 4;\nexports.HOLD_MIX = HOLD_MIX;\nvar SETUP = 1;\nexports.SETUP = SETUP;\nvar CURRENT = 2;\nexports.CURRENT = CURRENT;\nvar _emptyAnimation = null;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","\"use strict\";\n\nexports.__esModule = true;\nexports.AnimationStateData = void 0;\n\n/******************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated January 1, 2020. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2020, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\r\n * or otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\n\n/** Stores mix (crossfade) durations to be applied when {@link AnimationState} animations are changed. */\nvar AnimationStateData = /*#__PURE__*/function () {\n  function AnimationStateData(skeletonData) {\n    /** The SkeletonData to look up animations when they are specified by name. */\n    this.skeletonData = null;\n    this.animationToMixTime = {};\n    /** The mix duration to use when no mix duration has been defined between two animations. */\n\n    this.defaultMix = 0;\n    if (!skeletonData) throw new Error(\"skeletonData cannot be null.\");\n    this.skeletonData = skeletonData;\n  }\n  /** Sets a mix duration by animation name.\r\n   *\r\n   * See {@link #setMixWith()}. */\n\n\n  var _proto = AnimationStateData.prototype;\n\n  _proto.setMix = function setMix(fromName, toName, duration) {\n    var from = this.skeletonData.findAnimation(fromName);\n    if (!from) throw new Error(\"Animation not found: \" + fromName);\n    var to = this.skeletonData.findAnimation(toName);\n    if (!to) throw new Error(\"Animation not found: \" + toName);\n    this.setMixWith(from, to, duration);\n  }\n  /** Sets the mix duration when changing from the specified animation to the other.\r\n   *\r\n   * See {@link TrackEntry#mixDuration}. */\n  ;\n\n  _proto.setMixWith = function setMixWith(from, to, duration) {\n    if (!from) throw new Error(\"from cannot be null.\");\n    if (!to) throw new Error(\"to cannot be null.\");\n    var key = from.name + \".\" + to.name;\n    this.animationToMixTime[key] = duration;\n  }\n  /** Returns the mix duration to use when changing from the specified animation to the other, or the {@link #defaultMix} if\r\n    * no mix duration has been set. */\n  ;\n\n  _proto.getMix = function getMix(from, to) {\n    var key = from.name + \".\" + to.name;\n    var value = this.animationToMixTime[key];\n    return value === undefined ? this.defaultMix : value;\n  };\n\n  return AnimationStateData;\n}();\n\nexports.AnimationStateData = AnimationStateData;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQ0E7SUFDYUEsa0I7RUFTWiw0QkFBYUMsWUFBYixFQUF1QztJQVJ2QztJQUNBLG9CQUE2QixJQUE3QjtJQUVBLDBCQUF3QyxFQUF4QztJQUVBOztJQUNBLGtCQUFhLENBQWI7SUFHQyxJQUFJLENBQUNBLFlBQUwsRUFBbUIsTUFBTSxJQUFJQyxLQUFKLENBQVUsOEJBQVYsQ0FBTjtJQUNuQixLQUFLRCxZQUFMLEdBQW9CQSxZQUFwQjtFQUNBO0VBRUQ7Ozs7Ozs7U0FHQUUsTSxHQUFBLGdCQUFRQyxRQUFSLEVBQTBCQyxNQUExQixFQUEwQ0MsUUFBMUMsRUFBMEQ7SUFDekQsSUFBSUMsSUFBSSxHQUFHLEtBQUtOLFlBQUwsQ0FBa0JPLGFBQWxCLENBQWdDSixRQUFoQyxDQUFYO0lBQ0EsSUFBSSxDQUFDRyxJQUFMLEVBQVcsTUFBTSxJQUFJTCxLQUFKLENBQVUsMEJBQTBCRSxRQUFwQyxDQUFOO0lBQ1gsSUFBSUssRUFBRSxHQUFHLEtBQUtSLFlBQUwsQ0FBa0JPLGFBQWxCLENBQWdDSCxNQUFoQyxDQUFUO0lBQ0EsSUFBSSxDQUFDSSxFQUFMLEVBQVMsTUFBTSxJQUFJUCxLQUFKLENBQVUsMEJBQTBCRyxNQUFwQyxDQUFOO0lBQ1QsS0FBS0ssVUFBTCxDQUFnQkgsSUFBaEIsRUFBc0JFLEVBQXRCLEVBQTBCSCxRQUExQjtFQUNBO0VBRUQ7Ozs7O1NBR0FJLFUsR0FBQSxvQkFBWUgsSUFBWixFQUE2QkUsRUFBN0IsRUFBNENILFFBQTVDLEVBQTREO0lBQzNELElBQUksQ0FBQ0MsSUFBTCxFQUFXLE1BQU0sSUFBSUwsS0FBSixDQUFVLHNCQUFWLENBQU47SUFDWCxJQUFJLENBQUNPLEVBQUwsRUFBUyxNQUFNLElBQUlQLEtBQUosQ0FBVSxvQkFBVixDQUFOO0lBQ1QsSUFBSVMsR0FBRyxHQUFHSixJQUFJLENBQUNLLElBQUwsR0FBWSxHQUFaLEdBQWtCSCxFQUFFLENBQUNHLElBQS9CO0lBQ0EsS0FBS0Msa0JBQUwsQ0FBd0JGLEdBQXhCLElBQStCTCxRQUEvQjtFQUNBO0VBRUQ7Ozs7U0FFQVEsTSxHQUFBLGdCQUFRUCxJQUFSLEVBQXlCRSxFQUF6QixFQUFzQztJQUNyQyxJQUFJRSxHQUFHLEdBQUdKLElBQUksQ0FBQ0ssSUFBTCxHQUFZLEdBQVosR0FBa0JILEVBQUUsQ0FBQ0csSUFBL0I7SUFDQSxJQUFJRyxLQUFLLEdBQUcsS0FBS0Ysa0JBQUwsQ0FBd0JGLEdBQXhCLENBQVo7SUFDQSxPQUFPSSxLQUFLLEtBQUtDLFNBQVYsR0FBc0IsS0FBS0MsVUFBM0IsR0FBd0NGLEtBQS9DO0VBQ0EsQyIsIm5hbWVzIjpbIkFuaW1hdGlvblN0YXRlRGF0YSIsInNrZWxldG9uRGF0YSIsIkVycm9yIiwic2V0TWl4IiwiZnJvbU5hbWUiLCJ0b05hbWUiLCJkdXJhdGlvbiIsImZyb20iLCJmaW5kQW5pbWF0aW9uIiwidG8iLCJzZXRNaXhXaXRoIiwia2V5IiwibmFtZSIsImFuaW1hdGlvblRvTWl4VGltZSIsImdldE1peCIsInZhbHVlIiwidW5kZWZpbmVkIiwiZGVmYXVsdE1peCJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvQW5pbWF0aW9uU3RhdGVEYXRhLnRzIl0sInNvdXJjZXNDb250ZW50IjpbbnVsbF19","\"use strict\";\n\nexports.__esModule = true;\nexports.AtlasAttachmentLoader = void 0;\n\nvar _BoundingBoxAttachment = require(\"./attachments/BoundingBoxAttachment\");\n\nvar _ClippingAttachment = require(\"./attachments/ClippingAttachment\");\n\nvar _MeshAttachment = require(\"./attachments/MeshAttachment\");\n\nvar _PathAttachment = require(\"./attachments/PathAttachment\");\n\nvar _PointAttachment = require(\"./attachments/PointAttachment\");\n\nvar _RegionAttachment = require(\"./attachments/RegionAttachment\");\n\n/******************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated January 1, 2020. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2020, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\r\n * or otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\n\n/** An {@link AttachmentLoader} that configures attachments using texture regions from an {@link TextureAtlas}.\r\n *\r\n * See [Loading skeleton data](http://esotericsoftware.com/spine-loading-skeleton-data#JSON-and-binary-data) in the\r\n * Spine Runtimes Guide. */\nvar AtlasAttachmentLoader = /*#__PURE__*/function () {\n  function AtlasAttachmentLoader(atlas) {\n    this.atlas = null;\n    this.atlas = atlas;\n  }\n\n  var _proto = AtlasAttachmentLoader.prototype;\n\n  _proto.newRegionAttachment = function newRegionAttachment(skin, name, path) {\n    var region = this.atlas.findRegion(path);\n    if (!region) throw new Error(\"Region not found in atlas: \" + path + \" (region attachment: \" + name + \")\");\n    region.renderObject = region;\n    var attachment = new _RegionAttachment.RegionAttachment(name);\n    attachment.setRegion(region);\n    return attachment;\n  };\n\n  _proto.newMeshAttachment = function newMeshAttachment(skin, name, path) {\n    var region = this.atlas.findRegion(path);\n    if (!region) throw new Error(\"Region not found in atlas: \" + path + \" (mesh attachment: \" + name + \")\");\n    region.renderObject = region;\n    var attachment = new _MeshAttachment.MeshAttachment(name);\n    attachment.region = region;\n    return attachment;\n  };\n\n  _proto.newBoundingBoxAttachment = function newBoundingBoxAttachment(skin, name) {\n    return new _BoundingBoxAttachment.BoundingBoxAttachment(name);\n  };\n\n  _proto.newPathAttachment = function newPathAttachment(skin, name) {\n    return new _PathAttachment.PathAttachment(name);\n  };\n\n  _proto.newPointAttachment = function newPointAttachment(skin, name) {\n    return new _PointAttachment.PointAttachment(name);\n  };\n\n  _proto.newClippingAttachment = function newClippingAttachment(skin, name) {\n    return new _ClippingAttachment.ClippingAttachment(name);\n  };\n\n  return AtlasAttachmentLoader;\n}();\n\nexports.AtlasAttachmentLoader = AtlasAttachmentLoader;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7QUE4QkE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBbkNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVDQTs7OztJQUlhQSxxQjtFQUdaLCtCQUFhQyxLQUFiLEVBQWdDO0lBRmhDLGFBQXNCLElBQXRCO0lBR0MsS0FBS0EsS0FBTCxHQUFhQSxLQUFiO0VBQ0E7Ozs7U0FFREMsbUIsR0FBQSw2QkFBcUJDLElBQXJCLEVBQWlDQyxJQUFqQyxFQUErQ0MsSUFBL0MsRUFBMkQ7SUFDMUQsSUFBSUMsTUFBTSxHQUFHLEtBQUtMLEtBQUwsQ0FBV00sVUFBWCxDQUFzQkYsSUFBdEIsQ0FBYjtJQUNBLElBQUksQ0FBQ0MsTUFBTCxFQUFhLE1BQU0sSUFBSUUsS0FBSixDQUFVLGdDQUFnQ0gsSUFBaEMsR0FBdUMsdUJBQXZDLEdBQWlFRCxJQUFqRSxHQUF3RSxHQUFsRixDQUFOO0lBQ2JFLE1BQU0sQ0FBQ0csWUFBUCxHQUFzQkgsTUFBdEI7SUFDQSxJQUFJSSxVQUFVLEdBQUcsSUFBSUMsa0NBQUosQ0FBcUJQLElBQXJCLENBQWpCO0lBQ0FNLFVBQVUsQ0FBQ0UsU0FBWCxDQUFxQk4sTUFBckI7SUFDQSxPQUFPSSxVQUFQO0VBQ0EsQzs7U0FFREcsaUIsR0FBQSwyQkFBbUJWLElBQW5CLEVBQStCQyxJQUEvQixFQUE2Q0MsSUFBN0MsRUFBeUQ7SUFDeEQsSUFBSUMsTUFBTSxHQUFHLEtBQUtMLEtBQUwsQ0FBV00sVUFBWCxDQUFzQkYsSUFBdEIsQ0FBYjtJQUNBLElBQUksQ0FBQ0MsTUFBTCxFQUFhLE1BQU0sSUFBSUUsS0FBSixDQUFVLGdDQUFnQ0gsSUFBaEMsR0FBdUMscUJBQXZDLEdBQStERCxJQUEvRCxHQUFzRSxHQUFoRixDQUFOO0lBQ2JFLE1BQU0sQ0FBQ0csWUFBUCxHQUFzQkgsTUFBdEI7SUFDQSxJQUFJSSxVQUFVLEdBQUcsSUFBSUksOEJBQUosQ0FBbUJWLElBQW5CLENBQWpCO0lBQ0FNLFVBQVUsQ0FBQ0osTUFBWCxHQUFvQkEsTUFBcEI7SUFDQSxPQUFPSSxVQUFQO0VBQ0EsQzs7U0FFREssd0IsR0FBQSxrQ0FBMEJaLElBQTFCLEVBQXNDQyxJQUF0QyxFQUFrRDtJQUNqRCxPQUFPLElBQUlZLDRDQUFKLENBQTBCWixJQUExQixDQUFQO0VBQ0EsQzs7U0FFRGEsaUIsR0FBQSwyQkFBbUJkLElBQW5CLEVBQStCQyxJQUEvQixFQUEyQztJQUMxQyxPQUFPLElBQUljLDhCQUFKLENBQW1CZCxJQUFuQixDQUFQO0VBQ0EsQzs7U0FFRGUsa0IsR0FBQSw0QkFBb0JoQixJQUFwQixFQUFnQ0MsSUFBaEMsRUFBNEM7SUFDM0MsT0FBTyxJQUFJZ0IsZ0NBQUosQ0FBb0JoQixJQUFwQixDQUFQO0VBQ0EsQzs7U0FFRGlCLHFCLEdBQUEsK0JBQXVCbEIsSUFBdkIsRUFBbUNDLElBQW5DLEVBQStDO0lBQzlDLE9BQU8sSUFBSWtCLHNDQUFKLENBQXVCbEIsSUFBdkIsQ0FBUDtFQUNBLEMiLCJuYW1lcyI6WyJBdGxhc0F0dGFjaG1lbnRMb2FkZXIiLCJhdGxhcyIsIm5ld1JlZ2lvbkF0dGFjaG1lbnQiLCJza2luIiwibmFtZSIsInBhdGgiLCJyZWdpb24iLCJmaW5kUmVnaW9uIiwiRXJyb3IiLCJyZW5kZXJPYmplY3QiLCJhdHRhY2htZW50IiwiUmVnaW9uQXR0YWNobWVudCIsInNldFJlZ2lvbiIsIm5ld01lc2hBdHRhY2htZW50IiwiTWVzaEF0dGFjaG1lbnQiLCJuZXdCb3VuZGluZ0JveEF0dGFjaG1lbnQiLCJCb3VuZGluZ0JveEF0dGFjaG1lbnQiLCJuZXdQYXRoQXR0YWNobWVudCIsIlBhdGhBdHRhY2htZW50IiwibmV3UG9pbnRBdHRhY2htZW50IiwiUG9pbnRBdHRhY2htZW50IiwibmV3Q2xpcHBpbmdBdHRhY2htZW50IiwiQ2xpcHBpbmdBdHRhY2htZW50Il0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9BdGxhc0F0dGFjaG1lbnRMb2FkZXIudHMiXSwic291cmNlc0NvbnRlbnQiOltudWxsXX0=","\"use strict\";\n\nexports.__esModule = true;\nexports.Bone = void 0;\n\nvar _BoneData = require(\"./BoneData\");\n\nvar _Utils = require(\"./Utils\");\n\n/******************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated January 1, 2020. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2020, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\r\n * or otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\n\n/** Stores a bone's current pose.\r\n *\r\n * A bone has a local transform which is used to compute its world transform. A bone also has an applied transform, which is a\r\n * local transform that can be applied to compute the world transform. The local transform and applied transform may differ if a\r\n * constraint or application code modifies the world transform after it was computed from the local transform. */\nvar Bone = /*#__PURE__*/function () {\n  /** @param parent May be null. */\n  function Bone(data, skeleton, parent) {\n    /** The bone's setup pose data. */\n    this.data = null;\n    /** The skeleton this bone belongs to. */\n\n    this.skeleton = null;\n    /** The parent bone, or null if this is the root bone. */\n\n    this.parent = null;\n    /** The immediate children of this bone. */\n\n    this.children = new Array();\n    /** The local x translation. */\n\n    this.x = 0;\n    /** The local y translation. */\n\n    this.y = 0;\n    /** The local rotation in degrees, counter clockwise. */\n\n    this.rotation = 0;\n    /** The local scaleX. */\n\n    this.scaleX = 0;\n    /** The local scaleY. */\n\n    this.scaleY = 0;\n    /** The local shearX. */\n\n    this.shearX = 0;\n    /** The local shearY. */\n\n    this.shearY = 0;\n    /** The applied local x translation. */\n\n    this.ax = 0;\n    /** The applied local y translation. */\n\n    this.ay = 0;\n    /** The applied local rotation in degrees, counter clockwise. */\n\n    this.arotation = 0;\n    /** The applied local scaleX. */\n\n    this.ascaleX = 0;\n    /** The applied local scaleY. */\n\n    this.ascaleY = 0;\n    /** The applied local shearX. */\n\n    this.ashearX = 0;\n    /** The applied local shearY. */\n\n    this.ashearY = 0;\n    /** Part of the world transform matrix for the X axis. If changed, {@link #updateAppliedTransform()} should be called. */\n\n    this.a = 0;\n    /** Part of the world transform matrix for the Y axis. If changed, {@link #updateAppliedTransform()} should be called. */\n\n    this.b = 0;\n    /** Part of the world transform matrix for the X axis. If changed, {@link #updateAppliedTransform()} should be called. */\n\n    this.c = 0;\n    /** Part of the world transform matrix for the Y axis. If changed, {@link #updateAppliedTransform()} should be called. */\n\n    this.d = 0;\n    /** The world X position. If changed, {@link #updateAppliedTransform()} should be called. */\n\n    this.worldY = 0;\n    /** The world Y position. If changed, {@link #updateAppliedTransform()} should be called. */\n\n    this.worldX = 0;\n    this.sorted = false;\n    this.active = false;\n    if (!data) throw new Error(\"data cannot be null.\");\n    if (!skeleton) throw new Error(\"skeleton cannot be null.\");\n    this.data = data;\n    this.skeleton = skeleton;\n    this.parent = parent;\n    this.setToSetupPose();\n  }\n  /** Returns false when the bone has not been computed because {@link BoneData#skinRequired} is true and the\r\n    * {@link Skeleton#skin active skin} does not {@link Skin#bones contain} this bone. */\n\n\n  var _proto = Bone.prototype;\n\n  _proto.isActive = function isActive() {\n    return this.active;\n  }\n  /** Computes the world transform using the parent bone and this bone's local applied transform. */\n  ;\n\n  _proto.update = function update() {\n    this.updateWorldTransformWith(this.ax, this.ay, this.arotation, this.ascaleX, this.ascaleY, this.ashearX, this.ashearY);\n  }\n  /** Computes the world transform using the parent bone and this bone's local transform.\r\n   *\r\n   * See {@link #updateWorldTransformWith()}. */\n  ;\n\n  _proto.updateWorldTransform = function updateWorldTransform() {\n    this.updateWorldTransformWith(this.x, this.y, this.rotation, this.scaleX, this.scaleY, this.shearX, this.shearY);\n  }\n  /** Computes the world transform using the parent bone and the specified local transform. The applied transform is set to the\r\n   * specified local transform. Child bones are not updated.\r\n   *\r\n   * See [World transforms](http://esotericsoftware.com/spine-runtime-skeletons#World-transforms) in the Spine\r\n   * Runtimes Guide. */\n  ;\n\n  _proto.updateWorldTransformWith = function updateWorldTransformWith(x, y, rotation, scaleX, scaleY, shearX, shearY) {\n    this.ax = x;\n    this.ay = y;\n    this.arotation = rotation;\n    this.ascaleX = scaleX;\n    this.ascaleY = scaleY;\n    this.ashearX = shearX;\n    this.ashearY = shearY;\n    var parent = this.parent;\n\n    if (!parent) {\n      // Root bone.\n      var skeleton = this.skeleton;\n      var rotationY = rotation + 90 + shearY;\n      var sx = skeleton.scaleX;\n      var sy = skeleton.scaleY;\n      this.a = _Utils.MathUtils.cosDeg(rotation + shearX) * scaleX * sx;\n      this.b = _Utils.MathUtils.cosDeg(rotationY) * scaleY * sx;\n      this.c = _Utils.MathUtils.sinDeg(rotation + shearX) * scaleX * sy;\n      this.d = _Utils.MathUtils.sinDeg(rotationY) * scaleY * sy;\n      this.worldX = x * sx + skeleton.x;\n      this.worldY = y * sy + skeleton.y;\n      return;\n    }\n\n    var pa = parent.a,\n        pb = parent.b,\n        pc = parent.c,\n        pd = parent.d;\n    this.worldX = pa * x + pb * y + parent.worldX;\n    this.worldY = pc * x + pd * y + parent.worldY;\n\n    switch (this.data.transformMode) {\n      case _BoneData.TransformMode.Normal:\n        {\n          var _rotationY = rotation + 90 + shearY;\n\n          var la = _Utils.MathUtils.cosDeg(rotation + shearX) * scaleX;\n          var lb = _Utils.MathUtils.cosDeg(_rotationY) * scaleY;\n          var lc = _Utils.MathUtils.sinDeg(rotation + shearX) * scaleX;\n          var ld = _Utils.MathUtils.sinDeg(_rotationY) * scaleY;\n          this.a = pa * la + pb * lc;\n          this.b = pa * lb + pb * ld;\n          this.c = pc * la + pd * lc;\n          this.d = pc * lb + pd * ld;\n          return;\n        }\n\n      case _BoneData.TransformMode.OnlyTranslation:\n        {\n          var _rotationY2 = rotation + 90 + shearY;\n\n          this.a = _Utils.MathUtils.cosDeg(rotation + shearX) * scaleX;\n          this.b = _Utils.MathUtils.cosDeg(_rotationY2) * scaleY;\n          this.c = _Utils.MathUtils.sinDeg(rotation + shearX) * scaleX;\n          this.d = _Utils.MathUtils.sinDeg(_rotationY2) * scaleY;\n          break;\n        }\n\n      case _BoneData.TransformMode.NoRotationOrReflection:\n        {\n          var s = pa * pa + pc * pc;\n          var prx = 0;\n\n          if (s > 0.0001) {\n            s = Math.abs(pa * pd - pb * pc) / s;\n            pa /= this.skeleton.scaleX;\n            pc /= this.skeleton.scaleY;\n            pb = pc * s;\n            pd = pa * s;\n            prx = Math.atan2(pc, pa) * _Utils.MathUtils.radDeg;\n          } else {\n            pa = 0;\n            pc = 0;\n            prx = 90 - Math.atan2(pd, pb) * _Utils.MathUtils.radDeg;\n          }\n\n          var rx = rotation + shearX - prx;\n          var ry = rotation + shearY - prx + 90;\n\n          var _la = _Utils.MathUtils.cosDeg(rx) * scaleX;\n\n          var _lb = _Utils.MathUtils.cosDeg(ry) * scaleY;\n\n          var _lc = _Utils.MathUtils.sinDeg(rx) * scaleX;\n\n          var _ld = _Utils.MathUtils.sinDeg(ry) * scaleY;\n\n          this.a = pa * _la - pb * _lc;\n          this.b = pa * _lb - pb * _ld;\n          this.c = pc * _la + pd * _lc;\n          this.d = pc * _lb + pd * _ld;\n          break;\n        }\n\n      case _BoneData.TransformMode.NoScale:\n      case _BoneData.TransformMode.NoScaleOrReflection:\n        {\n          var cos = _Utils.MathUtils.cosDeg(rotation);\n\n          var sin = _Utils.MathUtils.sinDeg(rotation);\n\n          var za = (pa * cos + pb * sin) / this.skeleton.scaleX;\n          var zc = (pc * cos + pd * sin) / this.skeleton.scaleY;\n\n          var _s = Math.sqrt(za * za + zc * zc);\n\n          if (_s > 0.00001) _s = 1 / _s;\n          za *= _s;\n          zc *= _s;\n          _s = Math.sqrt(za * za + zc * zc);\n          if (this.data.transformMode == _BoneData.TransformMode.NoScale && pa * pd - pb * pc < 0 != (this.skeleton.scaleX < 0 != this.skeleton.scaleY < 0)) _s = -_s;\n          var r = Math.PI / 2 + Math.atan2(zc, za);\n\n          var zb = Math.cos(r) * _s;\n\n          var zd = Math.sin(r) * _s;\n\n          var _la2 = _Utils.MathUtils.cosDeg(shearX) * scaleX;\n\n          var _lb2 = _Utils.MathUtils.cosDeg(90 + shearY) * scaleY;\n\n          var _lc2 = _Utils.MathUtils.sinDeg(shearX) * scaleX;\n\n          var _ld2 = _Utils.MathUtils.sinDeg(90 + shearY) * scaleY;\n\n          this.a = za * _la2 + zb * _lc2;\n          this.b = za * _lb2 + zb * _ld2;\n          this.c = zc * _la2 + zd * _lc2;\n          this.d = zc * _lb2 + zd * _ld2;\n          break;\n        }\n    }\n\n    this.a *= this.skeleton.scaleX;\n    this.b *= this.skeleton.scaleX;\n    this.c *= this.skeleton.scaleY;\n    this.d *= this.skeleton.scaleY;\n  }\n  /** Sets this bone's local transform to the setup pose. */\n  ;\n\n  _proto.setToSetupPose = function setToSetupPose() {\n    var data = this.data;\n    this.x = data.x;\n    this.y = data.y;\n    this.rotation = data.rotation;\n    this.scaleX = data.scaleX;\n    this.scaleY = data.scaleY;\n    this.shearX = data.shearX;\n    this.shearY = data.shearY;\n  }\n  /** The world rotation for the X axis, calculated using {@link #a} and {@link #c}. */\n  ;\n\n  _proto.getWorldRotationX = function getWorldRotationX() {\n    return Math.atan2(this.c, this.a) * _Utils.MathUtils.radDeg;\n  }\n  /** The world rotation for the Y axis, calculated using {@link #b} and {@link #d}. */\n  ;\n\n  _proto.getWorldRotationY = function getWorldRotationY() {\n    return Math.atan2(this.d, this.b) * _Utils.MathUtils.radDeg;\n  }\n  /** The magnitude (always positive) of the world scale X, calculated using {@link #a} and {@link #c}. */\n  ;\n\n  _proto.getWorldScaleX = function getWorldScaleX() {\n    return Math.sqrt(this.a * this.a + this.c * this.c);\n  }\n  /** The magnitude (always positive) of the world scale Y, calculated using {@link #b} and {@link #d}. */\n  ;\n\n  _proto.getWorldScaleY = function getWorldScaleY() {\n    return Math.sqrt(this.b * this.b + this.d * this.d);\n  }\n  /** Computes the applied transform values from the world transform.\r\n   *\r\n   * If the world transform is modified (by a constraint, {@link #rotateWorld(float)}, etc) then this method should be called so\r\n   * the applied transform matches the world transform. The applied transform may be needed by other code (eg to apply other\r\n   * constraints).\r\n   *\r\n   * Some information is ambiguous in the world transform, such as -1,-1 scale versus 180 rotation. The applied transform after\r\n   * calling this method is equivalent to the local transform used to compute the world transform, but may not be identical. */\n  ;\n\n  _proto.updateAppliedTransform = function updateAppliedTransform() {\n    var parent = this.parent;\n\n    if (!parent) {\n      this.ax = this.worldX - this.skeleton.x;\n      this.ay = this.worldY - this.skeleton.y;\n      this.arotation = Math.atan2(this.c, this.a) * _Utils.MathUtils.radDeg;\n      this.ascaleX = Math.sqrt(this.a * this.a + this.c * this.c);\n      this.ascaleY = Math.sqrt(this.b * this.b + this.d * this.d);\n      this.ashearX = 0;\n      this.ashearY = Math.atan2(this.a * this.b + this.c * this.d, this.a * this.d - this.b * this.c) * _Utils.MathUtils.radDeg;\n      return;\n    }\n\n    var pa = parent.a,\n        pb = parent.b,\n        pc = parent.c,\n        pd = parent.d;\n    var pid = 1 / (pa * pd - pb * pc);\n    var dx = this.worldX - parent.worldX,\n        dy = this.worldY - parent.worldY;\n    this.ax = dx * pd * pid - dy * pb * pid;\n    this.ay = dy * pa * pid - dx * pc * pid;\n    var ia = pid * pd;\n    var id = pid * pa;\n    var ib = pid * pb;\n    var ic = pid * pc;\n    var ra = ia * this.a - ib * this.c;\n    var rb = ia * this.b - ib * this.d;\n    var rc = id * this.c - ic * this.a;\n    var rd = id * this.d - ic * this.b;\n    this.ashearX = 0;\n    this.ascaleX = Math.sqrt(ra * ra + rc * rc);\n\n    if (this.ascaleX > 0.0001) {\n      var det = ra * rd - rb * rc;\n      this.ascaleY = det / this.ascaleX;\n      this.ashearY = Math.atan2(ra * rb + rc * rd, det) * _Utils.MathUtils.radDeg;\n      this.arotation = Math.atan2(rc, ra) * _Utils.MathUtils.radDeg;\n    } else {\n      this.ascaleX = 0;\n      this.ascaleY = Math.sqrt(rb * rb + rd * rd);\n      this.ashearY = 0;\n      this.arotation = 90 - Math.atan2(rd, rb) * _Utils.MathUtils.radDeg;\n    }\n  }\n  /** Transforms a point from world coordinates to the bone's local coordinates. */\n  ;\n\n  _proto.worldToLocal = function worldToLocal(world) {\n    var invDet = 1 / (this.a * this.d - this.b * this.c);\n    var x = world.x - this.worldX,\n        y = world.y - this.worldY;\n    world.x = x * this.d * invDet - y * this.b * invDet;\n    world.y = y * this.a * invDet - x * this.c * invDet;\n    return world;\n  }\n  /** Transforms a point from the bone's local coordinates to world coordinates. */\n  ;\n\n  _proto.localToWorld = function localToWorld(local) {\n    var x = local.x,\n        y = local.y;\n    local.x = x * this.a + y * this.b + this.worldX;\n    local.y = x * this.c + y * this.d + this.worldY;\n    return local;\n  }\n  /** Transforms a world rotation to a local rotation. */\n  ;\n\n  _proto.worldToLocalRotation = function worldToLocalRotation(worldRotation) {\n    var sin = _Utils.MathUtils.sinDeg(worldRotation),\n        cos = _Utils.MathUtils.cosDeg(worldRotation);\n\n    return Math.atan2(this.a * sin - this.c * cos, this.d * cos - this.b * sin) * _Utils.MathUtils.radDeg + this.rotation - this.shearX;\n  }\n  /** Transforms a local rotation to a world rotation. */\n  ;\n\n  _proto.localToWorldRotation = function localToWorldRotation(localRotation) {\n    localRotation -= this.rotation - this.shearX;\n\n    var sin = _Utils.MathUtils.sinDeg(localRotation),\n        cos = _Utils.MathUtils.cosDeg(localRotation);\n\n    return Math.atan2(cos * this.c + sin * this.d, cos * this.a + sin * this.b) * _Utils.MathUtils.radDeg;\n  }\n  /** Rotates the world transform the specified amount.\r\n   * <p>\r\n   * After changes are made to the world transform, {@link #updateAppliedTransform()} should be called and {@link #update()} will\r\n   * need to be called on any child bones, recursively. */\n  ;\n\n  _proto.rotateWorld = function rotateWorld(degrees) {\n    var a = this.a,\n        b = this.b,\n        c = this.c,\n        d = this.d;\n\n    var cos = _Utils.MathUtils.cosDeg(degrees),\n        sin = _Utils.MathUtils.sinDeg(degrees);\n\n    this.a = cos * a - sin * c;\n    this.b = cos * b - sin * d;\n    this.c = sin * a + cos * c;\n    this.d = sin * b + cos * d;\n  };\n\n  return Bone;\n}();\n\nexports.Bone = Bone;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","\"use strict\";\n\nexports.__esModule = true;\nexports.TransformMode = exports.BoneData = void 0;\n\nvar _Utils = require(\"./Utils\");\n\n/******************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated January 1, 2020. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2020, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\r\n * or otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\n\n/** Stores the setup pose for a {@link Bone}. */\nvar BoneData = function BoneData(index, name, parent) {\n  /** The index of the bone in {@link Skeleton#getBones()}. */\n  this.index = 0;\n  /** The name of the bone, which is unique across all bones in the skeleton. */\n\n  this.name = null;\n  /** @returns May be null. */\n\n  this.parent = null;\n  /** The bone's length. */\n\n  this.length = 0;\n  /** The local x translation. */\n\n  this.x = 0;\n  /** The local y translation. */\n\n  this.y = 0;\n  /** The local rotation. */\n\n  this.rotation = 0;\n  /** The local scaleX. */\n\n  this.scaleX = 1;\n  /** The local scaleY. */\n\n  this.scaleY = 1;\n  /** The local shearX. */\n\n  this.shearX = 0;\n  /** The local shearX. */\n\n  this.shearY = 0;\n  /** The transform mode for how parent world transforms affect this bone. */\n\n  this.transformMode = TransformMode.Normal;\n  /** When true, {@link Skeleton#updateWorldTransform()} only updates this bone if the {@link Skeleton#skin} contains this\r\n    * bone.\r\n    * @see Skin#bones */\n\n  this.skinRequired = false;\n  /** The color of the bone as it was in Spine. Available only when nonessential data was exported. Bones are not usually\r\n   * rendered at runtime. */\n\n  this.color = new _Utils.Color();\n  if (index < 0) throw new Error(\"index must be >= 0.\");\n  if (!name) throw new Error(\"name cannot be null.\");\n  this.index = index;\n  this.name = name;\n  this.parent = parent;\n};\n/** Determines how a bone inherits world transforms from parent bones. */\n\n\nexports.BoneData = BoneData;\nvar TransformMode;\nexports.TransformMode = TransformMode;\n\n(function (TransformMode) {\n  TransformMode[TransformMode[\"Normal\"] = 0] = \"Normal\";\n  TransformMode[TransformMode[\"OnlyTranslation\"] = 1] = \"OnlyTranslation\";\n  TransformMode[TransformMode[\"NoRotationOrReflection\"] = 2] = \"NoRotationOrReflection\";\n  TransformMode[TransformMode[\"NoScale\"] = 3] = \"NoScale\";\n  TransformMode[TransformMode[\"NoScaleOrReflection\"] = 4] = \"NoScaleOrReflection\";\n})(TransformMode || (exports.TransformMode = TransformMode = {}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7QUE2QkE7O0FBN0JBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQStCQTtJQUNhQSxRLEdBOENaLGtCQUFhQyxLQUFiLEVBQTRCQyxJQUE1QixFQUEwQ0MsTUFBMUMsRUFBMEQ7RUE3QzFEO0VBQ0EsYUFBZ0IsQ0FBaEI7RUFFQTs7RUFDQSxZQUFlLElBQWY7RUFFQTs7RUFDQSxjQUFtQixJQUFuQjtFQUVBOztFQUNBLGNBQWlCLENBQWpCO0VBRUE7O0VBQ0EsU0FBSSxDQUFKO0VBRUE7O0VBQ0EsU0FBSSxDQUFKO0VBRUE7O0VBQ0EsZ0JBQVcsQ0FBWDtFQUVBOztFQUNBLGNBQVMsQ0FBVDtFQUVBOztFQUNBLGNBQVMsQ0FBVDtFQUVBOztFQUNBLGNBQVMsQ0FBVDtFQUVBOztFQUNBLGNBQVMsQ0FBVDtFQUVBOztFQUNBLHFCQUFnQkMsYUFBYSxDQUFDQyxNQUE5QjtFQUVBOzs7O0VBR0Esb0JBQWUsS0FBZjtFQUVBOzs7RUFFQSxhQUFRLElBQUlDLFlBQUosRUFBUjtFQUdDLElBQUlMLEtBQUssR0FBRyxDQUFaLEVBQWUsTUFBTSxJQUFJTSxLQUFKLENBQVUscUJBQVYsQ0FBTjtFQUNmLElBQUksQ0FBQ0wsSUFBTCxFQUFXLE1BQU0sSUFBSUssS0FBSixDQUFVLHNCQUFWLENBQU47RUFDWCxLQUFLTixLQUFMLEdBQWFBLEtBQWI7RUFDQSxLQUFLQyxJQUFMLEdBQVlBLElBQVo7RUFDQSxLQUFLQyxNQUFMLEdBQWNBLE1BQWQ7QUFDQSxDO0FBR0Y7Ozs7QUFDQSxJQUFZQyxhQUFaOzs7QUFBQSxXQUFZQSxhQUFaLEVBQXlCO0VBQUdBO0VBQVFBO0VBQWlCQTtFQUF3QkE7RUFBU0E7QUFBcUIsQ0FBM0csRUFBWUEsYUFBYSw2QkFBYkEsYUFBYSxNQUF6QiIsIm5hbWVzIjpbIkJvbmVEYXRhIiwiaW5kZXgiLCJuYW1lIiwicGFyZW50IiwiVHJhbnNmb3JtTW9kZSIsIk5vcm1hbCIsIkNvbG9yIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0JvbmVEYXRhLnRzIl0sInNvdXJjZXNDb250ZW50IjpbbnVsbF19","\"use strict\";\n\nexports.__esModule = true;\nexports.ConstraintData = void 0;\n\n/******************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated January 1, 2020. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2020, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\r\n * or otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\n\n/** The base class for all constraint datas. */\nvar ConstraintData = function ConstraintData(name, order, skinRequired) {\n  this.name = name;\n  this.order = order;\n  this.skinRequired = skinRequired;\n};\n\nexports.ConstraintData = ConstraintData;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE2QkE7SUFDc0JBLGMsR0FDckIsd0JBQW9CQyxJQUFwQixFQUF5Q0MsS0FBekMsRUFBK0RDLFlBQS9ELEVBQW9GO0VBQWhFO0VBQXFCO0VBQXNCO0FBQTBCLEMiLCJuYW1lcyI6WyJDb25zdHJhaW50RGF0YSIsIm5hbWUiLCJvcmRlciIsInNraW5SZXF1aXJlZCJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvQ29uc3RyYWludERhdGEudHMiXSwic291cmNlc0NvbnRlbnQiOltudWxsXX0=","\"use strict\";\n\nexports.__esModule = true;\nexports.Event = void 0;\n\n/******************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated January 1, 2020. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2020, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\r\n * or otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\n\n/** Stores the current pose values for an {@link Event}.\r\n *\r\n * See Timeline {@link Timeline#apply()},\r\n * AnimationStateListener {@link AnimationStateListener#event()}, and\r\n * [Events](http://esotericsoftware.com/spine-events) in the Spine User Guide. */\nvar Event = function Event(time, data) {\n  this.data = null;\n  this.intValue = 0;\n  this.floatValue = 0;\n  this.stringValue = null;\n  this.time = 0;\n  this.volume = 0;\n  this.balance = 0;\n  if (!data) throw new Error(\"data cannot be null.\");\n  this.time = time;\n  this.data = data;\n};\n\nexports.Event = Event;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUErQkE7Ozs7O0lBS2FBLEssR0FTWixlQUFhQyxJQUFiLEVBQTJCQyxJQUEzQixFQUEwQztFQVIxQyxZQUFrQixJQUFsQjtFQUNBLGdCQUFtQixDQUFuQjtFQUNBLGtCQUFxQixDQUFyQjtFQUNBLG1CQUFzQixJQUF0QjtFQUNBLFlBQWUsQ0FBZjtFQUNBLGNBQWlCLENBQWpCO0VBQ0EsZUFBa0IsQ0FBbEI7RUFHQyxJQUFJLENBQUNBLElBQUwsRUFBVyxNQUFNLElBQUlDLEtBQUosQ0FBVSxzQkFBVixDQUFOO0VBQ1gsS0FBS0YsSUFBTCxHQUFZQSxJQUFaO0VBQ0EsS0FBS0MsSUFBTCxHQUFZQSxJQUFaO0FBQ0EsQyIsIm5hbWVzIjpbIkV2ZW50IiwidGltZSIsImRhdGEiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvRXZlbnQudHMiXSwic291cmNlc0NvbnRlbnQiOltudWxsXX0=","\"use strict\";\n\nexports.__esModule = true;\nexports.EventData = void 0;\n\n/******************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated January 1, 2020. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2020, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\r\n * or otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\n\n/** Stores the setup pose values for an {@link Event}.\r\n *\r\n * See [Events](http://esotericsoftware.com/spine-events) in the Spine User Guide. */\nvar EventData = function EventData(name) {\n  this.name = null;\n  this.intValue = 0;\n  this.floatValue = 0;\n  this.stringValue = null;\n  this.audioPath = null;\n  this.volume = 0;\n  this.balance = 0;\n  this.name = name;\n};\n\nexports.EventData = EventData;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE2QkE7OztJQUdhQSxTLEdBU1osbUJBQWFDLElBQWIsRUFBeUI7RUFSekIsWUFBZSxJQUFmO0VBQ0EsZ0JBQW1CLENBQW5CO0VBQ0Esa0JBQXFCLENBQXJCO0VBQ0EsbUJBQXNCLElBQXRCO0VBQ0EsaUJBQW9CLElBQXBCO0VBQ0EsY0FBaUIsQ0FBakI7RUFDQSxlQUFrQixDQUFsQjtFQUdDLEtBQUtBLElBQUwsR0FBWUEsSUFBWjtBQUNBLEMiLCJuYW1lcyI6WyJFdmVudERhdGEiLCJuYW1lIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9FdmVudERhdGEudHMiXSwic291cmNlc0NvbnRlbnQiOltudWxsXX0=","\"use strict\";\n\nexports.__esModule = true;\nexports.IkConstraint = void 0;\n\nvar _BoneData = require(\"./BoneData\");\n\nvar _Utils = require(\"./Utils\");\n\n/******************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated January 1, 2020. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2020, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\r\n * or otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\n\n/** Stores the current pose for an IK constraint. An IK constraint adjusts the rotation of 1 or 2 constrained bones so the tip of\r\n * the last bone is as close to the target bone as possible.\r\n *\r\n * See [IK constraints](http://esotericsoftware.com/spine-ik-constraints) in the Spine User Guide. */\nvar IkConstraint = /*#__PURE__*/function () {\n  function IkConstraint(data, skeleton) {\n    /** The IK constraint's setup pose data. */\n    this.data = null;\n    /** The bones that will be modified by this IK constraint. */\n\n    this.bones = null;\n    /** The bone that is the IK target. */\n\n    this.target = null;\n    /** Controls the bend direction of the IK bones, either 1 or -1. */\n\n    this.bendDirection = 0;\n    /** When true and only a single bone is being constrained, if the target is too close, the bone is scaled to reach it. */\n\n    this.compress = false;\n    /** When true, if the target is out of range, the parent bone is scaled to reach it. If more than one bone is being constrained\r\n     * and the parent bone has local nonuniform scale, stretch is not applied. */\n\n    this.stretch = false;\n    /** A percentage (0-1) that controls the mix between the constrained and unconstrained rotations. */\n\n    this.mix = 1;\n    /** For two bone IK, the distance from the maximum reach of the bones that rotation will slow. */\n\n    this.softness = 0;\n    this.active = false;\n    if (!data) throw new Error(\"data cannot be null.\");\n    if (!skeleton) throw new Error(\"skeleton cannot be null.\");\n    this.data = data;\n    this.mix = data.mix;\n    this.softness = data.softness;\n    this.bendDirection = data.bendDirection;\n    this.compress = data.compress;\n    this.stretch = data.stretch;\n    this.bones = new Array();\n\n    for (var i = 0; i < data.bones.length; i++) {\n      this.bones.push(skeleton.findBone(data.bones[i].name));\n    }\n\n    this.target = skeleton.findBone(data.target.name);\n  }\n\n  var _proto = IkConstraint.prototype;\n\n  _proto.isActive = function isActive() {\n    return this.active;\n  };\n\n  _proto.update = function update() {\n    if (this.mix == 0) return;\n    var target = this.target;\n    var bones = this.bones;\n\n    switch (bones.length) {\n      case 1:\n        this.apply1(bones[0], target.worldX, target.worldY, this.compress, this.stretch, this.data.uniform, this.mix);\n        break;\n\n      case 2:\n        this.apply2(bones[0], bones[1], target.worldX, target.worldY, this.bendDirection, this.stretch, this.data.uniform, this.softness, this.mix);\n        break;\n    }\n  }\n  /** Applies 1 bone IK. The target is specified in the world coordinate system. */\n  ;\n\n  _proto.apply1 = function apply1(bone, targetX, targetY, compress, stretch, uniform, alpha) {\n    var p = bone.parent;\n    var pa = p.a,\n        pb = p.b,\n        pc = p.c,\n        pd = p.d;\n    var rotationIK = -bone.ashearX - bone.arotation,\n        tx = 0,\n        ty = 0;\n\n    switch (bone.data.transformMode) {\n      case _BoneData.TransformMode.OnlyTranslation:\n        tx = targetX - bone.worldX;\n        ty = targetY - bone.worldY;\n        break;\n\n      case _BoneData.TransformMode.NoRotationOrReflection:\n        var s = Math.abs(pa * pd - pb * pc) / (pa * pa + pc * pc);\n        var sa = pa / bone.skeleton.scaleX;\n        var sc = pc / bone.skeleton.scaleY;\n        pb = -sc * s * bone.skeleton.scaleX;\n        pd = sa * s * bone.skeleton.scaleY;\n        rotationIK += Math.atan2(sc, sa) * _Utils.MathUtils.radDeg;\n      // Fall through\n\n      default:\n        var x = targetX - p.worldX,\n            y = targetY - p.worldY;\n        var d = pa * pd - pb * pc;\n        tx = (x * pd - y * pb) / d - bone.ax;\n        ty = (y * pa - x * pc) / d - bone.ay;\n    }\n\n    rotationIK += Math.atan2(ty, tx) * _Utils.MathUtils.radDeg;\n    if (bone.ascaleX < 0) rotationIK += 180;\n    if (rotationIK > 180) rotationIK -= 360;else if (rotationIK < -180) rotationIK += 360;\n    var sx = bone.ascaleX,\n        sy = bone.ascaleY;\n\n    if (compress || stretch) {\n      switch (bone.data.transformMode) {\n        case _BoneData.TransformMode.NoScale:\n        case _BoneData.TransformMode.NoScaleOrReflection:\n          tx = targetX - bone.worldX;\n          ty = targetY - bone.worldY;\n      }\n\n      var b = bone.data.length * sx,\n          dd = Math.sqrt(tx * tx + ty * ty);\n\n      if (compress && dd < b || stretch && dd > b && b > 0.0001) {\n        var _s = (dd / b - 1) * alpha + 1;\n\n        sx *= _s;\n        if (uniform) sy *= _s;\n      }\n    }\n\n    bone.updateWorldTransformWith(bone.ax, bone.ay, bone.arotation + rotationIK * alpha, sx, sy, bone.ashearX, bone.ashearY);\n  }\n  /** Applies 2 bone IK. The target is specified in the world coordinate system.\r\n   * @param child A direct descendant of the parent bone. */\n  ;\n\n  _proto.apply2 = function apply2(parent, child, targetX, targetY, bendDir, stretch, uniform, softness, alpha) {\n    var px = parent.ax,\n        py = parent.ay,\n        psx = parent.ascaleX,\n        psy = parent.ascaleY,\n        sx = psx,\n        sy = psy,\n        csx = child.ascaleX;\n    var os1 = 0,\n        os2 = 0,\n        s2 = 0;\n\n    if (psx < 0) {\n      psx = -psx;\n      os1 = 180;\n      s2 = -1;\n    } else {\n      os1 = 0;\n      s2 = 1;\n    }\n\n    if (psy < 0) {\n      psy = -psy;\n      s2 = -s2;\n    }\n\n    if (csx < 0) {\n      csx = -csx;\n      os2 = 180;\n    } else os2 = 0;\n\n    var cx = child.ax,\n        cy = 0,\n        cwx = 0,\n        cwy = 0,\n        a = parent.a,\n        b = parent.b,\n        c = parent.c,\n        d = parent.d;\n    var u = Math.abs(psx - psy) <= 0.0001;\n\n    if (!u || stretch) {\n      cy = 0;\n      cwx = a * cx + parent.worldX;\n      cwy = c * cx + parent.worldY;\n    } else {\n      cy = child.ay;\n      cwx = a * cx + b * cy + parent.worldX;\n      cwy = c * cx + d * cy + parent.worldY;\n    }\n\n    var pp = parent.parent;\n    a = pp.a;\n    b = pp.b;\n    c = pp.c;\n    d = pp.d;\n    var id = 1 / (a * d - b * c),\n        x = cwx - pp.worldX,\n        y = cwy - pp.worldY;\n    var dx = (x * d - y * b) * id - px,\n        dy = (y * a - x * c) * id - py;\n    var l1 = Math.sqrt(dx * dx + dy * dy),\n        l2 = child.data.length * csx,\n        a1,\n        a2;\n\n    if (l1 < 0.0001) {\n      this.apply1(parent, targetX, targetY, false, stretch, false, alpha);\n      child.updateWorldTransformWith(cx, cy, 0, child.ascaleX, child.ascaleY, child.ashearX, child.ashearY);\n      return;\n    }\n\n    x = targetX - pp.worldX;\n    y = targetY - pp.worldY;\n    var tx = (x * d - y * b) * id - px,\n        ty = (y * a - x * c) * id - py;\n    var dd = tx * tx + ty * ty;\n\n    if (softness != 0) {\n      softness *= psx * (csx + 1) * 0.5;\n      var td = Math.sqrt(dd),\n          sd = td - l1 - l2 * psx + softness;\n\n      if (sd > 0) {\n        var p = Math.min(1, sd / (softness * 2)) - 1;\n        p = (sd - softness * (1 - p * p)) / td;\n        tx -= p * tx;\n        ty -= p * ty;\n        dd = tx * tx + ty * ty;\n      }\n    }\n\n    outer: if (u) {\n      l2 *= psx;\n      var cos = (dd - l1 * l1 - l2 * l2) / (2 * l1 * l2);\n\n      if (cos < -1) {\n        cos = -1;\n        a2 = Math.PI * bendDir;\n      } else if (cos > 1) {\n        cos = 1;\n        a2 = 0;\n\n        if (stretch) {\n          a = (Math.sqrt(dd) / (l1 + l2) - 1) * alpha + 1;\n          sx *= a;\n          if (uniform) sy *= a;\n        }\n      } else a2 = Math.acos(cos) * bendDir;\n\n      a = l1 + l2 * cos;\n      b = l2 * Math.sin(a2);\n      a1 = Math.atan2(ty * a - tx * b, tx * a + ty * b);\n    } else {\n      a = psx * l2;\n      b = psy * l2;\n      var aa = a * a,\n          bb = b * b,\n          ta = Math.atan2(ty, tx);\n      c = bb * l1 * l1 + aa * dd - aa * bb;\n      var c1 = -2 * bb * l1,\n          c2 = bb - aa;\n      d = c1 * c1 - 4 * c2 * c;\n\n      if (d >= 0) {\n        var q = Math.sqrt(d);\n        if (c1 < 0) q = -q;\n        q = -(c1 + q) * 0.5;\n        var r0 = q / c2,\n            r1 = c / q;\n        var r = Math.abs(r0) < Math.abs(r1) ? r0 : r1;\n\n        if (r * r <= dd) {\n          y = Math.sqrt(dd - r * r) * bendDir;\n          a1 = ta - Math.atan2(y, r);\n          a2 = Math.atan2(y / psy, (r - l1) / psx);\n          break outer;\n        }\n      }\n\n      var minAngle = _Utils.MathUtils.PI,\n          minX = l1 - a,\n          minDist = minX * minX,\n          minY = 0;\n      var maxAngle = 0,\n          maxX = l1 + a,\n          maxDist = maxX * maxX,\n          maxY = 0;\n      c = -a * l1 / (aa - bb);\n\n      if (c >= -1 && c <= 1) {\n        c = Math.acos(c);\n        x = a * Math.cos(c) + l1;\n        y = b * Math.sin(c);\n        d = x * x + y * y;\n\n        if (d < minDist) {\n          minAngle = c;\n          minDist = d;\n          minX = x;\n          minY = y;\n        }\n\n        if (d > maxDist) {\n          maxAngle = c;\n          maxDist = d;\n          maxX = x;\n          maxY = y;\n        }\n      }\n\n      if (dd <= (minDist + maxDist) * 0.5) {\n        a1 = ta - Math.atan2(minY * bendDir, minX);\n        a2 = minAngle * bendDir;\n      } else {\n        a1 = ta - Math.atan2(maxY * bendDir, maxX);\n        a2 = maxAngle * bendDir;\n      }\n    }\n\n    var os = Math.atan2(cy, cx) * s2;\n    var rotation = parent.arotation;\n    a1 = (a1 - os) * _Utils.MathUtils.radDeg + os1 - rotation;\n    if (a1 > 180) a1 -= 360;else if (a1 < -180) //\n      a1 += 360;\n    parent.updateWorldTransformWith(px, py, rotation + a1 * alpha, sx, sy, 0, 0);\n    rotation = child.arotation;\n    a2 = ((a2 + os) * _Utils.MathUtils.radDeg - child.ashearX) * s2 + os2 - rotation;\n    if (a2 > 180) a2 -= 360;else if (a2 < -180) //\n      a2 += 360;\n    child.updateWorldTransformWith(cx, cy, rotation + a2 * alpha, child.ascaleX, child.ascaleY, child.ashearX, child.ashearY);\n  };\n\n  return IkConstraint;\n}();\n\nexports.IkConstraint = IkConstraint;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","\"use strict\";\n\nexports.__esModule = true;\nexports.IkConstraintData = void 0;\n\nvar _ConstraintData2 = require(\"./ConstraintData\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/** Stores the setup pose for an {@link IkConstraint}.\r\n * <p>\r\n * See [IK constraints](http://esotericsoftware.com/spine-ik-constraints) in the Spine User Guide. */\nvar IkConstraintData = /*#__PURE__*/function (_ConstraintData) {\n  _inheritsLoose(IkConstraintData, _ConstraintData);\n\n  function IkConstraintData(name) {\n    var _this;\n\n    _this = _ConstraintData.call(this, name, 0, false) || this;\n    /** The bones that are constrained by this IK constraint. */\n\n    _this.bones = new Array();\n    /** The bone that is the IK target. */\n\n    _this.target = null;\n    /** Controls the bend direction of the IK bones, either 1 or -1. */\n\n    _this.bendDirection = 1;\n    /** When true and only a single bone is being constrained, if the target is too close, the bone is scaled to reach it. */\n\n    _this.compress = false;\n    /** When true, if the target is out of range, the parent bone is scaled to reach it. If more than one bone is being constrained\r\n     * and the parent bone has local nonuniform scale, stretch is not applied. */\n\n    _this.stretch = false;\n    /** When true, only a single bone is being constrained, and {@link #getCompress()} or {@link #getStretch()} is used, the bone\r\n     * is scaled on both the X and Y axes. */\n\n    _this.uniform = false;\n    /** A percentage (0-1) that controls the mix between the constrained and unconstrained rotations. */\n\n    _this.mix = 1;\n    /** For two bone IK, the distance from the maximum reach of the bones that rotation will slow. */\n\n    _this.softness = 0;\n    return _this;\n  }\n\n  return IkConstraintData;\n}(_ConstraintData2.ConstraintData);\n\nexports.IkConstraintData = IkConstraintData;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7QUE4QkE7Ozs7OztBQUdBOzs7SUFHYUEsZ0I7OztFQTJCWiwwQkFBYUMsSUFBYixFQUF5QjtJQUFBOztJQUN4QixtQ0FBTUEsSUFBTixFQUFZLENBQVosRUFBZSxLQUFmO0lBM0JEOztJQUNBLGNBQVEsSUFBSUMsS0FBSixFQUFSO0lBRUE7O0lBQ0EsZUFBbUIsSUFBbkI7SUFFQTs7SUFDQSxzQkFBZ0IsQ0FBaEI7SUFFQTs7SUFDQSxpQkFBVyxLQUFYO0lBRUE7OztJQUVBLGdCQUFVLEtBQVY7SUFFQTs7O0lBRUEsZ0JBQVUsS0FBVjtJQUVBOztJQUNBLFlBQU0sQ0FBTjtJQUVBOztJQUNBLGlCQUFXLENBQVg7SUFFeUI7RUFFeEI7OztFQTdCb0NDLCtCIiwibmFtZXMiOlsiSWtDb25zdHJhaW50RGF0YSIsIm5hbWUiLCJBcnJheSIsIkNvbnN0cmFpbnREYXRhIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Ja0NvbnN0cmFpbnREYXRhLnRzIl0sInNvdXJjZXNDb250ZW50IjpbbnVsbF19","\"use strict\";\n\nexports.__esModule = true;\nexports.PathConstraint = void 0;\n\nvar _PathAttachment = require(\"./attachments/PathAttachment\");\n\nvar _PathConstraintData = require(\"./PathConstraintData\");\n\nvar _Utils = require(\"./Utils\");\n\n/******************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated January 1, 2020. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2020, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\r\n * or otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\n\n/** Stores the current pose for a path constraint. A path constraint adjusts the rotation, translation, and scale of the\r\n * constrained bones so they follow a {@link PathAttachment}.\r\n *\r\n * See [Path constraints](http://esotericsoftware.com/spine-path-constraints) in the Spine User Guide. */\nvar PathConstraint = /*#__PURE__*/function () {\n  function PathConstraint(data, skeleton) {\n    /** The path constraint's setup pose data. */\n    this.data = null;\n    /** The bones that will be modified by this path constraint. */\n\n    this.bones = null;\n    /** The slot whose path attachment will be used to constrained the bones. */\n\n    this.target = null;\n    /** The position along the path. */\n\n    this.position = 0;\n    /** The spacing between bones. */\n\n    this.spacing = 0;\n    this.mixRotate = 0;\n    this.mixX = 0;\n    this.mixY = 0;\n    this.spaces = new Array();\n    this.positions = new Array();\n    this.world = new Array();\n    this.curves = new Array();\n    this.lengths = new Array();\n    this.segments = new Array();\n    this.active = false;\n    if (!data) throw new Error(\"data cannot be null.\");\n    if (!skeleton) throw new Error(\"skeleton cannot be null.\");\n    this.data = data;\n    this.bones = new Array();\n\n    for (var i = 0, n = data.bones.length; i < n; i++) {\n      this.bones.push(skeleton.findBone(data.bones[i].name));\n    }\n\n    this.target = skeleton.findSlot(data.target.name);\n    this.position = data.position;\n    this.spacing = data.spacing;\n    this.mixRotate = data.mixRotate;\n    this.mixX = data.mixX;\n    this.mixY = data.mixY;\n  }\n\n  var _proto = PathConstraint.prototype;\n\n  _proto.isActive = function isActive() {\n    return this.active;\n  };\n\n  _proto.update = function update() {\n    var attachment = this.target.getAttachment();\n    if (!(attachment instanceof _PathAttachment.PathAttachment)) return;\n    var mixRotate = this.mixRotate,\n        mixX = this.mixX,\n        mixY = this.mixY;\n    if (mixRotate == 0 && mixX == 0 && mixY == 0) return;\n    var data = this.data;\n    var tangents = data.rotateMode == _PathConstraintData.RotateMode.Tangent,\n        scale = data.rotateMode == _PathConstraintData.RotateMode.ChainScale;\n    var bones = this.bones;\n    var boneCount = bones.length,\n        spacesCount = tangents ? boneCount : boneCount + 1;\n\n    var spaces = _Utils.Utils.setArraySize(this.spaces, spacesCount),\n        lengths = scale ? this.lengths = _Utils.Utils.setArraySize(this.lengths, boneCount) : null;\n\n    var spacing = this.spacing;\n\n    switch (data.spacingMode) {\n      case _PathConstraintData.SpacingMode.Percent:\n        if (scale) {\n          for (var i = 0, n = spacesCount - 1; i < n; i++) {\n            var bone = bones[i];\n            var setupLength = bone.data.length;\n            if (setupLength < PathConstraint.epsilon) lengths[i] = 0;else {\n              var x = setupLength * bone.a,\n                  y = setupLength * bone.c;\n              lengths[i] = Math.sqrt(x * x + y * y);\n            }\n          }\n        }\n\n        _Utils.Utils.arrayFill(spaces, 1, spacesCount, spacing);\n\n        break;\n\n      case _PathConstraintData.SpacingMode.Proportional:\n        var sum = 0;\n\n        for (var _i = 0, _n = spacesCount - 1; _i < _n;) {\n          var _bone = bones[_i];\n          var _setupLength = _bone.data.length;\n\n          if (_setupLength < PathConstraint.epsilon) {\n            if (scale) lengths[_i] = 0;\n            spaces[++_i] = spacing;\n          } else {\n            var _x = _setupLength * _bone.a,\n                _y = _setupLength * _bone.c;\n\n            var length = Math.sqrt(_x * _x + _y * _y);\n            if (scale) lengths[_i] = length;\n            spaces[++_i] = length;\n            sum += length;\n          }\n        }\n\n        if (sum > 0) {\n          sum = spacesCount / sum * spacing;\n\n          for (var _i2 = 1; _i2 < spacesCount; _i2++) {\n            spaces[_i2] *= sum;\n          }\n        }\n\n        break;\n\n      default:\n        var lengthSpacing = data.spacingMode == _PathConstraintData.SpacingMode.Length;\n\n        for (var _i3 = 0, _n2 = spacesCount - 1; _i3 < _n2;) {\n          var _bone2 = bones[_i3];\n          var _setupLength2 = _bone2.data.length;\n\n          if (_setupLength2 < PathConstraint.epsilon) {\n            if (scale) lengths[_i3] = 0;\n            spaces[++_i3] = spacing;\n          } else {\n            var _x2 = _setupLength2 * _bone2.a,\n                _y2 = _setupLength2 * _bone2.c;\n\n            var _length = Math.sqrt(_x2 * _x2 + _y2 * _y2);\n\n            if (scale) lengths[_i3] = _length;\n            spaces[++_i3] = (lengthSpacing ? _setupLength2 + spacing : spacing) * _length / _setupLength2;\n          }\n        }\n\n    }\n\n    var positions = this.computeWorldPositions(attachment, spacesCount, tangents);\n    var boneX = positions[0],\n        boneY = positions[1],\n        offsetRotation = data.offsetRotation;\n    var tip = false;\n    if (offsetRotation == 0) tip = data.rotateMode == _PathConstraintData.RotateMode.Chain;else {\n      tip = false;\n      var p = this.target.bone;\n      offsetRotation *= p.a * p.d - p.b * p.c > 0 ? _Utils.MathUtils.degRad : -_Utils.MathUtils.degRad;\n    }\n\n    for (var _i4 = 0, _p = 3; _i4 < boneCount; _i4++, _p += 3) {\n      var _bone3 = bones[_i4];\n      _bone3.worldX += (boneX - _bone3.worldX) * mixX;\n      _bone3.worldY += (boneY - _bone3.worldY) * mixY;\n      var _x3 = positions[_p],\n          _y3 = positions[_p + 1],\n          dx = _x3 - boneX,\n          dy = _y3 - boneY;\n\n      if (scale) {\n        var _length2 = lengths[_i4];\n\n        if (_length2 != 0) {\n          var s = (Math.sqrt(dx * dx + dy * dy) / _length2 - 1) * mixRotate + 1;\n          _bone3.a *= s;\n          _bone3.c *= s;\n        }\n      }\n\n      boneX = _x3;\n      boneY = _y3;\n\n      if (mixRotate > 0) {\n        var a = _bone3.a,\n            b = _bone3.b,\n            c = _bone3.c,\n            d = _bone3.d,\n            r = 0,\n            cos = 0,\n            sin = 0;\n        if (tangents) r = positions[_p - 1];else if (spaces[_i4 + 1] == 0) r = positions[_p + 2];else r = Math.atan2(dy, dx);\n        r -= Math.atan2(c, a);\n\n        if (tip) {\n          cos = Math.cos(r);\n          sin = Math.sin(r);\n          var _length3 = _bone3.data.length;\n          boneX += (_length3 * (cos * a - sin * c) - dx) * mixRotate;\n          boneY += (_length3 * (sin * a + cos * c) - dy) * mixRotate;\n        } else {\n          r += offsetRotation;\n        }\n\n        if (r > _Utils.MathUtils.PI) r -= _Utils.MathUtils.PI2;else if (r < -_Utils.MathUtils.PI) //\n          r += _Utils.MathUtils.PI2;\n        r *= mixRotate;\n        cos = Math.cos(r);\n        sin = Math.sin(r);\n        _bone3.a = cos * a - sin * c;\n        _bone3.b = cos * b - sin * d;\n        _bone3.c = sin * a + cos * c;\n        _bone3.d = sin * b + cos * d;\n      }\n\n      _bone3.updateAppliedTransform();\n    }\n  };\n\n  _proto.computeWorldPositions = function computeWorldPositions(path, spacesCount, tangents) {\n    var target = this.target;\n    var position = this.position;\n\n    var spaces = this.spaces,\n        out = _Utils.Utils.setArraySize(this.positions, spacesCount * 3 + 2),\n        world = null;\n\n    var closed = path.closed;\n    var verticesLength = path.worldVerticesLength,\n        curveCount = verticesLength / 6,\n        prevCurve = PathConstraint.NONE;\n\n    if (!path.constantSpeed) {\n      var lengths = path.lengths;\n      curveCount -= closed ? 1 : 2;\n      var _pathLength = lengths[curveCount];\n      if (this.data.positionMode == _PathConstraintData.PositionMode.Percent) position *= _pathLength;\n\n      var _multiplier;\n\n      switch (this.data.spacingMode) {\n        case _PathConstraintData.SpacingMode.Percent:\n          _multiplier = _pathLength;\n          break;\n\n        case _PathConstraintData.SpacingMode.Proportional:\n          _multiplier = _pathLength / spacesCount;\n          break;\n\n        default:\n          _multiplier = 1;\n      }\n\n      world = _Utils.Utils.setArraySize(this.world, 8);\n\n      for (var i = 0, o = 0, curve = 0; i < spacesCount; i++, o += 3) {\n        var space = spaces[i] * _multiplier;\n        position += space;\n        var p = position;\n\n        if (closed) {\n          p %= _pathLength;\n          if (p < 0) p += _pathLength;\n          curve = 0;\n        } else if (p < 0) {\n          if (prevCurve != PathConstraint.BEFORE) {\n            prevCurve = PathConstraint.BEFORE;\n            path.computeWorldVertices(target, 2, 4, world, 0, 2);\n          }\n\n          this.addBeforePosition(p, world, 0, out, o);\n          continue;\n        } else if (p > _pathLength) {\n          if (prevCurve != PathConstraint.AFTER) {\n            prevCurve = PathConstraint.AFTER;\n            path.computeWorldVertices(target, verticesLength - 6, 4, world, 0, 2);\n          }\n\n          this.addAfterPosition(p - _pathLength, world, 0, out, o);\n          continue;\n        } // Determine curve containing position.\n\n\n        for (;; curve++) {\n          var length = lengths[curve];\n          if (p > length) continue;\n          if (curve == 0) p /= length;else {\n            var prev = lengths[curve - 1];\n            p = (p - prev) / (length - prev);\n          }\n          break;\n        }\n\n        if (curve != prevCurve) {\n          prevCurve = curve;\n\n          if (closed && curve == curveCount) {\n            path.computeWorldVertices(target, verticesLength - 4, 4, world, 0, 2);\n            path.computeWorldVertices(target, 0, 4, world, 4, 2);\n          } else path.computeWorldVertices(target, curve * 6 + 2, 8, world, 0, 2);\n        }\n\n        this.addCurvePosition(p, world[0], world[1], world[2], world[3], world[4], world[5], world[6], world[7], out, o, tangents || i > 0 && space == 0);\n      }\n\n      return out;\n    } // World vertices.\n\n\n    if (closed) {\n      verticesLength += 2;\n      world = _Utils.Utils.setArraySize(this.world, verticesLength);\n      path.computeWorldVertices(target, 2, verticesLength - 4, world, 0, 2);\n      path.computeWorldVertices(target, 0, 2, world, verticesLength - 4, 2);\n      world[verticesLength - 2] = world[0];\n      world[verticesLength - 1] = world[1];\n    } else {\n      curveCount--;\n      verticesLength -= 4;\n      world = _Utils.Utils.setArraySize(this.world, verticesLength);\n      path.computeWorldVertices(target, 2, verticesLength, world, 0, 2);\n    } // Curve lengths.\n\n\n    var curves = _Utils.Utils.setArraySize(this.curves, curveCount);\n\n    var pathLength = 0;\n    var x1 = world[0],\n        y1 = world[1],\n        cx1 = 0,\n        cy1 = 0,\n        cx2 = 0,\n        cy2 = 0,\n        x2 = 0,\n        y2 = 0;\n    var tmpx = 0,\n        tmpy = 0,\n        dddfx = 0,\n        dddfy = 0,\n        ddfx = 0,\n        ddfy = 0,\n        dfx = 0,\n        dfy = 0;\n\n    for (var _i5 = 0, w = 2; _i5 < curveCount; _i5++, w += 6) {\n      cx1 = world[w];\n      cy1 = world[w + 1];\n      cx2 = world[w + 2];\n      cy2 = world[w + 3];\n      x2 = world[w + 4];\n      y2 = world[w + 5];\n      tmpx = (x1 - cx1 * 2 + cx2) * 0.1875;\n      tmpy = (y1 - cy1 * 2 + cy2) * 0.1875;\n      dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.09375;\n      dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.09375;\n      ddfx = tmpx * 2 + dddfx;\n      ddfy = tmpy * 2 + dddfy;\n      dfx = (cx1 - x1) * 0.75 + tmpx + dddfx * 0.16666667;\n      dfy = (cy1 - y1) * 0.75 + tmpy + dddfy * 0.16666667;\n      pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n      dfx += ddfx;\n      dfy += ddfy;\n      ddfx += dddfx;\n      ddfy += dddfy;\n      pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n      dfx += ddfx;\n      dfy += ddfy;\n      pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n      dfx += ddfx + dddfx;\n      dfy += ddfy + dddfy;\n      pathLength += Math.sqrt(dfx * dfx + dfy * dfy);\n      curves[_i5] = pathLength;\n      x1 = x2;\n      y1 = y2;\n    }\n\n    if (this.data.positionMode == _PathConstraintData.PositionMode.Percent) position *= pathLength;\n    var multiplier;\n\n    switch (this.data.spacingMode) {\n      case _PathConstraintData.SpacingMode.Percent:\n        multiplier = pathLength;\n        break;\n\n      case _PathConstraintData.SpacingMode.Proportional:\n        multiplier = pathLength / spacesCount;\n        break;\n\n      default:\n        multiplier = 1;\n    }\n\n    var segments = this.segments;\n    var curveLength = 0;\n\n    for (var _i6 = 0, _o = 0, _curve = 0, segment = 0; _i6 < spacesCount; _i6++, _o += 3) {\n      var _space = spaces[_i6] * multiplier;\n\n      position += _space;\n      var _p2 = position;\n\n      if (closed) {\n        _p2 %= pathLength;\n        if (_p2 < 0) _p2 += pathLength;\n        _curve = 0;\n      } else if (_p2 < 0) {\n        this.addBeforePosition(_p2, world, 0, out, _o);\n        continue;\n      } else if (_p2 > pathLength) {\n        this.addAfterPosition(_p2 - pathLength, world, verticesLength - 4, out, _o);\n        continue;\n      } // Determine curve containing position.\n\n\n      for (;; _curve++) {\n        var _length4 = curves[_curve];\n        if (_p2 > _length4) continue;\n        if (_curve == 0) _p2 /= _length4;else {\n          var _prev = curves[_curve - 1];\n          _p2 = (_p2 - _prev) / (_length4 - _prev);\n        }\n        break;\n      } // Curve segment lengths.\n\n\n      if (_curve != prevCurve) {\n        prevCurve = _curve;\n        var ii = _curve * 6;\n        x1 = world[ii];\n        y1 = world[ii + 1];\n        cx1 = world[ii + 2];\n        cy1 = world[ii + 3];\n        cx2 = world[ii + 4];\n        cy2 = world[ii + 5];\n        x2 = world[ii + 6];\n        y2 = world[ii + 7];\n        tmpx = (x1 - cx1 * 2 + cx2) * 0.03;\n        tmpy = (y1 - cy1 * 2 + cy2) * 0.03;\n        dddfx = ((cx1 - cx2) * 3 - x1 + x2) * 0.006;\n        dddfy = ((cy1 - cy2) * 3 - y1 + y2) * 0.006;\n        ddfx = tmpx * 2 + dddfx;\n        ddfy = tmpy * 2 + dddfy;\n        dfx = (cx1 - x1) * 0.3 + tmpx + dddfx * 0.16666667;\n        dfy = (cy1 - y1) * 0.3 + tmpy + dddfy * 0.16666667;\n        curveLength = Math.sqrt(dfx * dfx + dfy * dfy);\n        segments[0] = curveLength;\n\n        for (ii = 1; ii < 8; ii++) {\n          dfx += ddfx;\n          dfy += ddfy;\n          ddfx += dddfx;\n          ddfy += dddfy;\n          curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n          segments[ii] = curveLength;\n        }\n\n        dfx += ddfx;\n        dfy += ddfy;\n        curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n        segments[8] = curveLength;\n        dfx += ddfx + dddfx;\n        dfy += ddfy + dddfy;\n        curveLength += Math.sqrt(dfx * dfx + dfy * dfy);\n        segments[9] = curveLength;\n        segment = 0;\n      } // Weight by segment length.\n\n\n      _p2 *= curveLength;\n\n      for (;; segment++) {\n        var _length5 = segments[segment];\n        if (_p2 > _length5) continue;\n        if (segment == 0) _p2 /= _length5;else {\n          var _prev2 = segments[segment - 1];\n          _p2 = segment + (_p2 - _prev2) / (_length5 - _prev2);\n        }\n        break;\n      }\n\n      this.addCurvePosition(_p2 * 0.1, x1, y1, cx1, cy1, cx2, cy2, x2, y2, out, _o, tangents || _i6 > 0 && _space == 0);\n    }\n\n    return out;\n  };\n\n  _proto.addBeforePosition = function addBeforePosition(p, temp, i, out, o) {\n    var x1 = temp[i],\n        y1 = temp[i + 1],\n        dx = temp[i + 2] - x1,\n        dy = temp[i + 3] - y1,\n        r = Math.atan2(dy, dx);\n    out[o] = x1 + p * Math.cos(r);\n    out[o + 1] = y1 + p * Math.sin(r);\n    out[o + 2] = r;\n  };\n\n  _proto.addAfterPosition = function addAfterPosition(p, temp, i, out, o) {\n    var x1 = temp[i + 2],\n        y1 = temp[i + 3],\n        dx = x1 - temp[i],\n        dy = y1 - temp[i + 1],\n        r = Math.atan2(dy, dx);\n    out[o] = x1 + p * Math.cos(r);\n    out[o + 1] = y1 + p * Math.sin(r);\n    out[o + 2] = r;\n  };\n\n  _proto.addCurvePosition = function addCurvePosition(p, x1, y1, cx1, cy1, cx2, cy2, x2, y2, out, o, tangents) {\n    if (p == 0 || isNaN(p)) {\n      out[o] = x1;\n      out[o + 1] = y1;\n      out[o + 2] = Math.atan2(cy1 - y1, cx1 - x1);\n      return;\n    }\n\n    var tt = p * p,\n        ttt = tt * p,\n        u = 1 - p,\n        uu = u * u,\n        uuu = uu * u;\n    var ut = u * p,\n        ut3 = ut * 3,\n        uut3 = u * ut3,\n        utt3 = ut3 * p;\n    var x = x1 * uuu + cx1 * uut3 + cx2 * utt3 + x2 * ttt,\n        y = y1 * uuu + cy1 * uut3 + cy2 * utt3 + y2 * ttt;\n    out[o] = x;\n    out[o + 1] = y;\n\n    if (tangents) {\n      if (p < 0.001) out[o + 2] = Math.atan2(cy1 - y1, cx1 - x1);else out[o + 2] = Math.atan2(y - (y1 * uu + cy1 * ut * 2 + cy2 * tt), x - (x1 * uu + cx1 * ut * 2 + cx2 * tt));\n    }\n  };\n\n  return PathConstraint;\n}();\n\nexports.PathConstraint = PathConstraint;\nPathConstraint.NONE = -1;\nPathConstraint.BEFORE = -2;\nPathConstraint.AFTER = -3;\nPathConstraint.epsilon = 0.00001;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","\"use strict\";\n\nexports.__esModule = true;\nexports.SpacingMode = exports.RotateMode = exports.PositionMode = exports.PathConstraintData = void 0;\n\nvar _ConstraintData2 = require(\"./ConstraintData\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/** Stores the setup pose for a {@link PathConstraint}.\r\n *\r\n * See [path constraints](http://esotericsoftware.com/spine-path-constraints) in the Spine User Guide. */\nvar PathConstraintData = /*#__PURE__*/function (_ConstraintData) {\n  _inheritsLoose(PathConstraintData, _ConstraintData);\n\n  function PathConstraintData(name) {\n    var _this;\n\n    _this = _ConstraintData.call(this, name, 0, false) || this;\n    /** The bones that will be modified by this path constraint. */\n\n    _this.bones = new Array();\n    /** The slot whose path attachment will be used to constrained the bones. */\n\n    _this.target = null;\n    /** The mode for positioning the first bone on the path. */\n\n    _this.positionMode = null;\n    /** The mode for positioning the bones after the first bone on the path. */\n\n    _this.spacingMode = null;\n    /** The mode for adjusting the rotation of the bones. */\n\n    _this.rotateMode = null;\n    /** An offset added to the constrained bone rotation. */\n\n    _this.offsetRotation = 0;\n    /** The position along the path. */\n\n    _this.position = 0;\n    /** The spacing between bones. */\n\n    _this.spacing = 0;\n    _this.mixRotate = 0;\n    _this.mixX = 0;\n    _this.mixY = 0;\n    return _this;\n  }\n\n  return PathConstraintData;\n}(_ConstraintData2.ConstraintData);\n/** Controls how the first bone is positioned along the path.\r\n *\r\n * See [position](http://esotericsoftware.com/spine-path-constraints#Position) in the Spine User Guide. */\n\n\nexports.PathConstraintData = PathConstraintData;\nvar PositionMode;\nexports.PositionMode = PositionMode;\n\n(function (PositionMode) {\n  PositionMode[PositionMode[\"Fixed\"] = 0] = \"Fixed\";\n  PositionMode[PositionMode[\"Percent\"] = 1] = \"Percent\";\n})(PositionMode || (exports.PositionMode = PositionMode = {}));\n/** Controls how bones after the first bone are positioned along the path.\r\n *\r\n * See [spacing](http://esotericsoftware.com/spine-path-constraints#Spacing) in the Spine User Guide. */\n\n\nvar SpacingMode;\nexports.SpacingMode = SpacingMode;\n\n(function (SpacingMode) {\n  SpacingMode[SpacingMode[\"Length\"] = 0] = \"Length\";\n  SpacingMode[SpacingMode[\"Fixed\"] = 1] = \"Fixed\";\n  SpacingMode[SpacingMode[\"Percent\"] = 2] = \"Percent\";\n  SpacingMode[SpacingMode[\"Proportional\"] = 3] = \"Proportional\";\n})(SpacingMode || (exports.SpacingMode = SpacingMode = {}));\n/** Controls how bones are rotated, translated, and scaled to match the path.\r\n *\r\n * See [rotate mix](http://esotericsoftware.com/spine-path-constraints#Rotate-mix) in the Spine User Guide. */\n\n\nvar RotateMode;\nexports.RotateMode = RotateMode;\n\n(function (RotateMode) {\n  RotateMode[RotateMode[\"Tangent\"] = 0] = \"Tangent\";\n  RotateMode[RotateMode[\"Chain\"] = 1] = \"Chain\";\n  RotateMode[RotateMode[\"ChainScale\"] = 2] = \"ChainScale\";\n})(RotateMode || (exports.RotateMode = RotateMode = {}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7QUE4QkE7Ozs7OztBQUlBOzs7SUFHYUEsa0I7OztFQThCWiw0QkFBYUMsSUFBYixFQUF5QjtJQUFBOztJQUN4QixtQ0FBTUEsSUFBTixFQUFZLENBQVosRUFBZSxLQUFmO0lBN0JEOztJQUNBLGNBQVEsSUFBSUMsS0FBSixFQUFSO0lBRUE7O0lBQ0EsZUFBbUIsSUFBbkI7SUFFQTs7SUFDQSxxQkFBNkIsSUFBN0I7SUFFQTs7SUFDQSxvQkFBMkIsSUFBM0I7SUFFQTs7SUFDQSxtQkFBeUIsSUFBekI7SUFFQTs7SUFDQSx1QkFBeUIsQ0FBekI7SUFFQTs7SUFDQSxpQkFBbUIsQ0FBbkI7SUFFQTs7SUFDQSxnQkFBa0IsQ0FBbEI7SUFFQSxrQkFBWSxDQUFaO0lBQ0EsYUFBTyxDQUFQO0lBQ0EsYUFBTyxDQUFQO0lBRXlCO0VBRXhCOzs7RUFoQ3NDQywrQjtBQW1DeEM7Ozs7OztBQUdBLElBQVlDLFlBQVo7OztBQUFBLFdBQVlBLFlBQVosRUFBd0I7RUFBR0E7RUFBT0E7QUFBUyxDQUEzQyxFQUFZQSxZQUFZLDRCQUFaQSxZQUFZLE1BQXhCO0FBRUE7Ozs7O0FBR0EsSUFBWUMsV0FBWjs7O0FBQUEsV0FBWUEsV0FBWixFQUF1QjtFQUFHQTtFQUFRQTtFQUFPQTtFQUFTQTtBQUFjLENBQWhFLEVBQVlBLFdBQVcsMkJBQVhBLFdBQVcsTUFBdkI7QUFFQTs7Ozs7QUFHQSxJQUFZQyxVQUFaOzs7QUFBQSxXQUFZQSxVQUFaLEVBQXNCO0VBQUdBO0VBQVNBO0VBQU9BO0FBQVksQ0FBckQsRUFBWUEsVUFBVSwwQkFBVkEsVUFBVSxNQUF0QiIsIm5hbWVzIjpbIlBhdGhDb25zdHJhaW50RGF0YSIsIm5hbWUiLCJBcnJheSIsIkNvbnN0cmFpbnREYXRhIiwiUG9zaXRpb25Nb2RlIiwiU3BhY2luZ01vZGUiLCJSb3RhdGVNb2RlIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9QYXRoQ29uc3RyYWludERhdGEudHMiXSwic291cmNlc0NvbnRlbnQiOltudWxsXX0=","\"use strict\";\n\nexports.__esModule = true;\nexports.Skeleton = void 0;\n\nvar _MeshAttachment = require(\"./attachments/MeshAttachment\");\n\nvar _PathAttachment = require(\"./attachments/PathAttachment\");\n\nvar _RegionAttachment = require(\"./attachments/RegionAttachment\");\n\nvar _Bone = require(\"./Bone\");\n\nvar _IkConstraint = require(\"./IkConstraint\");\n\nvar _PathConstraint = require(\"./PathConstraint\");\n\nvar _Slot = require(\"./Slot\");\n\nvar _TransformConstraint = require(\"./TransformConstraint\");\n\nvar _Utils = require(\"./Utils\");\n\n/******************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated January 1, 2020. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2020, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\r\n * or otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\n\n/** Stores the current pose for a skeleton.\r\n *\r\n * See [Instance objects](http://esotericsoftware.com/spine-runtime-architecture#Instance-objects) in the Spine Runtimes Guide. */\nvar Skeleton = /*#__PURE__*/function () {\n  function Skeleton(data) {\n    /** The skeleton's setup pose data. */\n    this.data = null;\n    /** The skeleton's bones, sorted parent first. The root bone is always the first bone. */\n\n    this.bones = null;\n    /** The skeleton's slots. */\n\n    this.slots = null;\n    /** The skeleton's slots in the order they should be drawn. The returned array may be modified to change the draw order. */\n\n    this.drawOrder = null;\n    /** The skeleton's IK constraints. */\n\n    this.ikConstraints = null;\n    /** The skeleton's transform constraints. */\n\n    this.transformConstraints = null;\n    /** The skeleton's path constraints. */\n\n    this.pathConstraints = null;\n    /** The list of bones and constraints, sorted in the order they should be updated, as computed by {@link #updateCache()}. */\n\n    this._updateCache = new Array();\n    /** The skeleton's current skin. May be null. */\n\n    this.skin = null;\n    /** The color to tint all the skeleton's attachments. */\n\n    this.color = null;\n    /** Returns the skeleton's time. This can be used for tracking, such as with Slot {@link Slot#attachmentTime}.\r\n     * <p>\r\n     * See {@link #update()}. */\n\n    this.time = 0;\n    /** Scales the entire skeleton on the X axis. This affects all bones, even if the bone's transform mode disallows scale\r\n      * inheritance. */\n\n    this.scaleX = 1;\n    /** Scales the entire skeleton on the Y axis. This affects all bones, even if the bone's transform mode disallows scale\r\n      * inheritance. */\n\n    this.scaleY = 1;\n    /** Sets the skeleton X position, which is added to the root bone worldX position. */\n\n    this.x = 0;\n    /** Sets the skeleton Y position, which is added to the root bone worldY position. */\n\n    this.y = 0;\n    if (!data) throw new Error(\"data cannot be null.\");\n    this.data = data;\n    this.bones = new Array();\n\n    for (var i = 0; i < data.bones.length; i++) {\n      var boneData = data.bones[i];\n      var bone = void 0;\n      if (!boneData.parent) bone = new _Bone.Bone(boneData, this, null);else {\n        var parent = this.bones[boneData.parent.index];\n        bone = new _Bone.Bone(boneData, this, parent);\n        parent.children.push(bone);\n      }\n      this.bones.push(bone);\n    }\n\n    this.slots = new Array();\n    this.drawOrder = new Array();\n\n    for (var _i = 0; _i < data.slots.length; _i++) {\n      var slotData = data.slots[_i];\n      var _bone = this.bones[slotData.boneData.index];\n      var slot = new _Slot.Slot(slotData, _bone);\n      this.slots.push(slot);\n      this.drawOrder.push(slot);\n    }\n\n    this.ikConstraints = new Array();\n\n    for (var _i2 = 0; _i2 < data.ikConstraints.length; _i2++) {\n      var ikConstraintData = data.ikConstraints[_i2];\n      this.ikConstraints.push(new _IkConstraint.IkConstraint(ikConstraintData, this));\n    }\n\n    this.transformConstraints = new Array();\n\n    for (var _i3 = 0; _i3 < data.transformConstraints.length; _i3++) {\n      var transformConstraintData = data.transformConstraints[_i3];\n      this.transformConstraints.push(new _TransformConstraint.TransformConstraint(transformConstraintData, this));\n    }\n\n    this.pathConstraints = new Array();\n\n    for (var _i4 = 0; _i4 < data.pathConstraints.length; _i4++) {\n      var pathConstraintData = data.pathConstraints[_i4];\n      this.pathConstraints.push(new _PathConstraint.PathConstraint(pathConstraintData, this));\n    }\n\n    this.color = new _Utils.Color(1, 1, 1, 1);\n    this.updateCache();\n  }\n  /** Caches information about bones and constraints. Must be called if the {@link #getSkin()} is modified or if bones,\r\n   * constraints, or weighted path attachments are added or removed. */\n\n\n  var _proto = Skeleton.prototype;\n\n  _proto.updateCache = function updateCache() {\n    var updateCache = this._updateCache;\n    updateCache.length = 0;\n    var bones = this.bones;\n\n    for (var i = 0, n = bones.length; i < n; i++) {\n      var bone = bones[i];\n      bone.sorted = bone.data.skinRequired;\n      bone.active = !bone.sorted;\n    }\n\n    if (this.skin) {\n      var skinBones = this.skin.bones;\n\n      for (var _i5 = 0, _n = this.skin.bones.length; _i5 < _n; _i5++) {\n        var _bone2 = this.bones[skinBones[_i5].index];\n\n        do {\n          _bone2.sorted = false;\n          _bone2.active = true;\n          _bone2 = _bone2.parent;\n        } while (_bone2);\n      }\n    } // IK first, lowest hierarchy depth first.\n\n\n    var ikConstraints = this.ikConstraints;\n    var transformConstraints = this.transformConstraints;\n    var pathConstraints = this.pathConstraints;\n    var ikCount = ikConstraints.length,\n        transformCount = transformConstraints.length,\n        pathCount = pathConstraints.length;\n    var constraintCount = ikCount + transformCount + pathCount;\n\n    outer: for (var _i6 = 0; _i6 < constraintCount; _i6++) {\n      for (var ii = 0; ii < ikCount; ii++) {\n        var constraint = ikConstraints[ii];\n\n        if (constraint.data.order == _i6) {\n          this.sortIkConstraint(constraint);\n          continue outer;\n        }\n      }\n\n      for (var _ii = 0; _ii < transformCount; _ii++) {\n        var _constraint = transformConstraints[_ii];\n\n        if (_constraint.data.order == _i6) {\n          this.sortTransformConstraint(_constraint);\n          continue outer;\n        }\n      }\n\n      for (var _ii2 = 0; _ii2 < pathCount; _ii2++) {\n        var _constraint2 = pathConstraints[_ii2];\n\n        if (_constraint2.data.order == _i6) {\n          this.sortPathConstraint(_constraint2);\n          continue outer;\n        }\n      }\n    }\n\n    for (var _i7 = 0, _n2 = bones.length; _i7 < _n2; _i7++) {\n      this.sortBone(bones[_i7]);\n    }\n  };\n\n  _proto.sortIkConstraint = function sortIkConstraint(constraint) {\n    constraint.active = constraint.target.isActive() && (!constraint.data.skinRequired || this.skin && _Utils.Utils.contains(this.skin.constraints, constraint.data, true));\n    if (!constraint.active) return;\n    var target = constraint.target;\n    this.sortBone(target);\n    var constrained = constraint.bones;\n    var parent = constrained[0];\n    this.sortBone(parent);\n\n    if (constrained.length == 1) {\n      this._updateCache.push(constraint);\n\n      this.sortReset(parent.children);\n    } else {\n      var child = constrained[constrained.length - 1];\n      this.sortBone(child);\n\n      this._updateCache.push(constraint);\n\n      this.sortReset(parent.children);\n      child.sorted = true;\n    }\n  };\n\n  _proto.sortPathConstraint = function sortPathConstraint(constraint) {\n    constraint.active = constraint.target.bone.isActive() && (!constraint.data.skinRequired || this.skin && _Utils.Utils.contains(this.skin.constraints, constraint.data, true));\n    if (!constraint.active) return;\n    var slot = constraint.target;\n    var slotIndex = slot.data.index;\n    var slotBone = slot.bone;\n    if (this.skin) this.sortPathConstraintAttachment(this.skin, slotIndex, slotBone);\n    if (this.data.defaultSkin && this.data.defaultSkin != this.skin) this.sortPathConstraintAttachment(this.data.defaultSkin, slotIndex, slotBone);\n\n    for (var i = 0, n = this.data.skins.length; i < n; i++) {\n      this.sortPathConstraintAttachment(this.data.skins[i], slotIndex, slotBone);\n    }\n\n    var attachment = slot.getAttachment();\n    if (attachment instanceof _PathAttachment.PathAttachment) this.sortPathConstraintAttachmentWith(attachment, slotBone);\n    var constrained = constraint.bones;\n    var boneCount = constrained.length;\n\n    for (var _i8 = 0; _i8 < boneCount; _i8++) {\n      this.sortBone(constrained[_i8]);\n    }\n\n    this._updateCache.push(constraint);\n\n    for (var _i9 = 0; _i9 < boneCount; _i9++) {\n      this.sortReset(constrained[_i9].children);\n    }\n\n    for (var _i10 = 0; _i10 < boneCount; _i10++) {\n      constrained[_i10].sorted = true;\n    }\n  };\n\n  _proto.sortTransformConstraint = function sortTransformConstraint(constraint) {\n    constraint.active = constraint.target.isActive() && (!constraint.data.skinRequired || this.skin && _Utils.Utils.contains(this.skin.constraints, constraint.data, true));\n    if (!constraint.active) return;\n    this.sortBone(constraint.target);\n    var constrained = constraint.bones;\n    var boneCount = constrained.length;\n\n    if (constraint.data.local) {\n      for (var i = 0; i < boneCount; i++) {\n        var child = constrained[i];\n        this.sortBone(child.parent);\n        this.sortBone(child);\n      }\n    } else {\n      for (var _i11 = 0; _i11 < boneCount; _i11++) {\n        this.sortBone(constrained[_i11]);\n      }\n    }\n\n    this._updateCache.push(constraint);\n\n    for (var _i12 = 0; _i12 < boneCount; _i12++) {\n      this.sortReset(constrained[_i12].children);\n    }\n\n    for (var _i13 = 0; _i13 < boneCount; _i13++) {\n      constrained[_i13].sorted = true;\n    }\n  };\n\n  _proto.sortPathConstraintAttachment = function sortPathConstraintAttachment(skin, slotIndex, slotBone) {\n    var attachments = skin.attachments[slotIndex];\n    if (!attachments) return;\n\n    for (var key in attachments) {\n      this.sortPathConstraintAttachmentWith(attachments[key], slotBone);\n    }\n  };\n\n  _proto.sortPathConstraintAttachmentWith = function sortPathConstraintAttachmentWith(attachment, slotBone) {\n    if (!(attachment instanceof _PathAttachment.PathAttachment)) return;\n    var pathBones = attachment.bones;\n    if (!pathBones) this.sortBone(slotBone);else {\n      var bones = this.bones;\n\n      for (var i = 0, n = pathBones.length; i < n;) {\n        var nn = pathBones[i++];\n        nn += i;\n\n        while (i < nn) {\n          this.sortBone(bones[pathBones[i++]]);\n        }\n      }\n    }\n  };\n\n  _proto.sortBone = function sortBone(bone) {\n    if (bone.sorted) return;\n    var parent = bone.parent;\n    if (parent) this.sortBone(parent);\n    bone.sorted = true;\n\n    this._updateCache.push(bone);\n  };\n\n  _proto.sortReset = function sortReset(bones) {\n    for (var i = 0, n = bones.length; i < n; i++) {\n      var bone = bones[i];\n      if (!bone.active) continue;\n      if (bone.sorted) this.sortReset(bone.children);\n      bone.sorted = false;\n    }\n  }\n  /** Updates the world transform for each bone and applies all constraints.\r\n   *\r\n   * See [World transforms](http://esotericsoftware.com/spine-runtime-skeletons#World-transforms) in the Spine\r\n   * Runtimes Guide. */\n  ;\n\n  _proto.updateWorldTransform = function updateWorldTransform() {\n    var bones = this.bones;\n\n    for (var i = 0, n = bones.length; i < n; i++) {\n      var bone = bones[i];\n      bone.ax = bone.x;\n      bone.ay = bone.y;\n      bone.arotation = bone.rotation;\n      bone.ascaleX = bone.scaleX;\n      bone.ascaleY = bone.scaleY;\n      bone.ashearX = bone.shearX;\n      bone.ashearY = bone.shearY;\n    }\n\n    var updateCache = this._updateCache;\n\n    for (var _i14 = 0, _n3 = updateCache.length; _i14 < _n3; _i14++) {\n      updateCache[_i14].update();\n    }\n  };\n\n  _proto.updateWorldTransformWith = function updateWorldTransformWith(parent) {\n    // Apply the parent bone transform to the root bone. The root bone always inherits scale, rotation and reflection.\n    var rootBone = this.getRootBone();\n    var pa = parent.a,\n        pb = parent.b,\n        pc = parent.c,\n        pd = parent.d;\n    rootBone.worldX = pa * this.x + pb * this.y + parent.worldX;\n    rootBone.worldY = pc * this.x + pd * this.y + parent.worldY;\n    var rotationY = rootBone.rotation + 90 + rootBone.shearY;\n    var la = _Utils.MathUtils.cosDeg(rootBone.rotation + rootBone.shearX) * rootBone.scaleX;\n    var lb = _Utils.MathUtils.cosDeg(rotationY) * rootBone.scaleY;\n    var lc = _Utils.MathUtils.sinDeg(rootBone.rotation + rootBone.shearX) * rootBone.scaleX;\n    var ld = _Utils.MathUtils.sinDeg(rotationY) * rootBone.scaleY;\n    rootBone.a = (pa * la + pb * lc) * this.scaleX;\n    rootBone.b = (pa * lb + pb * ld) * this.scaleX;\n    rootBone.c = (pc * la + pd * lc) * this.scaleY;\n    rootBone.d = (pc * lb + pd * ld) * this.scaleY; // Update everything except root bone.\n\n    var updateCache = this._updateCache;\n\n    for (var i = 0, n = updateCache.length; i < n; i++) {\n      var updatable = updateCache[i];\n      if (updatable != rootBone) updatable.update();\n    }\n  }\n  /** Sets the bones, constraints, and slots to their setup pose values. */\n  ;\n\n  _proto.setToSetupPose = function setToSetupPose() {\n    this.setBonesToSetupPose();\n    this.setSlotsToSetupPose();\n  }\n  /** Sets the bones and constraints to their setup pose values. */\n  ;\n\n  _proto.setBonesToSetupPose = function setBonesToSetupPose() {\n    var bones = this.bones;\n\n    for (var i = 0, n = bones.length; i < n; i++) {\n      bones[i].setToSetupPose();\n    }\n\n    var ikConstraints = this.ikConstraints;\n\n    for (var _i15 = 0, _n4 = ikConstraints.length; _i15 < _n4; _i15++) {\n      var constraint = ikConstraints[_i15];\n      constraint.mix = constraint.data.mix;\n      constraint.softness = constraint.data.softness;\n      constraint.bendDirection = constraint.data.bendDirection;\n      constraint.compress = constraint.data.compress;\n      constraint.stretch = constraint.data.stretch;\n    }\n\n    var transformConstraints = this.transformConstraints;\n\n    for (var _i16 = 0, _n5 = transformConstraints.length; _i16 < _n5; _i16++) {\n      var _constraint3 = transformConstraints[_i16];\n      var data = _constraint3.data;\n      _constraint3.mixRotate = data.mixRotate;\n      _constraint3.mixX = data.mixX;\n      _constraint3.mixY = data.mixY;\n      _constraint3.mixScaleX = data.mixScaleX;\n      _constraint3.mixScaleY = data.mixScaleY;\n      _constraint3.mixShearY = data.mixShearY;\n    }\n\n    var pathConstraints = this.pathConstraints;\n\n    for (var _i17 = 0, _n6 = pathConstraints.length; _i17 < _n6; _i17++) {\n      var _constraint4 = pathConstraints[_i17];\n      var _data = _constraint4.data;\n      _constraint4.position = _data.position;\n      _constraint4.spacing = _data.spacing;\n      _constraint4.mixRotate = _data.mixRotate;\n      _constraint4.mixX = _data.mixX;\n      _constraint4.mixY = _data.mixY;\n    }\n  }\n  /** Sets the slots and draw order to their setup pose values. */\n  ;\n\n  _proto.setSlotsToSetupPose = function setSlotsToSetupPose() {\n    var slots = this.slots;\n\n    _Utils.Utils.arrayCopy(slots, 0, this.drawOrder, 0, slots.length);\n\n    for (var i = 0, n = slots.length; i < n; i++) {\n      slots[i].setToSetupPose();\n    }\n  }\n  /** @returns May return null. */\n  ;\n\n  _proto.getRootBone = function getRootBone() {\n    if (this.bones.length == 0) return null;\n    return this.bones[0];\n  }\n  /** @returns May be null. */\n  ;\n\n  _proto.findBone = function findBone(boneName) {\n    if (!boneName) throw new Error(\"boneName cannot be null.\");\n    var bones = this.bones;\n\n    for (var i = 0, n = bones.length; i < n; i++) {\n      var bone = bones[i];\n      if (bone.data.name == boneName) return bone;\n    }\n\n    return null;\n  }\n  /** Finds a slot by comparing each slot's name. It is more efficient to cache the results of this method than to call it\r\n   * repeatedly.\r\n   * @returns May be null. */\n  ;\n\n  _proto.findSlot = function findSlot(slotName) {\n    if (!slotName) throw new Error(\"slotName cannot be null.\");\n    var slots = this.slots;\n\n    for (var i = 0, n = slots.length; i < n; i++) {\n      var slot = slots[i];\n      if (slot.data.name == slotName) return slot;\n    }\n\n    return null;\n  }\n  /** Sets a skin by name.\r\n   *\r\n   * See {@link #setSkin()}. */\n  ;\n\n  _proto.setSkinByName = function setSkinByName(skinName) {\n    var skin = this.data.findSkin(skinName);\n    if (!skin) throw new Error(\"Skin not found: \" + skinName);\n    this.setSkin(skin);\n  }\n  /** Sets the skin used to look up attachments before looking in the {@link SkeletonData#defaultSkin default skin}. If the\r\n   * skin is changed, {@link #updateCache()} is called.\r\n   *\r\n   * Attachments from the new skin are attached if the corresponding attachment from the old skin was attached. If there was no\r\n   * old skin, each slot's setup mode attachment is attached from the new skin.\r\n   *\r\n   * After changing the skin, the visible attachments can be reset to those attached in the setup pose by calling\r\n   * {@link #setSlotsToSetupPose()}. Also, often {@link AnimationState#apply()} is called before the next time the\r\n   * skeleton is rendered to allow any attachment keys in the current animation(s) to hide or show attachments from the new skin.\r\n   * @param newSkin May be null. */\n  ;\n\n  _proto.setSkin = function setSkin(newSkin) {\n    if (newSkin == this.skin) return;\n\n    if (newSkin) {\n      if (this.skin) newSkin.attachAll(this, this.skin);else {\n        var slots = this.slots;\n\n        for (var i = 0, n = slots.length; i < n; i++) {\n          var slot = slots[i];\n          var name = slot.data.attachmentName;\n\n          if (name) {\n            var attachment = newSkin.getAttachment(i, name);\n            if (attachment) slot.setAttachment(attachment);\n          }\n        }\n      }\n    }\n\n    this.skin = newSkin;\n    this.updateCache();\n  }\n  /** Finds an attachment by looking in the {@link #skin} and {@link SkeletonData#defaultSkin} using the slot name and attachment\r\n   * name.\r\n   *\r\n   * See {@link #getAttachment()}.\r\n   * @returns May be null. */\n  ;\n\n  _proto.getAttachmentByName = function getAttachmentByName(slotName, attachmentName) {\n    return this.getAttachment(this.data.findSlot(slotName).index, attachmentName);\n  }\n  /** Finds an attachment by looking in the {@link #skin} and {@link SkeletonData#defaultSkin} using the slot index and\r\n   * attachment name. First the skin is checked and if the attachment was not found, the default skin is checked.\r\n   *\r\n   * See [Runtime skins](http://esotericsoftware.com/spine-runtime-skins) in the Spine Runtimes Guide.\r\n   * @returns May be null. */\n  ;\n\n  _proto.getAttachment = function getAttachment(slotIndex, attachmentName) {\n    if (!attachmentName) throw new Error(\"attachmentName cannot be null.\");\n\n    if (this.skin) {\n      var attachment = this.skin.getAttachment(slotIndex, attachmentName);\n      if (attachment) return attachment;\n    }\n\n    if (this.data.defaultSkin) return this.data.defaultSkin.getAttachment(slotIndex, attachmentName);\n    return null;\n  }\n  /** A convenience method to set an attachment by finding the slot with {@link #findSlot()}, finding the attachment with\r\n   * {@link #getAttachment()}, then setting the slot's {@link Slot#attachment}.\r\n   * @param attachmentName May be null to clear the slot's attachment. */\n  ;\n\n  _proto.setAttachment = function setAttachment(slotName, attachmentName) {\n    if (!slotName) throw new Error(\"slotName cannot be null.\");\n    var slots = this.slots;\n\n    for (var i = 0, n = slots.length; i < n; i++) {\n      var slot = slots[i];\n\n      if (slot.data.name == slotName) {\n        var attachment = null;\n\n        if (attachmentName) {\n          attachment = this.getAttachment(i, attachmentName);\n          if (!attachment) throw new Error(\"Attachment not found: \" + attachmentName + \", for slot: \" + slotName);\n        }\n\n        slot.setAttachment(attachment);\n        return;\n      }\n    }\n\n    throw new Error(\"Slot not found: \" + slotName);\n  }\n  /** Finds an IK constraint by comparing each IK constraint's name. It is more efficient to cache the results of this method\r\n   * than to call it repeatedly.\r\n   * @return May be null. */\n  ;\n\n  _proto.findIkConstraint = function findIkConstraint(constraintName) {\n    if (!constraintName) throw new Error(\"constraintName cannot be null.\");\n    var ikConstraints = this.ikConstraints;\n\n    for (var i = 0, n = ikConstraints.length; i < n; i++) {\n      var ikConstraint = ikConstraints[i];\n      if (ikConstraint.data.name == constraintName) return ikConstraint;\n    }\n\n    return null;\n  }\n  /** Finds a transform constraint by comparing each transform constraint's name. It is more efficient to cache the results of\r\n   * this method than to call it repeatedly.\r\n   * @return May be null. */\n  ;\n\n  _proto.findTransformConstraint = function findTransformConstraint(constraintName) {\n    if (!constraintName) throw new Error(\"constraintName cannot be null.\");\n    var transformConstraints = this.transformConstraints;\n\n    for (var i = 0, n = transformConstraints.length; i < n; i++) {\n      var constraint = transformConstraints[i];\n      if (constraint.data.name == constraintName) return constraint;\n    }\n\n    return null;\n  }\n  /** Finds a path constraint by comparing each path constraint's name. It is more efficient to cache the results of this method\r\n   * than to call it repeatedly.\r\n   * @return May be null. */\n  ;\n\n  _proto.findPathConstraint = function findPathConstraint(constraintName) {\n    if (!constraintName) throw new Error(\"constraintName cannot be null.\");\n    var pathConstraints = this.pathConstraints;\n\n    for (var i = 0, n = pathConstraints.length; i < n; i++) {\n      var constraint = pathConstraints[i];\n      if (constraint.data.name == constraintName) return constraint;\n    }\n\n    return null;\n  }\n  /** Returns the axis aligned bounding box (AABB) of the region and mesh attachments for the current pose as `{ x: number, y: number, width: number, height: number }`.\r\n   * Note that this method will create temporary objects which can add to garbage collection pressure. Use `getBounds()` if garbage collection is a concern. */\n  ;\n\n  _proto.getBoundsRect = function getBoundsRect() {\n    var offset = new _Utils.Vector2();\n    var size = new _Utils.Vector2();\n    this.getBounds(offset, size);\n    return {\n      x: offset.x,\n      y: offset.y,\n      width: size.x,\n      height: size.y\n    };\n  }\n  /** Returns the axis aligned bounding box (AABB) of the region and mesh attachments for the current pose.\r\n   * @param offset An output value, the distance from the skeleton origin to the bottom left corner of the AABB.\r\n   * @param size An output value, the width and height of the AABB.\r\n   * @param temp Working memory to temporarily store attachments' computed world vertices. */\n  ;\n\n  _proto.getBounds = function getBounds(offset, size, temp) {\n    if (temp === void 0) {\n      temp = new Array(2);\n    }\n\n    if (!offset) throw new Error(\"offset cannot be null.\");\n    if (!size) throw new Error(\"size cannot be null.\");\n    var drawOrder = this.drawOrder;\n    var minX = Number.POSITIVE_INFINITY,\n        minY = Number.POSITIVE_INFINITY,\n        maxX = Number.NEGATIVE_INFINITY,\n        maxY = Number.NEGATIVE_INFINITY;\n\n    for (var i = 0, n = drawOrder.length; i < n; i++) {\n      var slot = drawOrder[i];\n      if (!slot.bone.active) continue;\n      var verticesLength = 0;\n      var vertices = null;\n      var attachment = slot.getAttachment();\n\n      if (attachment instanceof _RegionAttachment.RegionAttachment) {\n        verticesLength = 8;\n        vertices = _Utils.Utils.setArraySize(temp, verticesLength, 0);\n        attachment.computeWorldVertices(slot.bone, vertices, 0, 2);\n      } else if (attachment instanceof _MeshAttachment.MeshAttachment) {\n        var mesh = attachment;\n        verticesLength = mesh.worldVerticesLength;\n        vertices = _Utils.Utils.setArraySize(temp, verticesLength, 0);\n        mesh.computeWorldVertices(slot, 0, verticesLength, vertices, 0, 2);\n      }\n\n      if (vertices) {\n        for (var ii = 0, nn = vertices.length; ii < nn; ii += 2) {\n          var x = vertices[ii],\n              y = vertices[ii + 1];\n          minX = Math.min(minX, x);\n          minY = Math.min(minY, y);\n          maxX = Math.max(maxX, x);\n          maxY = Math.max(maxY, y);\n        }\n      }\n    }\n\n    offset.set(minX, minY);\n    size.set(maxX - minX, maxY - minY);\n  }\n  /** Increments the skeleton's {@link #time}. */\n  ;\n\n  _proto.update = function update(delta) {\n    this.time += delta;\n  };\n\n  return Skeleton;\n}();\n\nexports.Skeleton = Skeleton;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TSxJQUFJLEdBQUdILElBQTdCO0VBQ0E7RUFFRDs7O1NBQ0F0RSxNLEdBQUEsZ0JBQVFzRixLQUFSLEVBQXFCO0lBQ3BCLEtBQUtDLElBQUwsSUFBYUQsS0FBYjtFQUNBLEMiLCJuYW1lcyI6WyJTa2VsZXRvbiIsImRhdGEiLCJBcnJheSIsIkVycm9yIiwiYm9uZXMiLCJpIiwibGVuZ3RoIiwiYm9uZURhdGEiLCJib25lIiwicGFyZW50IiwiQm9uZSIsImluZGV4IiwiY2hpbGRyZW4iLCJwdXNoIiwic2xvdHMiLCJkcmF3T3JkZXIiLCJzbG90RGF0YSIsInNsb3QiLCJTbG90IiwiaWtDb25zdHJhaW50cyIsImlrQ29uc3RyYWludERhdGEiLCJJa0NvbnN0cmFpbnQiLCJ0cmFuc2Zvcm1Db25zdHJhaW50cyIsInRyYW5zZm9ybUNvbnN0cmFpbnREYXRhIiwiVHJhbnNmb3JtQ29uc3RyYWludCIsInBhdGhDb25zdHJhaW50cyIsInBhdGhDb25zdHJhaW50RGF0YSIsIlBhdGhDb25zdHJhaW50IiwiY29sb3IiLCJDb2xvciIsInVwZGF0ZUNhY2hlIiwiX3VwZGF0ZUNhY2hlIiwibiIsInNvcnRlZCIsInNraW5SZXF1aXJlZCIsImFjdGl2ZSIsInNraW4iLCJza2luQm9uZXMiLCJpa0NvdW50IiwidHJhbnNmb3JtQ291bnQiLCJwYXRoQ291bnQiLCJjb25zdHJhaW50Q291bnQiLCJvdXRlciIsImlpIiwiY29uc3RyYWludCIsIm9yZGVyIiwic29ydElrQ29uc3RyYWludCIsInNvcnRUcmFuc2Zvcm1Db25zdHJhaW50Iiwic29ydFBhdGhDb25zdHJhaW50Iiwic29ydEJvbmUiLCJ0YXJnZXQiLCJpc0FjdGl2ZSIsIlV0aWxzIiwiY29udGFpbnMiLCJjb25zdHJhaW50cyIsImNvbnN0cmFpbmVkIiwic29ydFJlc2V0IiwiY2hpbGQiLCJzbG90SW5kZXgiLCJzbG90Qm9uZSIsInNvcnRQYXRoQ29uc3RyYWludEF0dGFjaG1lbnQiLCJkZWZhdWx0U2tpbiIsInNraW5zIiwiYXR0YWNobWVudCIsImdldEF0dGFjaG1lbnQiLCJQYXRoQXR0YWNobWVudCIsInNvcnRQYXRoQ29uc3RyYWludEF0dGFjaG1lbnRXaXRoIiwiYm9uZUNvdW50IiwibG9jYWwiLCJhdHRhY2htZW50cyIsImtleSIsInBhdGhCb25lcyIsIm5uIiwidXBkYXRlV29ybGRUcmFuc2Zvcm0iLCJheCIsIngiLCJheSIsInkiLCJhcm90YXRpb24iLCJyb3RhdGlvbiIsImFzY2FsZVgiLCJzY2FsZVgiLCJhc2NhbGVZIiwic2NhbGVZIiwiYXNoZWFyWCIsInNoZWFyWCIsImFzaGVhclkiLCJzaGVhclkiLCJ1cGRhdGUiLCJ1cGRhdGVXb3JsZFRyYW5zZm9ybVdpdGgiLCJyb290Qm9uZSIsImdldFJvb3RCb25lIiwicGEiLCJhIiwicGIiLCJiIiwicGMiLCJjIiwicGQiLCJkIiwid29ybGRYIiwid29ybGRZIiwicm90YXRpb25ZIiwibGEiLCJNYXRoVXRpbHMiLCJjb3NEZWciLCJsYiIsImxjIiwic2luRGVnIiwibGQiLCJ1cGRhdGFibGUiLCJzZXRUb1NldHVwUG9zZSIsInNldEJvbmVzVG9TZXR1cFBvc2UiLCJzZXRTbG90c1RvU2V0dXBQb3NlIiwibWl4Iiwic29mdG5lc3MiLCJiZW5kRGlyZWN0aW9uIiwiY29tcHJlc3MiLCJzdHJldGNoIiwibWl4Um90YXRlIiwibWl4WCIsIm1peFkiLCJtaXhTY2FsZVgiLCJtaXhTY2FsZVkiLCJtaXhTaGVhclkiLCJwb3NpdGlvbiIsInNwYWNpbmciLCJhcnJheUNvcHkiLCJmaW5kQm9uZSIsImJvbmVOYW1lIiwibmFtZSIsImZpbmRTbG90Iiwic2xvdE5hbWUiLCJzZXRTa2luQnlOYW1lIiwic2tpbk5hbWUiLCJmaW5kU2tpbiIsInNldFNraW4iLCJuZXdTa2luIiwiYXR0YWNoQWxsIiwiYXR0YWNobWVudE5hbWUiLCJzZXRBdHRhY2htZW50IiwiZ2V0QXR0YWNobWVudEJ5TmFtZSIsImZpbmRJa0NvbnN0cmFpbnQiLCJjb25zdHJhaW50TmFtZSIsImlrQ29uc3RyYWludCIsImZpbmRUcmFuc2Zvcm1Db25zdHJhaW50IiwiZmluZFBhdGhDb25zdHJhaW50IiwiZ2V0Qm91bmRzUmVjdCIsIm9mZnNldCIsIlZlY3RvcjIiLCJzaXplIiwiZ2V0Qm91bmRzIiwid2lkdGgiLCJoZWlnaHQiLCJ0ZW1wIiwibWluWCIsIk51bWJlciIsIlBPU0lUSVZFX0lORklOSVRZIiwibWluWSIsIm1heFgiLCJORUdBVElWRV9JTkZJTklUWSIsIm1heFkiLCJ2ZXJ0aWNlc0xlbmd0aCIsInZlcnRpY2VzIiwiUmVnaW9uQXR0YWNobWVudCIsInNldEFycmF5U2l6ZSIsImNvbXB1dGVXb3JsZFZlcnRpY2VzIiwiTWVzaEF0dGFjaG1lbnQiLCJtZXNoIiwid29ybGRWZXJ0aWNlc0xlbmd0aCIsIk1hdGgiLCJtaW4iLCJtYXgiLCJzZXQiLCJkZWx0YSIsInRpbWUiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1NrZWxldG9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbbnVsbF19","\"use strict\";\n\nexports.__esModule = true;\nexports.SkeletonBinary = exports.BinaryInput = void 0;\n\nvar _Animation = require(\"./Animation\");\n\nvar _BoneData = require(\"./BoneData\");\n\nvar _Event = require(\"./Event\");\n\nvar _EventData = require(\"./EventData\");\n\nvar _IkConstraintData = require(\"./IkConstraintData\");\n\nvar _PathConstraintData = require(\"./PathConstraintData\");\n\nvar _SkeletonData = require(\"./SkeletonData\");\n\nvar _Skin = require(\"./Skin\");\n\nvar _SlotData = require(\"./SlotData\");\n\nvar _TransformConstraintData = require(\"./TransformConstraintData\");\n\nvar _Utils = require(\"./Utils\");\n\n/******************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated January 1, 2020. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2020, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\r\n * or otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\n\n/** Loads skeleton data in the Spine binary format.\r\n *\r\n * See [Spine binary format](http://esotericsoftware.com/spine-binary-format) and\r\n * [JSON and binary data](http://esotericsoftware.com/spine-loading-skeleton-data#JSON-and-binary-data) in the Spine\r\n * Runtimes Guide. */\nvar SkeletonBinary = /*#__PURE__*/function () {\n  function SkeletonBinary(attachmentLoader) {\n    /** Scales bone positions, image sizes, and translations as they are loaded. This allows different size images to be used at\r\n     * runtime than were used in Spine.\r\n     *\r\n     * See [Scaling](http://esotericsoftware.com/spine-loading-skeleton-data#Scaling) in the Spine Runtimes Guide. */\n    this.scale = 1;\n    this.attachmentLoader = null;\n    this.linkedMeshes = new Array();\n    this.attachmentLoader = attachmentLoader;\n  }\n\n  var _proto = SkeletonBinary.prototype;\n\n  _proto.readSkeletonData = function readSkeletonData(binary) {\n    var scale = this.scale;\n    var skeletonData = new _SkeletonData.SkeletonData();\n    skeletonData.name = \"\"; // BOZO\n\n    var input = new BinaryInput(binary);\n    var lowHash = input.readInt32();\n    var highHash = input.readInt32();\n    skeletonData.hash = highHash == 0 && lowHash == 0 ? null : highHash.toString(16) + lowHash.toString(16);\n    skeletonData.version = input.readString();\n    skeletonData.x = input.readFloat();\n    skeletonData.y = input.readFloat();\n    skeletonData.width = input.readFloat();\n    skeletonData.height = input.readFloat();\n    var nonessential = input.readBoolean();\n\n    if (nonessential) {\n      skeletonData.fps = input.readFloat();\n      skeletonData.imagesPath = input.readString();\n      skeletonData.audioPath = input.readString();\n    }\n\n    var n = 0; // Strings.\n\n    n = input.readInt(true);\n\n    for (var i = 0; i < n; i++) {\n      input.strings.push(input.readString());\n    } // Bones.\n\n\n    n = input.readInt(true);\n\n    for (var _i = 0; _i < n; _i++) {\n      var name = input.readString();\n      var parent = _i == 0 ? null : skeletonData.bones[input.readInt(true)];\n      var data = new _BoneData.BoneData(_i, name, parent);\n      data.rotation = input.readFloat();\n      data.x = input.readFloat() * scale;\n      data.y = input.readFloat() * scale;\n      data.scaleX = input.readFloat();\n      data.scaleY = input.readFloat();\n      data.shearX = input.readFloat();\n      data.shearY = input.readFloat();\n      data.length = input.readFloat() * scale;\n      data.transformMode = input.readInt(true);\n      data.skinRequired = input.readBoolean();\n      if (nonessential) _Utils.Color.rgba8888ToColor(data.color, input.readInt32());\n      skeletonData.bones.push(data);\n    } // Slots.\n\n\n    n = input.readInt(true);\n\n    for (var _i2 = 0; _i2 < n; _i2++) {\n      var slotName = input.readString();\n      var boneData = skeletonData.bones[input.readInt(true)];\n\n      var _data = new _SlotData.SlotData(_i2, slotName, boneData);\n\n      _Utils.Color.rgba8888ToColor(_data.color, input.readInt32());\n\n      var darkColor = input.readInt32();\n      if (darkColor != -1) _Utils.Color.rgb888ToColor(_data.darkColor = new _Utils.Color(), darkColor);\n      _data.attachmentName = input.readStringRef();\n      _data.blendMode = input.readInt(true);\n      skeletonData.slots.push(_data);\n    } // IK constraints.\n\n\n    n = input.readInt(true);\n\n    for (var _i3 = 0, nn; _i3 < n; _i3++) {\n      var _data2 = new _IkConstraintData.IkConstraintData(input.readString());\n\n      _data2.order = input.readInt(true);\n      _data2.skinRequired = input.readBoolean();\n      nn = input.readInt(true);\n\n      for (var ii = 0; ii < nn; ii++) {\n        _data2.bones.push(skeletonData.bones[input.readInt(true)]);\n      }\n\n      _data2.target = skeletonData.bones[input.readInt(true)];\n      _data2.mix = input.readFloat();\n      _data2.softness = input.readFloat() * scale;\n      _data2.bendDirection = input.readByte();\n      _data2.compress = input.readBoolean();\n      _data2.stretch = input.readBoolean();\n      _data2.uniform = input.readBoolean();\n      skeletonData.ikConstraints.push(_data2);\n    } // Transform constraints.\n\n\n    n = input.readInt(true);\n\n    for (var _i4 = 0, _nn; _i4 < n; _i4++) {\n      var _data3 = new _TransformConstraintData.TransformConstraintData(input.readString());\n\n      _data3.order = input.readInt(true);\n      _data3.skinRequired = input.readBoolean();\n      _nn = input.readInt(true);\n\n      for (var _ii = 0; _ii < _nn; _ii++) {\n        _data3.bones.push(skeletonData.bones[input.readInt(true)]);\n      }\n\n      _data3.target = skeletonData.bones[input.readInt(true)];\n      _data3.local = input.readBoolean();\n      _data3.relative = input.readBoolean();\n      _data3.offsetRotation = input.readFloat();\n      _data3.offsetX = input.readFloat() * scale;\n      _data3.offsetY = input.readFloat() * scale;\n      _data3.offsetScaleX = input.readFloat();\n      _data3.offsetScaleY = input.readFloat();\n      _data3.offsetShearY = input.readFloat();\n      _data3.mixRotate = input.readFloat();\n      _data3.mixX = input.readFloat();\n      _data3.mixY = input.readFloat();\n      _data3.mixScaleX = input.readFloat();\n      _data3.mixScaleY = input.readFloat();\n      _data3.mixShearY = input.readFloat();\n      skeletonData.transformConstraints.push(_data3);\n    } // Path constraints.\n\n\n    n = input.readInt(true);\n\n    for (var _i5 = 0, _nn2; _i5 < n; _i5++) {\n      var _data4 = new _PathConstraintData.PathConstraintData(input.readString());\n\n      _data4.order = input.readInt(true);\n      _data4.skinRequired = input.readBoolean();\n      _nn2 = input.readInt(true);\n\n      for (var _ii2 = 0; _ii2 < _nn2; _ii2++) {\n        _data4.bones.push(skeletonData.bones[input.readInt(true)]);\n      }\n\n      _data4.target = skeletonData.slots[input.readInt(true)];\n      _data4.positionMode = input.readInt(true);\n      _data4.spacingMode = input.readInt(true);\n      _data4.rotateMode = input.readInt(true);\n      _data4.offsetRotation = input.readFloat();\n      _data4.position = input.readFloat();\n      if (_data4.positionMode == _PathConstraintData.PositionMode.Fixed) _data4.position *= scale;\n      _data4.spacing = input.readFloat();\n      if (_data4.spacingMode == _PathConstraintData.SpacingMode.Length || _data4.spacingMode == _PathConstraintData.SpacingMode.Fixed) _data4.spacing *= scale;\n      _data4.mixRotate = input.readFloat();\n      _data4.mixX = input.readFloat();\n      _data4.mixY = input.readFloat();\n      skeletonData.pathConstraints.push(_data4);\n    } // Default skin.\n\n\n    var defaultSkin = this.readSkin(input, skeletonData, true, nonessential);\n\n    if (defaultSkin) {\n      skeletonData.defaultSkin = defaultSkin;\n      skeletonData.skins.push(defaultSkin);\n    } // Skins.\n\n\n    {\n      var _i6 = skeletonData.skins.length;\n\n      _Utils.Utils.setArraySize(skeletonData.skins, n = _i6 + input.readInt(true));\n\n      for (; _i6 < n; _i6++) {\n        skeletonData.skins[_i6] = this.readSkin(input, skeletonData, false, nonessential);\n      }\n    } // Linked meshes.\n\n    n = this.linkedMeshes.length;\n\n    for (var _i7 = 0; _i7 < n; _i7++) {\n      var linkedMesh = this.linkedMeshes[_i7];\n      var skin = !linkedMesh.skin ? skeletonData.defaultSkin : skeletonData.findSkin(linkedMesh.skin);\n\n      var _parent = skin.getAttachment(linkedMesh.slotIndex, linkedMesh.parent);\n\n      linkedMesh.mesh.deformAttachment = linkedMesh.inheritDeform ? _parent : linkedMesh.mesh;\n      linkedMesh.mesh.setParentMesh(_parent);\n      linkedMesh.mesh.updateUVs();\n    }\n\n    this.linkedMeshes.length = 0; // Events.\n\n    n = input.readInt(true);\n\n    for (var _i8 = 0; _i8 < n; _i8++) {\n      var _data5 = new _EventData.EventData(input.readStringRef());\n\n      _data5.intValue = input.readInt(false);\n      _data5.floatValue = input.readFloat();\n      _data5.stringValue = input.readString();\n      _data5.audioPath = input.readString();\n\n      if (_data5.audioPath) {\n        _data5.volume = input.readFloat();\n        _data5.balance = input.readFloat();\n      }\n\n      skeletonData.events.push(_data5);\n    } // Animations.\n\n\n    n = input.readInt(true);\n\n    for (var _i9 = 0; _i9 < n; _i9++) {\n      skeletonData.animations.push(this.readAnimation(input, input.readString(), skeletonData));\n    }\n\n    return skeletonData;\n  };\n\n  _proto.readSkin = function readSkin(input, skeletonData, defaultSkin, nonessential) {\n    var skin = null;\n    var slotCount = 0;\n\n    if (defaultSkin) {\n      slotCount = input.readInt(true);\n      if (slotCount == 0) return null;\n      skin = new _Skin.Skin(\"default\");\n    } else {\n      skin = new _Skin.Skin(input.readStringRef());\n      skin.bones.length = input.readInt(true);\n\n      for (var i = 0, n = skin.bones.length; i < n; i++) {\n        skin.bones[i] = skeletonData.bones[input.readInt(true)];\n      }\n\n      for (var _i10 = 0, _n = input.readInt(true); _i10 < _n; _i10++) {\n        skin.constraints.push(skeletonData.ikConstraints[input.readInt(true)]);\n      }\n\n      for (var _i11 = 0, _n2 = input.readInt(true); _i11 < _n2; _i11++) {\n        skin.constraints.push(skeletonData.transformConstraints[input.readInt(true)]);\n      }\n\n      for (var _i12 = 0, _n3 = input.readInt(true); _i12 < _n3; _i12++) {\n        skin.constraints.push(skeletonData.pathConstraints[input.readInt(true)]);\n      }\n\n      slotCount = input.readInt(true);\n    }\n\n    for (var _i13 = 0; _i13 < slotCount; _i13++) {\n      var slotIndex = input.readInt(true);\n\n      for (var ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n        var name = input.readStringRef();\n        var attachment = this.readAttachment(input, skeletonData, skin, slotIndex, name, nonessential);\n        if (attachment) skin.setAttachment(slotIndex, name, attachment);\n      }\n    }\n\n    return skin;\n  };\n\n  _proto.readAttachment = function readAttachment(input, skeletonData, skin, slotIndex, attachmentName, nonessential) {\n    var scale = this.scale;\n    var name = input.readStringRef();\n    if (!name) name = attachmentName;\n\n    switch (input.readByte()) {\n      case AttachmentType.Region:\n        {\n          var path = input.readStringRef();\n          var rotation = input.readFloat();\n          var x = input.readFloat();\n          var y = input.readFloat();\n          var scaleX = input.readFloat();\n          var scaleY = input.readFloat();\n          var width = input.readFloat();\n          var height = input.readFloat();\n          var color = input.readInt32();\n          if (!path) path = name;\n          var region = this.attachmentLoader.newRegionAttachment(skin, name, path);\n          if (!region) return null;\n          region.path = path;\n          region.x = x * scale;\n          region.y = y * scale;\n          region.scaleX = scaleX;\n          region.scaleY = scaleY;\n          region.rotation = rotation;\n          region.width = width * scale;\n          region.height = height * scale;\n\n          _Utils.Color.rgba8888ToColor(region.color, color);\n\n          region.updateOffset();\n          return region;\n        }\n\n      case AttachmentType.BoundingBox:\n        {\n          var vertexCount = input.readInt(true);\n          var vertices = this.readVertices(input, vertexCount);\n\n          var _color = nonessential ? input.readInt32() : 0;\n\n          var box = this.attachmentLoader.newBoundingBoxAttachment(skin, name);\n          if (!box) return null;\n          box.worldVerticesLength = vertexCount << 1;\n          box.vertices = vertices.vertices;\n          box.bones = vertices.bones;\n          if (nonessential) _Utils.Color.rgba8888ToColor(box.color, _color);\n          return box;\n        }\n\n      case AttachmentType.Mesh:\n        {\n          var _path = input.readStringRef();\n\n          var _color2 = input.readInt32();\n\n          var _vertexCount = input.readInt(true);\n\n          var uvs = this.readFloatArray(input, _vertexCount << 1, 1);\n          var triangles = this.readShortArray(input);\n\n          var _vertices = this.readVertices(input, _vertexCount);\n\n          var hullLength = input.readInt(true);\n          var edges = null;\n          var _width = 0,\n              _height = 0;\n\n          if (nonessential) {\n            edges = this.readShortArray(input);\n            _width = input.readFloat();\n            _height = input.readFloat();\n          }\n\n          if (!_path) _path = name;\n          var mesh = this.attachmentLoader.newMeshAttachment(skin, name, _path);\n          if (!mesh) return null;\n          mesh.path = _path;\n\n          _Utils.Color.rgba8888ToColor(mesh.color, _color2);\n\n          mesh.bones = _vertices.bones;\n          mesh.vertices = _vertices.vertices;\n          mesh.worldVerticesLength = _vertexCount << 1;\n          mesh.triangles = triangles;\n          mesh.regionUVs = uvs;\n          mesh.updateUVs();\n          mesh.hullLength = hullLength << 1;\n\n          if (nonessential) {\n            mesh.edges = edges;\n            mesh.width = _width * scale;\n            mesh.height = _height * scale;\n          }\n\n          return mesh;\n        }\n\n      case AttachmentType.LinkedMesh:\n        {\n          var _path2 = input.readStringRef();\n\n          var _color3 = input.readInt32();\n\n          var skinName = input.readStringRef();\n          var parent = input.readStringRef();\n          var inheritDeform = input.readBoolean();\n          var _width2 = 0,\n              _height2 = 0;\n\n          if (nonessential) {\n            _width2 = input.readFloat();\n            _height2 = input.readFloat();\n          }\n\n          if (!_path2) _path2 = name;\n\n          var _mesh = this.attachmentLoader.newMeshAttachment(skin, name, _path2);\n\n          if (!_mesh) return null;\n          _mesh.path = _path2;\n\n          _Utils.Color.rgba8888ToColor(_mesh.color, _color3);\n\n          if (nonessential) {\n            _mesh.width = _width2 * scale;\n            _mesh.height = _height2 * scale;\n          }\n\n          this.linkedMeshes.push(new LinkedMesh(_mesh, skinName, slotIndex, parent, inheritDeform));\n          return _mesh;\n        }\n\n      case AttachmentType.Path:\n        {\n          var closed = input.readBoolean();\n          var constantSpeed = input.readBoolean();\n\n          var _vertexCount2 = input.readInt(true);\n\n          var _vertices2 = this.readVertices(input, _vertexCount2);\n\n          var lengths = _Utils.Utils.newArray(_vertexCount2 / 3, 0);\n\n          for (var i = 0, n = lengths.length; i < n; i++) {\n            lengths[i] = input.readFloat() * scale;\n          }\n\n          var _color4 = nonessential ? input.readInt32() : 0;\n\n          var _path3 = this.attachmentLoader.newPathAttachment(skin, name);\n\n          if (!_path3) return null;\n          _path3.closed = closed;\n          _path3.constantSpeed = constantSpeed;\n          _path3.worldVerticesLength = _vertexCount2 << 1;\n          _path3.vertices = _vertices2.vertices;\n          _path3.bones = _vertices2.bones;\n          _path3.lengths = lengths;\n          if (nonessential) _Utils.Color.rgba8888ToColor(_path3.color, _color4);\n          return _path3;\n        }\n\n      case AttachmentType.Point:\n        {\n          var _rotation = input.readFloat();\n\n          var _x = input.readFloat();\n\n          var _y = input.readFloat();\n\n          var _color5 = nonessential ? input.readInt32() : 0;\n\n          var point = this.attachmentLoader.newPointAttachment(skin, name);\n          if (!point) return null;\n          point.x = _x * scale;\n          point.y = _y * scale;\n          point.rotation = _rotation;\n          if (nonessential) _Utils.Color.rgba8888ToColor(point.color, _color5);\n          return point;\n        }\n\n      case AttachmentType.Clipping:\n        {\n          var endSlotIndex = input.readInt(true);\n\n          var _vertexCount3 = input.readInt(true);\n\n          var _vertices3 = this.readVertices(input, _vertexCount3);\n\n          var _color6 = nonessential ? input.readInt32() : 0;\n\n          var clip = this.attachmentLoader.newClippingAttachment(skin, name);\n          if (!clip) return null;\n          clip.endSlot = skeletonData.slots[endSlotIndex];\n          clip.worldVerticesLength = _vertexCount3 << 1;\n          clip.vertices = _vertices3.vertices;\n          clip.bones = _vertices3.bones;\n          if (nonessential) _Utils.Color.rgba8888ToColor(clip.color, _color6);\n          return clip;\n        }\n    }\n\n    return null;\n  };\n\n  _proto.readVertices = function readVertices(input, vertexCount) {\n    var scale = this.scale;\n    var verticesLength = vertexCount << 1;\n    var vertices = new Vertices();\n\n    if (!input.readBoolean()) {\n      vertices.vertices = this.readFloatArray(input, verticesLength, scale);\n      return vertices;\n    }\n\n    var weights = new Array();\n    var bonesArray = new Array();\n\n    for (var i = 0; i < vertexCount; i++) {\n      var boneCount = input.readInt(true);\n      bonesArray.push(boneCount);\n\n      for (var ii = 0; ii < boneCount; ii++) {\n        bonesArray.push(input.readInt(true));\n        weights.push(input.readFloat() * scale);\n        weights.push(input.readFloat() * scale);\n        weights.push(input.readFloat());\n      }\n    }\n\n    vertices.vertices = _Utils.Utils.toFloatArray(weights);\n    vertices.bones = bonesArray;\n    return vertices;\n  };\n\n  _proto.readFloatArray = function readFloatArray(input, n, scale) {\n    var array = new Array(n);\n\n    if (scale == 1) {\n      for (var i = 0; i < n; i++) {\n        array[i] = input.readFloat();\n      }\n    } else {\n      for (var _i14 = 0; _i14 < n; _i14++) {\n        array[_i14] = input.readFloat() * scale;\n      }\n    }\n\n    return array;\n  };\n\n  _proto.readShortArray = function readShortArray(input) {\n    var n = input.readInt(true);\n    var array = new Array(n);\n\n    for (var i = 0; i < n; i++) {\n      array[i] = input.readShort();\n    }\n\n    return array;\n  };\n\n  _proto.readAnimation = function readAnimation(input, name, skeletonData) {\n    input.readInt(true); // Number of timelines.\n\n    var timelines = new Array();\n    var scale = this.scale;\n    var tempColor1 = new _Utils.Color();\n    var tempColor2 = new _Utils.Color(); // Slot timelines.\n\n    for (var i = 0, n = input.readInt(true); i < n; i++) {\n      var slotIndex = input.readInt(true);\n\n      for (var ii = 0, nn = input.readInt(true); ii < nn; ii++) {\n        var timelineType = input.readByte();\n        var frameCount = input.readInt(true);\n        var frameLast = frameCount - 1;\n\n        switch (timelineType) {\n          case SLOT_ATTACHMENT:\n            {\n              var timeline = new _Animation.AttachmentTimeline(frameCount, slotIndex);\n\n              for (var frame = 0; frame < frameCount; frame++) {\n                timeline.setFrame(frame, input.readFloat(), input.readStringRef());\n              }\n\n              timelines.push(timeline);\n              break;\n            }\n\n          case SLOT_RGBA:\n            {\n              var bezierCount = input.readInt(true);\n\n              var _timeline = new _Animation.RGBATimeline(frameCount, bezierCount, slotIndex);\n\n              var time = input.readFloat();\n              var r = input.readUnsignedByte() / 255.0;\n              var g = input.readUnsignedByte() / 255.0;\n              var b = input.readUnsignedByte() / 255.0;\n              var a = input.readUnsignedByte() / 255.0;\n\n              for (var _frame = 0, bezier = 0;; _frame++) {\n                _timeline.setFrame(_frame, time, r, g, b, a);\n\n                if (_frame == frameLast) break;\n                var time2 = input.readFloat();\n                var r2 = input.readUnsignedByte() / 255.0;\n                var g2 = input.readUnsignedByte() / 255.0;\n                var b2 = input.readUnsignedByte() / 255.0;\n                var a2 = input.readUnsignedByte() / 255.0;\n\n                switch (input.readByte()) {\n                  case CURVE_STEPPED:\n                    _timeline.setStepped(_frame);\n\n                    break;\n\n                  case CURVE_BEZIER:\n                    setBezier(input, _timeline, bezier++, _frame, 0, time, time2, r, r2, 1);\n                    setBezier(input, _timeline, bezier++, _frame, 1, time, time2, g, g2, 1);\n                    setBezier(input, _timeline, bezier++, _frame, 2, time, time2, b, b2, 1);\n                    setBezier(input, _timeline, bezier++, _frame, 3, time, time2, a, a2, 1);\n                }\n\n                time = time2;\n                r = r2;\n                g = g2;\n                b = b2;\n                a = a2;\n              }\n\n              timelines.push(_timeline);\n              break;\n            }\n\n          case SLOT_RGB:\n            {\n              var _bezierCount = input.readInt(true);\n\n              var _timeline2 = new _Animation.RGBTimeline(frameCount, _bezierCount, slotIndex);\n\n              var _time = input.readFloat();\n\n              var _r = input.readUnsignedByte() / 255.0;\n\n              var _g = input.readUnsignedByte() / 255.0;\n\n              var _b = input.readUnsignedByte() / 255.0;\n\n              for (var _frame2 = 0, _bezier = 0;; _frame2++) {\n                _timeline2.setFrame(_frame2, _time, _r, _g, _b);\n\n                if (_frame2 == frameLast) break;\n\n                var _time2 = input.readFloat();\n\n                var _r2 = input.readUnsignedByte() / 255.0;\n\n                var _g2 = input.readUnsignedByte() / 255.0;\n\n                var _b2 = input.readUnsignedByte() / 255.0;\n\n                switch (input.readByte()) {\n                  case CURVE_STEPPED:\n                    _timeline2.setStepped(_frame2);\n\n                    break;\n\n                  case CURVE_BEZIER:\n                    setBezier(input, _timeline2, _bezier++, _frame2, 0, _time, _time2, _r, _r2, 1);\n                    setBezier(input, _timeline2, _bezier++, _frame2, 1, _time, _time2, _g, _g2, 1);\n                    setBezier(input, _timeline2, _bezier++, _frame2, 2, _time, _time2, _b, _b2, 1);\n                }\n\n                _time = _time2;\n                _r = _r2;\n                _g = _g2;\n                _b = _b2;\n              }\n\n              timelines.push(_timeline2);\n              break;\n            }\n\n          case SLOT_RGBA2:\n            {\n              var _bezierCount2 = input.readInt(true);\n\n              var _timeline3 = new _Animation.RGBA2Timeline(frameCount, _bezierCount2, slotIndex);\n\n              var _time3 = input.readFloat();\n\n              var _r3 = input.readUnsignedByte() / 255.0;\n\n              var _g3 = input.readUnsignedByte() / 255.0;\n\n              var _b3 = input.readUnsignedByte() / 255.0;\n\n              var _a = input.readUnsignedByte() / 255.0;\n\n              var _r4 = input.readUnsignedByte() / 255.0;\n\n              var _g4 = input.readUnsignedByte() / 255.0;\n\n              var _b4 = input.readUnsignedByte() / 255.0;\n\n              for (var _frame3 = 0, _bezier2 = 0;; _frame3++) {\n                _timeline3.setFrame(_frame3, _time3, _r3, _g3, _b3, _a, _r4, _g4, _b4);\n\n                if (_frame3 == frameLast) break;\n\n                var _time4 = input.readFloat();\n\n                var nr = input.readUnsignedByte() / 255.0;\n                var ng = input.readUnsignedByte() / 255.0;\n                var nb = input.readUnsignedByte() / 255.0;\n                var na = input.readUnsignedByte() / 255.0;\n                var nr2 = input.readUnsignedByte() / 255.0;\n                var ng2 = input.readUnsignedByte() / 255.0;\n                var nb2 = input.readUnsignedByte() / 255.0;\n\n                switch (input.readByte()) {\n                  case CURVE_STEPPED:\n                    _timeline3.setStepped(_frame3);\n\n                    break;\n\n                  case CURVE_BEZIER:\n                    setBezier(input, _timeline3, _bezier2++, _frame3, 0, _time3, _time4, _r3, nr, 1);\n                    setBezier(input, _timeline3, _bezier2++, _frame3, 1, _time3, _time4, _g3, ng, 1);\n                    setBezier(input, _timeline3, _bezier2++, _frame3, 2, _time3, _time4, _b3, nb, 1);\n                    setBezier(input, _timeline3, _bezier2++, _frame3, 3, _time3, _time4, _a, na, 1);\n                    setBezier(input, _timeline3, _bezier2++, _frame3, 4, _time3, _time4, _r4, nr2, 1);\n                    setBezier(input, _timeline3, _bezier2++, _frame3, 5, _time3, _time4, _g4, ng2, 1);\n                    setBezier(input, _timeline3, _bezier2++, _frame3, 6, _time3, _time4, _b4, nb2, 1);\n                }\n\n                _time3 = _time4;\n                _r3 = nr;\n                _g3 = ng;\n                _b3 = nb;\n                _a = na;\n                _r4 = nr2;\n                _g4 = ng2;\n                _b4 = nb2;\n              }\n\n              timelines.push(_timeline3);\n              break;\n            }\n\n          case SLOT_RGB2:\n            {\n              var _bezierCount3 = input.readInt(true);\n\n              var _timeline4 = new _Animation.RGB2Timeline(frameCount, _bezierCount3, slotIndex);\n\n              var _time5 = input.readFloat();\n\n              var _r5 = input.readUnsignedByte() / 255.0;\n\n              var _g5 = input.readUnsignedByte() / 255.0;\n\n              var _b5 = input.readUnsignedByte() / 255.0;\n\n              var _r6 = input.readUnsignedByte() / 255.0;\n\n              var _g6 = input.readUnsignedByte() / 255.0;\n\n              var _b6 = input.readUnsignedByte() / 255.0;\n\n              for (var _frame4 = 0, _bezier3 = 0;; _frame4++) {\n                _timeline4.setFrame(_frame4, _time5, _r5, _g5, _b5, _r6, _g6, _b6);\n\n                if (_frame4 == frameLast) break;\n\n                var _time6 = input.readFloat();\n\n                var _nr = input.readUnsignedByte() / 255.0;\n\n                var _ng = input.readUnsignedByte() / 255.0;\n\n                var _nb = input.readUnsignedByte() / 255.0;\n\n                var _nr2 = input.readUnsignedByte() / 255.0;\n\n                var _ng2 = input.readUnsignedByte() / 255.0;\n\n                var _nb2 = input.readUnsignedByte() / 255.0;\n\n                switch (input.readByte()) {\n                  case CURVE_STEPPED:\n                    _timeline4.setStepped(_frame4);\n\n                    break;\n\n                  case CURVE_BEZIER:\n                    setBezier(input, _timeline4, _bezier3++, _frame4, 0, _time5, _time6, _r5, _nr, 1);\n                    setBezier(input, _timeline4, _bezier3++, _frame4, 1, _time5, _time6, _g5, _ng, 1);\n                    setBezier(input, _timeline4, _bezier3++, _frame4, 2, _time5, _time6, _b5, _nb, 1);\n                    setBezier(input, _timeline4, _bezier3++, _frame4, 3, _time5, _time6, _r6, _nr2, 1);\n                    setBezier(input, _timeline4, _bezier3++, _frame4, 4, _time5, _time6, _g6, _ng2, 1);\n                    setBezier(input, _timeline4, _bezier3++, _frame4, 5, _time5, _time6, _b6, _nb2, 1);\n                }\n\n                _time5 = _time6;\n                _r5 = _nr;\n                _g5 = _ng;\n                _b5 = _nb;\n                _r6 = _nr2;\n                _g6 = _ng2;\n                _b6 = _nb2;\n              }\n\n              timelines.push(_timeline4);\n              break;\n            }\n\n          case SLOT_ALPHA:\n            {\n              var _timeline5 = new _Animation.AlphaTimeline(frameCount, input.readInt(true), slotIndex);\n\n              var _time7 = input.readFloat(),\n                  _a2 = input.readUnsignedByte() / 255;\n\n              for (var _frame5 = 0, _bezier4 = 0;; _frame5++) {\n                _timeline5.setFrame(_frame5, _time7, _a2);\n\n                if (_frame5 == frameLast) break;\n\n                var _time8 = input.readFloat();\n\n                var _a3 = input.readUnsignedByte() / 255;\n\n                switch (input.readByte()) {\n                  case CURVE_STEPPED:\n                    _timeline5.setStepped(_frame5);\n\n                    break;\n\n                  case CURVE_BEZIER:\n                    setBezier(input, _timeline5, _bezier4++, _frame5, 0, _time7, _time8, _a2, _a3, 1);\n                }\n\n                _time7 = _time8;\n                _a2 = _a3;\n              }\n\n              timelines.push(_timeline5);\n              break;\n            }\n        }\n      }\n    } // Bone timelines.\n\n\n    for (var _i15 = 0, _n4 = input.readInt(true); _i15 < _n4; _i15++) {\n      var boneIndex = input.readInt(true);\n\n      for (var _ii3 = 0, _nn3 = input.readInt(true); _ii3 < _nn3; _ii3++) {\n        var type = input.readByte(),\n            _frameCount = input.readInt(true),\n            _bezierCount4 = input.readInt(true);\n\n        switch (type) {\n          case BONE_ROTATE:\n            timelines.push(readTimeline1(input, new _Animation.RotateTimeline(_frameCount, _bezierCount4, boneIndex), 1));\n            break;\n\n          case BONE_TRANSLATE:\n            timelines.push(readTimeline2(input, new _Animation.TranslateTimeline(_frameCount, _bezierCount4, boneIndex), scale));\n            break;\n\n          case BONE_TRANSLATEX:\n            timelines.push(readTimeline1(input, new _Animation.TranslateXTimeline(_frameCount, _bezierCount4, boneIndex), scale));\n            break;\n\n          case BONE_TRANSLATEY:\n            timelines.push(readTimeline1(input, new _Animation.TranslateYTimeline(_frameCount, _bezierCount4, boneIndex), scale));\n            break;\n\n          case BONE_SCALE:\n            timelines.push(readTimeline2(input, new _Animation.ScaleTimeline(_frameCount, _bezierCount4, boneIndex), 1));\n            break;\n\n          case BONE_SCALEX:\n            timelines.push(readTimeline1(input, new _Animation.ScaleXTimeline(_frameCount, _bezierCount4, boneIndex), 1));\n            break;\n\n          case BONE_SCALEY:\n            timelines.push(readTimeline1(input, new _Animation.ScaleYTimeline(_frameCount, _bezierCount4, boneIndex), 1));\n            break;\n\n          case BONE_SHEAR:\n            timelines.push(readTimeline2(input, new _Animation.ShearTimeline(_frameCount, _bezierCount4, boneIndex), 1));\n            break;\n\n          case BONE_SHEARX:\n            timelines.push(readTimeline1(input, new _Animation.ShearXTimeline(_frameCount, _bezierCount4, boneIndex), 1));\n            break;\n\n          case BONE_SHEARY:\n            timelines.push(readTimeline1(input, new _Animation.ShearYTimeline(_frameCount, _bezierCount4, boneIndex), 1));\n        }\n      }\n    } // IK constraint timelines.\n\n\n    for (var _i16 = 0, _n5 = input.readInt(true); _i16 < _n5; _i16++) {\n      var index = input.readInt(true),\n          _frameCount2 = input.readInt(true),\n          _frameLast = _frameCount2 - 1;\n\n      var _timeline6 = new _Animation.IkConstraintTimeline(_frameCount2, input.readInt(true), index);\n\n      var _time9 = input.readFloat(),\n          mix = input.readFloat(),\n          softness = input.readFloat() * scale;\n\n      for (var _frame6 = 0, _bezier5 = 0;; _frame6++) {\n        _timeline6.setFrame(_frame6, _time9, mix, softness, input.readByte(), input.readBoolean(), input.readBoolean());\n\n        if (_frame6 == _frameLast) break;\n\n        var _time10 = input.readFloat(),\n            mix2 = input.readFloat(),\n            softness2 = input.readFloat() * scale;\n\n        switch (input.readByte()) {\n          case CURVE_STEPPED:\n            _timeline6.setStepped(_frame6);\n\n            break;\n\n          case CURVE_BEZIER:\n            setBezier(input, _timeline6, _bezier5++, _frame6, 0, _time9, _time10, mix, mix2, 1);\n            setBezier(input, _timeline6, _bezier5++, _frame6, 1, _time9, _time10, softness, softness2, scale);\n        }\n\n        _time9 = _time10;\n        mix = mix2;\n        softness = softness2;\n      }\n\n      timelines.push(_timeline6);\n    } // Transform constraint timelines.\n\n\n    for (var _i17 = 0, _n6 = input.readInt(true); _i17 < _n6; _i17++) {\n      var _index = input.readInt(true),\n          _frameCount3 = input.readInt(true),\n          _frameLast2 = _frameCount3 - 1;\n\n      var _timeline7 = new _Animation.TransformConstraintTimeline(_frameCount3, input.readInt(true), _index);\n\n      var _time11 = input.readFloat(),\n          mixRotate = input.readFloat(),\n          mixX = input.readFloat(),\n          mixY = input.readFloat(),\n          mixScaleX = input.readFloat(),\n          mixScaleY = input.readFloat(),\n          mixShearY = input.readFloat();\n\n      for (var _frame7 = 0, _bezier6 = 0;; _frame7++) {\n        _timeline7.setFrame(_frame7, _time11, mixRotate, mixX, mixY, mixScaleX, mixScaleY, mixShearY);\n\n        if (_frame7 == _frameLast2) break;\n\n        var _time12 = input.readFloat(),\n            mixRotate2 = input.readFloat(),\n            mixX2 = input.readFloat(),\n            mixY2 = input.readFloat(),\n            mixScaleX2 = input.readFloat(),\n            mixScaleY2 = input.readFloat(),\n            mixShearY2 = input.readFloat();\n\n        switch (input.readByte()) {\n          case CURVE_STEPPED:\n            _timeline7.setStepped(_frame7);\n\n            break;\n\n          case CURVE_BEZIER:\n            setBezier(input, _timeline7, _bezier6++, _frame7, 0, _time11, _time12, mixRotate, mixRotate2, 1);\n            setBezier(input, _timeline7, _bezier6++, _frame7, 1, _time11, _time12, mixX, mixX2, 1);\n            setBezier(input, _timeline7, _bezier6++, _frame7, 2, _time11, _time12, mixY, mixY2, 1);\n            setBezier(input, _timeline7, _bezier6++, _frame7, 3, _time11, _time12, mixScaleX, mixScaleX2, 1);\n            setBezier(input, _timeline7, _bezier6++, _frame7, 4, _time11, _time12, mixScaleY, mixScaleY2, 1);\n            setBezier(input, _timeline7, _bezier6++, _frame7, 5, _time11, _time12, mixShearY, mixShearY2, 1);\n        }\n\n        _time11 = _time12;\n        mixRotate = mixRotate2;\n        mixX = mixX2;\n        mixY = mixY2;\n        mixScaleX = mixScaleX2;\n        mixScaleY = mixScaleY2;\n        mixShearY = mixShearY2;\n      }\n\n      timelines.push(_timeline7);\n    } // Path constraint timelines.\n\n\n    for (var _i18 = 0, _n7 = input.readInt(true); _i18 < _n7; _i18++) {\n      var _index2 = input.readInt(true);\n\n      var data = skeletonData.pathConstraints[_index2];\n\n      for (var _ii4 = 0, _nn4 = input.readInt(true); _ii4 < _nn4; _ii4++) {\n        switch (input.readByte()) {\n          case PATH_POSITION:\n            timelines.push(readTimeline1(input, new _Animation.PathConstraintPositionTimeline(input.readInt(true), input.readInt(true), _index2), data.positionMode == _PathConstraintData.PositionMode.Fixed ? scale : 1));\n            break;\n\n          case PATH_SPACING:\n            timelines.push(readTimeline1(input, new _Animation.PathConstraintSpacingTimeline(input.readInt(true), input.readInt(true), _index2), data.spacingMode == _PathConstraintData.SpacingMode.Length || data.spacingMode == _PathConstraintData.SpacingMode.Fixed ? scale : 1));\n            break;\n\n          case PATH_MIX:\n            var _timeline8 = new _Animation.PathConstraintMixTimeline(input.readInt(true), input.readInt(true), _index2);\n\n            var _time13 = input.readFloat(),\n                _mixRotate = input.readFloat(),\n                _mixX = input.readFloat(),\n                _mixY = input.readFloat();\n\n            for (var _frame8 = 0, _bezier7 = 0, _frameLast3 = _timeline8.getFrameCount() - 1;; _frame8++) {\n              _timeline8.setFrame(_frame8, _time13, _mixRotate, _mixX, _mixY);\n\n              if (_frame8 == _frameLast3) break;\n\n              var _time14 = input.readFloat(),\n                  _mixRotate2 = input.readFloat(),\n                  _mixX2 = input.readFloat(),\n                  _mixY2 = input.readFloat();\n\n              switch (input.readByte()) {\n                case CURVE_STEPPED:\n                  _timeline8.setStepped(_frame8);\n\n                  break;\n\n                case CURVE_BEZIER:\n                  setBezier(input, _timeline8, _bezier7++, _frame8, 0, _time13, _time14, _mixRotate, _mixRotate2, 1);\n                  setBezier(input, _timeline8, _bezier7++, _frame8, 1, _time13, _time14, _mixX, _mixX2, 1);\n                  setBezier(input, _timeline8, _bezier7++, _frame8, 2, _time13, _time14, _mixY, _mixY2, 1);\n              }\n\n              _time13 = _time14;\n              _mixRotate = _mixRotate2;\n              _mixX = _mixX2;\n              _mixY = _mixY2;\n            }\n\n            timelines.push(_timeline8);\n        }\n      }\n    } // Deform timelines.\n\n\n    for (var _i19 = 0, _n8 = input.readInt(true); _i19 < _n8; _i19++) {\n      var skin = skeletonData.skins[input.readInt(true)];\n\n      for (var _ii5 = 0, _nn5 = input.readInt(true); _ii5 < _nn5; _ii5++) {\n        var _slotIndex = input.readInt(true);\n\n        for (var iii = 0, nnn = input.readInt(true); iii < nnn; iii++) {\n          var attachmentName = input.readStringRef();\n          var attachment = skin.getAttachment(_slotIndex, attachmentName);\n          var weighted = attachment.bones;\n          var vertices = attachment.vertices;\n          var deformLength = weighted ? vertices.length / 3 * 2 : vertices.length;\n\n          var _frameCount4 = input.readInt(true);\n\n          var _frameLast4 = _frameCount4 - 1;\n\n          var _bezierCount5 = input.readInt(true);\n\n          var _timeline9 = new _Animation.DeformTimeline(_frameCount4, _bezierCount5, _slotIndex, attachment);\n\n          var _time15 = input.readFloat();\n\n          for (var _frame9 = 0, _bezier8 = 0;; _frame9++) {\n            var deform = void 0;\n            var end = input.readInt(true);\n            if (end == 0) deform = weighted ? _Utils.Utils.newFloatArray(deformLength) : vertices;else {\n              deform = _Utils.Utils.newFloatArray(deformLength);\n              var start = input.readInt(true);\n              end += start;\n\n              if (scale == 1) {\n                for (var v = start; v < end; v++) {\n                  deform[v] = input.readFloat();\n                }\n              } else {\n                for (var _v = start; _v < end; _v++) {\n                  deform[_v] = input.readFloat() * scale;\n                }\n              }\n\n              if (!weighted) {\n                for (var _v2 = 0, vn = deform.length; _v2 < vn; _v2++) {\n                  deform[_v2] += vertices[_v2];\n                }\n              }\n            }\n\n            _timeline9.setFrame(_frame9, _time15, deform);\n\n            if (_frame9 == _frameLast4) break;\n\n            var _time16 = input.readFloat();\n\n            switch (input.readByte()) {\n              case CURVE_STEPPED:\n                _timeline9.setStepped(_frame9);\n\n                break;\n\n              case CURVE_BEZIER:\n                setBezier(input, _timeline9, _bezier8++, _frame9, 0, _time15, _time16, 0, 1, 1);\n            }\n\n            _time15 = _time16;\n          }\n\n          timelines.push(_timeline9);\n        }\n      }\n    } // Draw order timeline.\n\n\n    var drawOrderCount = input.readInt(true);\n\n    if (drawOrderCount > 0) {\n      var _timeline10 = new _Animation.DrawOrderTimeline(drawOrderCount);\n\n      var slotCount = skeletonData.slots.length;\n\n      for (var _i20 = 0; _i20 < drawOrderCount; _i20++) {\n        var _time17 = input.readFloat();\n\n        var offsetCount = input.readInt(true);\n\n        var drawOrder = _Utils.Utils.newArray(slotCount, 0);\n\n        for (var _ii6 = slotCount - 1; _ii6 >= 0; _ii6--) {\n          drawOrder[_ii6] = -1;\n        }\n\n        var unchanged = _Utils.Utils.newArray(slotCount - offsetCount, 0);\n\n        var originalIndex = 0,\n            unchangedIndex = 0;\n\n        for (var _ii7 = 0; _ii7 < offsetCount; _ii7++) {\n          var _slotIndex2 = input.readInt(true); // Collect unchanged items.\n\n\n          while (originalIndex != _slotIndex2) {\n            unchanged[unchangedIndex++] = originalIndex++;\n          } // Set changed items.\n\n\n          drawOrder[originalIndex + input.readInt(true)] = originalIndex++;\n        } // Collect remaining unchanged items.\n\n\n        while (originalIndex < slotCount) {\n          unchanged[unchangedIndex++] = originalIndex++;\n        } // Fill in unchanged items.\n\n\n        for (var _ii8 = slotCount - 1; _ii8 >= 0; _ii8--) {\n          if (drawOrder[_ii8] == -1) drawOrder[_ii8] = unchanged[--unchangedIndex];\n        }\n\n        _timeline10.setFrame(_i20, _time17, drawOrder);\n      }\n\n      timelines.push(_timeline10);\n    } // Event timeline.\n\n\n    var eventCount = input.readInt(true);\n\n    if (eventCount > 0) {\n      var _timeline11 = new _Animation.EventTimeline(eventCount);\n\n      for (var _i21 = 0; _i21 < eventCount; _i21++) {\n        var _time18 = input.readFloat();\n\n        var eventData = skeletonData.events[input.readInt(true)];\n        var event = new _Event.Event(_time18, eventData);\n        event.intValue = input.readInt(false);\n        event.floatValue = input.readFloat();\n        event.stringValue = input.readBoolean() ? input.readString() : eventData.stringValue;\n\n        if (event.data.audioPath) {\n          event.volume = input.readFloat();\n          event.balance = input.readFloat();\n        }\n\n        _timeline11.setFrame(_i21, event);\n      }\n\n      timelines.push(_timeline11);\n    }\n\n    var duration = 0;\n\n    for (var _i22 = 0, _n9 = timelines.length; _i22 < _n9; _i22++) {\n      duration = Math.max(duration, timelines[_i22].getDuration());\n    }\n\n    return new _Animation.Animation(name, timelines, duration);\n  };\n\n  return SkeletonBinary;\n}();\n\nexports.SkeletonBinary = SkeletonBinary;\n\nvar BinaryInput = /*#__PURE__*/function () {\n  function BinaryInput(data, strings, index, buffer) {\n    if (strings === void 0) {\n      strings = new Array();\n    }\n\n    if (index === void 0) {\n      index = 0;\n    }\n\n    if (buffer === void 0) {\n      buffer = new DataView(data.buffer);\n    }\n\n    this.strings = strings;\n    this.index = index;\n    this.buffer = buffer;\n  }\n\n  var _proto2 = BinaryInput.prototype;\n\n  _proto2.readByte = function readByte() {\n    return this.buffer.getInt8(this.index++);\n  };\n\n  _proto2.readUnsignedByte = function readUnsignedByte() {\n    return this.buffer.getUint8(this.index++);\n  };\n\n  _proto2.readShort = function readShort() {\n    var value = this.buffer.getInt16(this.index);\n    this.index += 2;\n    return value;\n  };\n\n  _proto2.readInt32 = function readInt32() {\n    var value = this.buffer.getInt32(this.index);\n    this.index += 4;\n    return value;\n  };\n\n  _proto2.readInt = function readInt(optimizePositive) {\n    var b = this.readByte();\n    var result = b & 0x7F;\n\n    if ((b & 0x80) != 0) {\n      b = this.readByte();\n      result |= (b & 0x7F) << 7;\n\n      if ((b & 0x80) != 0) {\n        b = this.readByte();\n        result |= (b & 0x7F) << 14;\n\n        if ((b & 0x80) != 0) {\n          b = this.readByte();\n          result |= (b & 0x7F) << 21;\n\n          if ((b & 0x80) != 0) {\n            b = this.readByte();\n            result |= (b & 0x7F) << 28;\n          }\n        }\n      }\n    }\n\n    return optimizePositive ? result : result >>> 1 ^ -(result & 1);\n  };\n\n  _proto2.readStringRef = function readStringRef() {\n    var index = this.readInt(true);\n    return index == 0 ? null : this.strings[index - 1];\n  };\n\n  _proto2.readString = function readString() {\n    var byteCount = this.readInt(true);\n\n    switch (byteCount) {\n      case 0:\n        return null;\n\n      case 1:\n        return \"\";\n    }\n\n    byteCount--;\n    var chars = \"\";\n    var charCount = 0;\n\n    for (var i = 0; i < byteCount;) {\n      var b = this.readUnsignedByte();\n\n      switch (b >> 4) {\n        case 12:\n        case 13:\n          chars += String.fromCharCode((b & 0x1F) << 6 | this.readByte() & 0x3F);\n          i += 2;\n          break;\n\n        case 14:\n          chars += String.fromCharCode((b & 0x0F) << 12 | (this.readByte() & 0x3F) << 6 | this.readByte() & 0x3F);\n          i += 3;\n          break;\n\n        default:\n          chars += String.fromCharCode(b);\n          i++;\n      }\n    }\n\n    return chars;\n  };\n\n  _proto2.readFloat = function readFloat() {\n    var value = this.buffer.getFloat32(this.index);\n    this.index += 4;\n    return value;\n  };\n\n  _proto2.readBoolean = function readBoolean() {\n    return this.readByte() != 0;\n  };\n\n  return BinaryInput;\n}();\n\nexports.BinaryInput = BinaryInput;\n\nvar LinkedMesh = function LinkedMesh(mesh, skin, slotIndex, parent, inheritDeform) {\n  this.mesh = mesh;\n  this.skin = skin;\n  this.slotIndex = slotIndex;\n  this.parent = parent;\n  this.inheritDeform = inheritDeform;\n};\n\nvar Vertices = function Vertices(bones, vertices) {\n  if (bones === void 0) {\n    bones = null;\n  }\n\n  if (vertices === void 0) {\n    vertices = null;\n  }\n\n  this.bones = bones;\n  this.vertices = vertices;\n};\n\nvar AttachmentType;\n\n(function (AttachmentType) {\n  AttachmentType[AttachmentType[\"Region\"] = 0] = \"Region\";\n  AttachmentType[AttachmentType[\"BoundingBox\"] = 1] = \"BoundingBox\";\n  AttachmentType[AttachmentType[\"Mesh\"] = 2] = \"Mesh\";\n  AttachmentType[AttachmentType[\"LinkedMesh\"] = 3] = \"LinkedMesh\";\n  AttachmentType[AttachmentType[\"Path\"] = 4] = \"Path\";\n  AttachmentType[AttachmentType[\"Point\"] = 5] = \"Point\";\n  AttachmentType[AttachmentType[\"Clipping\"] = 6] = \"Clipping\";\n})(AttachmentType || (AttachmentType = {}));\n\nfunction readTimeline1(input, timeline, scale) {\n  var time = input.readFloat(),\n      value = input.readFloat() * scale;\n\n  for (var frame = 0, bezier = 0, frameLast = timeline.getFrameCount() - 1;; frame++) {\n    timeline.setFrame(frame, time, value);\n    if (frame == frameLast) break;\n    var time2 = input.readFloat(),\n        value2 = input.readFloat() * scale;\n\n    switch (input.readByte()) {\n      case CURVE_STEPPED:\n        timeline.setStepped(frame);\n        break;\n\n      case CURVE_BEZIER:\n        setBezier(input, timeline, bezier++, frame, 0, time, time2, value, value2, scale);\n    }\n\n    time = time2;\n    value = value2;\n  }\n\n  return timeline;\n}\n\nfunction readTimeline2(input, timeline, scale) {\n  var time = input.readFloat(),\n      value1 = input.readFloat() * scale,\n      value2 = input.readFloat() * scale;\n\n  for (var frame = 0, bezier = 0, frameLast = timeline.getFrameCount() - 1;; frame++) {\n    timeline.setFrame(frame, time, value1, value2);\n    if (frame == frameLast) break;\n    var time2 = input.readFloat(),\n        nvalue1 = input.readFloat() * scale,\n        nvalue2 = input.readFloat() * scale;\n\n    switch (input.readByte()) {\n      case CURVE_STEPPED:\n        timeline.setStepped(frame);\n        break;\n\n      case CURVE_BEZIER:\n        setBezier(input, timeline, bezier++, frame, 0, time, time2, value1, nvalue1, scale);\n        setBezier(input, timeline, bezier++, frame, 1, time, time2, value2, nvalue2, scale);\n    }\n\n    time = time2;\n    value1 = nvalue1;\n    value2 = nvalue2;\n  }\n\n  return timeline;\n}\n\nfunction setBezier(input, timeline, bezier, frame, value, time1, time2, value1, value2, scale) {\n  timeline.setBezier(bezier, frame, value, time1, value1, input.readFloat(), input.readFloat() * scale, input.readFloat(), input.readFloat() * scale, time2, value2);\n}\n\nvar BONE_ROTATE = 0;\nvar BONE_TRANSLATE = 1;\nvar BONE_TRANSLATEX = 2;\nvar BONE_TRANSLATEY = 3;\nvar BONE_SCALE = 4;\nvar BONE_SCALEX = 5;\nvar BONE_SCALEY = 6;\nvar BONE_SHEAR = 7;\nvar BONE_SHEARX = 8;\nvar BONE_SHEARY = 9;\nvar SLOT_ATTACHMENT = 0;\nvar SLOT_RGBA = 1;\nvar SLOT_RGB = 2;\nvar SLOT_RGBA2 = 3;\nvar SLOT_RGB2 = 4;\nvar SLOT_ALPHA = 5;\nvar PATH_POSITION = 0;\nvar PATH_SPACING = 1;\nvar PATH_MIX = 2;\nvar CURVE_LINEAR = 0;\nvar CURVE_STEPPED = 1;\nvar CURVE_BEZIER = 2;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","\"use strict\";\n\nexports.__esModule = true;\nexports.SkeletonData = void 0;\n\n/******************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated January 1, 2020. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2020, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\r\n * or otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\n\n/** Stores the setup pose and all of the stateless data for a skeleton.\r\n *\r\n * See [Data objects](http://esotericsoftware.com/spine-runtime-architecture#Data-objects) in the Spine Runtimes\r\n * Guide. */\nvar SkeletonData = /*#__PURE__*/function () {\n  function SkeletonData() {\n    /** The skeleton's name, which by default is the name of the skeleton data file, if possible. May be null. */\n    this.name = null;\n    /** The skeleton's bones, sorted parent first. The root bone is always the first bone. */\n\n    this.bones = new Array(); // Ordered parents first.\n\n    /** The skeleton's slots. */\n\n    this.slots = new Array(); // Setup pose draw order.\n\n    this.skins = new Array();\n    /** The skeleton's default skin. By default this skin contains all attachments that were not in a skin in Spine.\r\n     *\r\n     * See {@link Skeleton#getAttachmentByName()}.\r\n     * May be null. */\n\n    this.defaultSkin = null;\n    /** The skeleton's events. */\n\n    this.events = new Array();\n    /** The skeleton's animations. */\n\n    this.animations = new Array();\n    /** The skeleton's IK constraints. */\n\n    this.ikConstraints = new Array();\n    /** The skeleton's transform constraints. */\n\n    this.transformConstraints = new Array();\n    /** The skeleton's path constraints. */\n\n    this.pathConstraints = new Array();\n    /** The X coordinate of the skeleton's axis aligned bounding box in the setup pose. */\n\n    this.x = 0;\n    /** The Y coordinate of the skeleton's axis aligned bounding box in the setup pose. */\n\n    this.y = 0;\n    /** The width of the skeleton's axis aligned bounding box in the setup pose. */\n\n    this.width = 0;\n    /** The height of the skeleton's axis aligned bounding box in the setup pose. */\n\n    this.height = 0;\n    /** The Spine version used to export the skeleton data, or null. */\n\n    this.version = null;\n    /** The skeleton data hash. This value will change if any of the skeleton data has changed. May be null. */\n\n    this.hash = null; // Nonessential\n\n    /** The dopesheet FPS in Spine. Available only when nonessential data was exported. */\n\n    this.fps = 0;\n    /** The path to the images directory as defined in Spine. Available only when nonessential data was exported. May be null. */\n\n    this.imagesPath = null;\n    /** The path to the audio directory as defined in Spine. Available only when nonessential data was exported. May be null. */\n\n    this.audioPath = null;\n  }\n  /** Finds a bone by comparing each bone's name. It is more efficient to cache the results of this method than to call it\r\n   * multiple times.\r\n   * @returns May be null. */\n\n\n  var _proto = SkeletonData.prototype;\n\n  _proto.findBone = function findBone(boneName) {\n    if (!boneName) throw new Error(\"boneName cannot be null.\");\n    var bones = this.bones;\n\n    for (var i = 0, n = bones.length; i < n; i++) {\n      var bone = bones[i];\n      if (bone.name == boneName) return bone;\n    }\n\n    return null;\n  }\n  /** Finds a slot by comparing each slot's name. It is more efficient to cache the results of this method than to call it\r\n   * multiple times.\r\n   * @returns May be null. */\n  ;\n\n  _proto.findSlot = function findSlot(slotName) {\n    if (!slotName) throw new Error(\"slotName cannot be null.\");\n    var slots = this.slots;\n\n    for (var i = 0, n = slots.length; i < n; i++) {\n      var slot = slots[i];\n      if (slot.name == slotName) return slot;\n    }\n\n    return null;\n  }\n  /** Finds a skin by comparing each skin's name. It is more efficient to cache the results of this method than to call it\r\n   * multiple times.\r\n   * @returns May be null. */\n  ;\n\n  _proto.findSkin = function findSkin(skinName) {\n    if (!skinName) throw new Error(\"skinName cannot be null.\");\n    var skins = this.skins;\n\n    for (var i = 0, n = skins.length; i < n; i++) {\n      var skin = skins[i];\n      if (skin.name == skinName) return skin;\n    }\n\n    return null;\n  }\n  /** Finds an event by comparing each events's name. It is more efficient to cache the results of this method than to call it\r\n   * multiple times.\r\n   * @returns May be null. */\n  ;\n\n  _proto.findEvent = function findEvent(eventDataName) {\n    if (!eventDataName) throw new Error(\"eventDataName cannot be null.\");\n    var events = this.events;\n\n    for (var i = 0, n = events.length; i < n; i++) {\n      var event = events[i];\n      if (event.name == eventDataName) return event;\n    }\n\n    return null;\n  }\n  /** Finds an animation by comparing each animation's name. It is more efficient to cache the results of this method than to\r\n   * call it multiple times.\r\n   * @returns May be null. */\n  ;\n\n  _proto.findAnimation = function findAnimation(animationName) {\n    if (!animationName) throw new Error(\"animationName cannot be null.\");\n    var animations = this.animations;\n\n    for (var i = 0, n = animations.length; i < n; i++) {\n      var animation = animations[i];\n      if (animation.name == animationName) return animation;\n    }\n\n    return null;\n  }\n  /** Finds an IK constraint by comparing each IK constraint's name. It is more efficient to cache the results of this method\r\n   * than to call it multiple times.\r\n   * @return May be null. */\n  ;\n\n  _proto.findIkConstraint = function findIkConstraint(constraintName) {\n    if (!constraintName) throw new Error(\"constraintName cannot be null.\");\n    var ikConstraints = this.ikConstraints;\n\n    for (var i = 0, n = ikConstraints.length; i < n; i++) {\n      var constraint = ikConstraints[i];\n      if (constraint.name == constraintName) return constraint;\n    }\n\n    return null;\n  }\n  /** Finds a transform constraint by comparing each transform constraint's name. It is more efficient to cache the results of\r\n   * this method than to call it multiple times.\r\n   * @return May be null. */\n  ;\n\n  _proto.findTransformConstraint = function findTransformConstraint(constraintName) {\n    if (!constraintName) throw new Error(\"constraintName cannot be null.\");\n    var transformConstraints = this.transformConstraints;\n\n    for (var i = 0, n = transformConstraints.length; i < n; i++) {\n      var constraint = transformConstraints[i];\n      if (constraint.name == constraintName) return constraint;\n    }\n\n    return null;\n  }\n  /** Finds a path constraint by comparing each path constraint's name. It is more efficient to cache the results of this method\r\n   * than to call it multiple times.\r\n   * @return May be null. */\n  ;\n\n  _proto.findPathConstraint = function findPathConstraint(constraintName) {\n    if (!constraintName) throw new Error(\"constraintName cannot be null.\");\n    var pathConstraints = this.pathConstraints;\n\n    for (var i = 0, n = pathConstraints.length; i < n; i++) {\n      var constraint = pathConstraints[i];\n      if (constraint.name == constraintName) return constraint;\n    }\n\n    return null;\n  };\n\n  return SkeletonData;\n}();\n\nexports.SkeletonData = SkeletonData;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LENBQUM1QixDQUFELENBQWhDO01BQ0EsSUFBSXdCLFVBQVUsQ0FBQ3BCLElBQVgsSUFBbUJrQixjQUF2QixFQUF1QyxPQUFPRSxVQUFQO0lBQ3ZDOztJQUNELE9BQU8sSUFBUDtFQUNBLEMiLCJuYW1lcyI6WyJTa2VsZXRvbkRhdGEiLCJBcnJheSIsImZpbmRCb25lIiwiYm9uZU5hbWUiLCJFcnJvciIsImJvbmVzIiwiaSIsIm4iLCJsZW5ndGgiLCJib25lIiwibmFtZSIsImZpbmRTbG90Iiwic2xvdE5hbWUiLCJzbG90cyIsInNsb3QiLCJmaW5kU2tpbiIsInNraW5OYW1lIiwic2tpbnMiLCJza2luIiwiZmluZEV2ZW50IiwiZXZlbnREYXRhTmFtZSIsImV2ZW50cyIsImV2ZW50IiwiZmluZEFuaW1hdGlvbiIsImFuaW1hdGlvbk5hbWUiLCJhbmltYXRpb25zIiwiYW5pbWF0aW9uIiwiZmluZElrQ29uc3RyYWludCIsImNvbnN0cmFpbnROYW1lIiwiaWtDb25zdHJhaW50cyIsImNvbnN0cmFpbnQiLCJmaW5kVHJhbnNmb3JtQ29uc3RyYWludCIsInRyYW5zZm9ybUNvbnN0cmFpbnRzIiwiZmluZFBhdGhDb25zdHJhaW50IiwicGF0aENvbnN0cmFpbnRzIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9Ta2VsZXRvbkRhdGEudHMiXSwic291cmNlc0NvbnRlbnQiOltudWxsXX0=","\"use strict\";\n\nexports.__esModule = true;\nexports.SkinEntry = exports.Skin = void 0;\n\nvar _MeshAttachment = require(\"./attachments/MeshAttachment\");\n\n/******************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated January 1, 2020. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2020, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\r\n * or otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\n\n/** Stores an entry in the skin consisting of the slot index, name, and attachment **/\nvar SkinEntry = function SkinEntry(slotIndex, name, attachment) {\n  if (slotIndex === void 0) {\n    slotIndex = 0;\n  }\n\n  if (name === void 0) {\n    name = null;\n  }\n\n  if (attachment === void 0) {\n    attachment = null;\n  }\n\n  this.slotIndex = slotIndex;\n  this.name = name;\n  this.attachment = attachment;\n};\n/** Stores attachments by slot index and attachment name.\r\n *\r\n * See SkeletonData {@link SkeletonData#defaultSkin}, Skeleton {@link Skeleton#skin}, and\r\n * [Runtime skins](http://esotericsoftware.com/spine-runtime-skins) in the Spine Runtimes Guide. */\n\n\nexports.SkinEntry = SkinEntry;\n\nvar Skin = /*#__PURE__*/function () {\n  function Skin(name) {\n    /** The skin's name, which is unique across all skins in the skeleton. */\n    this.name = null;\n    this.attachments = new Array();\n    this.bones = Array();\n    this.constraints = new Array();\n    if (!name) throw new Error(\"name cannot be null.\");\n    this.name = name;\n  }\n  /** Adds an attachment to the skin for the specified slot index and name. */\n\n\n  var _proto = Skin.prototype;\n\n  _proto.setAttachment = function setAttachment(slotIndex, name, attachment) {\n    if (!attachment) throw new Error(\"attachment cannot be null.\");\n    var attachments = this.attachments;\n    if (slotIndex >= attachments.length) attachments.length = slotIndex + 1;\n    if (!attachments[slotIndex]) attachments[slotIndex] = {};\n    attachments[slotIndex][name] = attachment;\n  }\n  /** Adds all attachments, bones, and constraints from the specified skin to this skin. */\n  ;\n\n  _proto.addSkin = function addSkin(skin) {\n    for (var i = 0; i < skin.bones.length; i++) {\n      var bone = skin.bones[i];\n      var contained = false;\n\n      for (var ii = 0; ii < this.bones.length; ii++) {\n        if (this.bones[ii] == bone) {\n          contained = true;\n          break;\n        }\n      }\n\n      if (!contained) this.bones.push(bone);\n    }\n\n    for (var _i = 0; _i < skin.constraints.length; _i++) {\n      var constraint = skin.constraints[_i];\n      var _contained = false;\n\n      for (var _ii = 0; _ii < this.constraints.length; _ii++) {\n        if (this.constraints[_ii] == constraint) {\n          _contained = true;\n          break;\n        }\n      }\n\n      if (!_contained) this.constraints.push(constraint);\n    }\n\n    var attachments = skin.getAttachments();\n\n    for (var _i2 = 0; _i2 < attachments.length; _i2++) {\n      var attachment = attachments[_i2];\n      this.setAttachment(attachment.slotIndex, attachment.name, attachment.attachment);\n    }\n  }\n  /** Adds all bones and constraints and copies of all attachments from the specified skin to this skin. Mesh attachments are not\r\n   * copied, instead a new linked mesh is created. The attachment copies can be modified without affecting the originals. */\n  ;\n\n  _proto.copySkin = function copySkin(skin) {\n    for (var i = 0; i < skin.bones.length; i++) {\n      var bone = skin.bones[i];\n      var contained = false;\n\n      for (var ii = 0; ii < this.bones.length; ii++) {\n        if (this.bones[ii] == bone) {\n          contained = true;\n          break;\n        }\n      }\n\n      if (!contained) this.bones.push(bone);\n    }\n\n    for (var _i3 = 0; _i3 < skin.constraints.length; _i3++) {\n      var constraint = skin.constraints[_i3];\n      var _contained2 = false;\n\n      for (var _ii2 = 0; _ii2 < this.constraints.length; _ii2++) {\n        if (this.constraints[_ii2] == constraint) {\n          _contained2 = true;\n          break;\n        }\n      }\n\n      if (!_contained2) this.constraints.push(constraint);\n    }\n\n    var attachments = skin.getAttachments();\n\n    for (var _i4 = 0; _i4 < attachments.length; _i4++) {\n      var attachment = attachments[_i4];\n      if (!attachment.attachment) continue;\n\n      if (attachment.attachment instanceof _MeshAttachment.MeshAttachment) {\n        attachment.attachment = attachment.attachment.newLinkedMesh();\n        this.setAttachment(attachment.slotIndex, attachment.name, attachment.attachment);\n      } else {\n        attachment.attachment = attachment.attachment.copy();\n        this.setAttachment(attachment.slotIndex, attachment.name, attachment.attachment);\n      }\n    }\n  }\n  /** Returns the attachment for the specified slot index and name, or null. */\n  ;\n\n  _proto.getAttachment = function getAttachment(slotIndex, name) {\n    var dictionary = this.attachments[slotIndex];\n    return dictionary ? dictionary[name] : null;\n  }\n  /** Removes the attachment in the skin for the specified slot index and name, if any. */\n  ;\n\n  _proto.removeAttachment = function removeAttachment(slotIndex, name) {\n    var dictionary = this.attachments[slotIndex];\n    if (dictionary) dictionary[name] = null;\n  }\n  /** Returns all attachments in this skin. */\n  ;\n\n  _proto.getAttachments = function getAttachments() {\n    var entries = new Array();\n\n    for (var i = 0; i < this.attachments.length; i++) {\n      var slotAttachments = this.attachments[i];\n\n      if (slotAttachments) {\n        for (var name in slotAttachments) {\n          var attachment = slotAttachments[name];\n          if (attachment) entries.push(new SkinEntry(i, name, attachment));\n        }\n      }\n    }\n\n    return entries;\n  }\n  /** Returns all attachments in this skin for the specified slot index. */\n  ;\n\n  _proto.getAttachmentsForSlot = function getAttachmentsForSlot(slotIndex, attachments) {\n    var slotAttachments = this.attachments[slotIndex];\n\n    if (slotAttachments) {\n      for (var name in slotAttachments) {\n        var attachment = slotAttachments[name];\n        if (attachment) attachments.push(new SkinEntry(slotIndex, name, attachment));\n      }\n    }\n  }\n  /** Clears all attachments, bones, and constraints. */\n  ;\n\n  _proto.clear = function clear() {\n    this.attachments.length = 0;\n    this.bones.length = 0;\n    this.constraints.length = 0;\n  }\n  /** Attach each attachment in this skin if the corresponding attachment in the old skin is currently attached. */\n  ;\n\n  _proto.attachAll = function attachAll(skeleton, oldSkin) {\n    var slotIndex = 0;\n\n    for (var i = 0; i < skeleton.slots.length; i++) {\n      var slot = skeleton.slots[i];\n      var slotAttachment = slot.getAttachment();\n\n      if (slotAttachment && slotIndex < oldSkin.attachments.length) {\n        var dictionary = oldSkin.attachments[slotIndex];\n\n        for (var key in dictionary) {\n          var skinAttachment = dictionary[key];\n\n          if (slotAttachment == skinAttachment) {\n            var attachment = this.getAttachment(slotIndex, key);\n            if (attachment) slot.setAttachment(attachment);\n            break;\n          }\n        }\n      }\n\n      slotIndex++;\n    }\n  };\n\n  return Skin;\n}();\n\nexports.Skin = Skin;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","\"use strict\";\n\nexports.__esModule = true;\nexports.Slot = void 0;\n\nvar _Attachment = require(\"./attachments/Attachment\");\n\nvar _Utils = require(\"./Utils\");\n\n/******************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated January 1, 2020. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2020, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\r\n * or otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\n\n/** Stores a slot's current pose. Slots organize attachments for {@link Skeleton#drawOrder} purposes and provide a place to store\r\n * state for an attachment. State cannot be stored in an attachment itself because attachments are stateless and may be shared\r\n * across multiple skeletons. */\nvar Slot = /*#__PURE__*/function () {\n  function Slot(data, bone) {\n    /** The slot's setup pose data. */\n    this.data = null;\n    /** The bone this slot belongs to. */\n\n    this.bone = null;\n    /** The color used to tint the slot's attachment. If {@link #getDarkColor()} is set, this is used as the light color for two\r\n     * color tinting. */\n\n    this.color = null;\n    /** The dark color used to tint the slot's attachment for two color tinting, or null if two color tinting is not used. The dark\r\n     * color's alpha is not used. */\n\n    this.darkColor = null;\n    this.attachment = null;\n    this.attachmentTime = 0;\n    this.attachmentState = 0;\n    /** Values to deform the slot's attachment. For an unweighted mesh, the entries are local positions for each vertex. For a\r\n     * weighted mesh, the entries are an offset for each vertex which will be added to the mesh's local vertex positions.\r\n     *\r\n     * See {@link VertexAttachment#computeWorldVertices()} and {@link DeformTimeline}. */\n\n    this.deform = new Array();\n    if (!data) throw new Error(\"data cannot be null.\");\n    if (!bone) throw new Error(\"bone cannot be null.\");\n    this.data = data;\n    this.bone = bone;\n    this.color = new _Utils.Color();\n    this.darkColor = !data.darkColor ? null : new _Utils.Color();\n    this.setToSetupPose();\n  }\n  /** The skeleton this slot belongs to. */\n\n\n  var _proto = Slot.prototype;\n\n  _proto.getSkeleton = function getSkeleton() {\n    return this.bone.skeleton;\n  }\n  /** The current attachment for the slot, or null if the slot has no attachment. */\n  ;\n\n  _proto.getAttachment = function getAttachment() {\n    return this.attachment;\n  }\n  /** Sets the slot's attachment and, if the attachment changed, resets {@link #attachmentTime} and clears the {@link #deform}.\r\n   * The deform is not cleared if the old attachment has the same {@link VertexAttachment#getDeformAttachment()} as the specified\r\n   * attachment.\r\n   * @param attachment May be null. */\n  ;\n\n  _proto.setAttachment = function setAttachment(attachment) {\n    if (this.attachment == attachment) return;\n\n    if (!(attachment instanceof _Attachment.VertexAttachment) || !(this.attachment instanceof _Attachment.VertexAttachment) || attachment.deformAttachment != this.attachment.deformAttachment) {\n      this.deform.length = 0;\n    }\n\n    this.attachment = attachment;\n    this.attachmentTime = this.bone.skeleton.time;\n  };\n\n  _proto.setAttachmentTime = function setAttachmentTime(time) {\n    this.attachmentTime = this.bone.skeleton.time - time;\n  }\n  /** The time that has elapsed since the last time the attachment was set or cleared. Relies on Skeleton\r\n   * {@link Skeleton#time}. */\n  ;\n\n  _proto.getAttachmentTime = function getAttachmentTime() {\n    return this.bone.skeleton.time - this.attachmentTime;\n  }\n  /** Sets this slot to the setup pose. */\n  ;\n\n  _proto.setToSetupPose = function setToSetupPose() {\n    this.color.setFromColor(this.data.color);\n    if (this.darkColor) this.darkColor.setFromColor(this.data.darkColor);\n    if (!this.data.attachmentName) this.attachment = null;else {\n      this.attachment = null;\n      this.setAttachment(this.bone.skeleton.getAttachment(this.data.index, this.data.attachmentName));\n    }\n  };\n\n  return Slot;\n}();\n\nexports.Slot = Slot;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7QUE2QkE7O0FBSUE7O0FBakNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1DQTs7O0lBR2FBLEk7RUEyQlosY0FBYUMsSUFBYixFQUE2QkMsSUFBN0IsRUFBdUM7SUExQnZDO0lBQ0EsWUFBaUIsSUFBakI7SUFFQTs7SUFDQSxZQUFhLElBQWI7SUFFQTs7O0lBRUEsYUFBZSxJQUFmO0lBRUE7OztJQUVBLGlCQUFtQixJQUFuQjtJQUVBLGtCQUF5QixJQUF6QjtJQUVRLHNCQUF5QixDQUF6QjtJQUVSLHVCQUEwQixDQUExQjtJQUVBOzs7OztJQUlBLGNBQVMsSUFBSUMsS0FBSixFQUFUO0lBR0MsSUFBSSxDQUFDRixJQUFMLEVBQVcsTUFBTSxJQUFJRyxLQUFKLENBQVUsc0JBQVYsQ0FBTjtJQUNYLElBQUksQ0FBQ0YsSUFBTCxFQUFXLE1BQU0sSUFBSUUsS0FBSixDQUFVLHNCQUFWLENBQU47SUFDWCxLQUFLSCxJQUFMLEdBQVlBLElBQVo7SUFDQSxLQUFLQyxJQUFMLEdBQVlBLElBQVo7SUFDQSxLQUFLRyxLQUFMLEdBQWEsSUFBSUMsWUFBSixFQUFiO0lBQ0EsS0FBS0MsU0FBTCxHQUFpQixDQUFDTixJQUFJLENBQUNNLFNBQU4sR0FBa0IsSUFBbEIsR0FBeUIsSUFBSUQsWUFBSixFQUExQztJQUNBLEtBQUtFLGNBQUw7RUFDQTtFQUVEOzs7OztTQUNBQyxXLEdBQUEsdUJBQVc7SUFDVixPQUFPLEtBQUtQLElBQUwsQ0FBVVEsUUFBakI7RUFDQTtFQUVEOzs7U0FDQUMsYSxHQUFBLHlCQUFhO0lBQ1osT0FBTyxLQUFLQyxVQUFaO0VBQ0E7RUFFRDs7Ozs7O1NBSUFDLGEsR0FBQSx1QkFBZUQsVUFBZixFQUFxQztJQUNwQyxJQUFJLEtBQUtBLFVBQUwsSUFBbUJBLFVBQXZCLEVBQW1DOztJQUNuQyxJQUFJLEVBQUVBLFVBQVUsWUFBWUUsNEJBQXhCLEtBQTZDLEVBQUUsS0FBS0YsVUFBTCxZQUEyQkUsNEJBQTdCLENBQTdDLElBQ21CRixVQUFXLENBQUNHLGdCQUFaLElBQW1ELEtBQUtILFVBQUwsQ0FBaUJHLGdCQUQzRixFQUM2RztNQUM1RyxLQUFLQyxNQUFMLENBQVlDLE1BQVosR0FBcUIsQ0FBckI7SUFDQTs7SUFDRCxLQUFLTCxVQUFMLEdBQWtCQSxVQUFsQjtJQUNBLEtBQUtNLGNBQUwsR0FBc0IsS0FBS2hCLElBQUwsQ0FBVVEsUUFBVixDQUFtQlMsSUFBekM7RUFDQSxDOztTQUVEQyxpQixHQUFBLDJCQUFtQkQsSUFBbkIsRUFBK0I7SUFDOUIsS0FBS0QsY0FBTCxHQUFzQixLQUFLaEIsSUFBTCxDQUFVUSxRQUFWLENBQW1CUyxJQUFuQixHQUEwQkEsSUFBaEQ7RUFDQTtFQUVEOzs7O1NBRUFFLGlCLEdBQUEsNkJBQWlCO0lBQ2hCLE9BQU8sS0FBS25CLElBQUwsQ0FBVVEsUUFBVixDQUFtQlMsSUFBbkIsR0FBMEIsS0FBS0QsY0FBdEM7RUFDQTtFQUVEOzs7U0FDQVYsYyxHQUFBLDBCQUFjO0lBQ2IsS0FBS0gsS0FBTCxDQUFXaUIsWUFBWCxDQUF3QixLQUFLckIsSUFBTCxDQUFVSSxLQUFsQztJQUNBLElBQUksS0FBS0UsU0FBVCxFQUFvQixLQUFLQSxTQUFMLENBQWVlLFlBQWYsQ0FBNEIsS0FBS3JCLElBQUwsQ0FBVU0sU0FBdEM7SUFDcEIsSUFBSSxDQUFDLEtBQUtOLElBQUwsQ0FBVXNCLGNBQWYsRUFDQyxLQUFLWCxVQUFMLEdBQWtCLElBQWxCLENBREQsS0FFSztNQUNKLEtBQUtBLFVBQUwsR0FBa0IsSUFBbEI7TUFDQSxLQUFLQyxhQUFMLENBQW1CLEtBQUtYLElBQUwsQ0FBVVEsUUFBVixDQUFtQkMsYUFBbkIsQ0FBaUMsS0FBS1YsSUFBTCxDQUFVdUIsS0FBM0MsRUFBa0QsS0FBS3ZCLElBQUwsQ0FBVXNCLGNBQTVELENBQW5CO0lBQ0E7RUFDRCxDIiwibmFtZXMiOlsiU2xvdCIsImRhdGEiLCJib25lIiwiQXJyYXkiLCJFcnJvciIsImNvbG9yIiwiQ29sb3IiLCJkYXJrQ29sb3IiLCJzZXRUb1NldHVwUG9zZSIsImdldFNrZWxldG9uIiwic2tlbGV0b24iLCJnZXRBdHRhY2htZW50IiwiYXR0YWNobWVudCIsInNldEF0dGFjaG1lbnQiLCJWZXJ0ZXhBdHRhY2htZW50IiwiZGVmb3JtQXR0YWNobWVudCIsImRlZm9ybSIsImxlbmd0aCIsImF0dGFjaG1lbnRUaW1lIiwidGltZSIsInNldEF0dGFjaG1lbnRUaW1lIiwiZ2V0QXR0YWNobWVudFRpbWUiLCJzZXRGcm9tQ29sb3IiLCJhdHRhY2htZW50TmFtZSIsImluZGV4Il0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9TbG90LnRzIl0sInNvdXJjZXNDb250ZW50IjpbbnVsbF19","\"use strict\";\n\nexports.__esModule = true;\nexports.SlotData = exports.BlendMode = void 0;\n\nvar _Utils = require(\"./Utils\");\n\n/******************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated January 1, 2020. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2020, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\r\n * or otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\n\n/** Stores the setup pose for a {@link Slot}. */\nvar SlotData = function SlotData(index, name, boneData) {\n  /** The index of the slot in {@link Skeleton#getSlots()}. */\n  this.index = 0;\n  /** The name of the slot, which is unique across all slots in the skeleton. */\n\n  this.name = null;\n  /** The bone this slot belongs to. */\n\n  this.boneData = null;\n  /** The color used to tint the slot's attachment. If {@link #getDarkColor()} is set, this is used as the light color for two\r\n   * color tinting. */\n\n  this.color = new _Utils.Color(1, 1, 1, 1);\n  /** The dark color used to tint the slot's attachment for two color tinting, or null if two color tinting is not used. The dark\r\n   * color's alpha is not used. */\n\n  this.darkColor = null;\n  /** The name of the attachment that is visible for this slot in the setup pose, or null if no attachment is visible. */\n\n  this.attachmentName = null;\n  /** The blend mode for drawing the slot's attachment. */\n\n  this.blendMode = null;\n  if (index < 0) throw new Error(\"index must be >= 0.\");\n  if (!name) throw new Error(\"name cannot be null.\");\n  if (!boneData) throw new Error(\"boneData cannot be null.\");\n  this.index = index;\n  this.name = name;\n  this.boneData = boneData;\n};\n/** Determines how images are blended with existing pixels when drawn. */\n\n\nexports.SlotData = SlotData;\nvar BlendMode;\nexports.BlendMode = BlendMode;\n\n(function (BlendMode) {\n  BlendMode[BlendMode[\"Normal\"] = 0] = \"Normal\";\n  BlendMode[BlendMode[\"Additive\"] = 1] = \"Additive\";\n  BlendMode[BlendMode[\"Multiply\"] = 2] = \"Multiply\";\n  BlendMode[BlendMode[\"Screen\"] = 3] = \"Screen\";\n})(BlendMode || (exports.BlendMode = BlendMode = {}));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7QUE4QkE7O0FBOUJBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdDQTtJQUNhQSxRLEdBd0JaLGtCQUFhQyxLQUFiLEVBQTRCQyxJQUE1QixFQUEwQ0MsUUFBMUMsRUFBNEQ7RUF2QjVEO0VBQ0EsYUFBZ0IsQ0FBaEI7RUFFQTs7RUFDQSxZQUFlLElBQWY7RUFFQTs7RUFDQSxnQkFBcUIsSUFBckI7RUFFQTs7O0VBRUEsYUFBUSxJQUFJQyxZQUFKLENBQVUsQ0FBVixFQUFhLENBQWIsRUFBZ0IsQ0FBaEIsRUFBbUIsQ0FBbkIsQ0FBUjtFQUVBOzs7RUFFQSxpQkFBbUIsSUFBbkI7RUFFQTs7RUFDQSxzQkFBeUIsSUFBekI7RUFFQTs7RUFDQSxpQkFBdUIsSUFBdkI7RUFHQyxJQUFJSCxLQUFLLEdBQUcsQ0FBWixFQUFlLE1BQU0sSUFBSUksS0FBSixDQUFVLHFCQUFWLENBQU47RUFDZixJQUFJLENBQUNILElBQUwsRUFBVyxNQUFNLElBQUlHLEtBQUosQ0FBVSxzQkFBVixDQUFOO0VBQ1gsSUFBSSxDQUFDRixRQUFMLEVBQWUsTUFBTSxJQUFJRSxLQUFKLENBQVUsMEJBQVYsQ0FBTjtFQUNmLEtBQUtKLEtBQUwsR0FBYUEsS0FBYjtFQUNBLEtBQUtDLElBQUwsR0FBWUEsSUFBWjtFQUNBLEtBQUtDLFFBQUwsR0FBZ0JBLFFBQWhCO0FBQ0EsQztBQUdGOzs7O0FBQ0EsSUFBWUcsU0FBWjs7O0FBQUEsV0FBWUEsU0FBWixFQUFxQjtFQUFHQTtFQUFRQTtFQUFVQTtFQUFVQTtBQUFRLENBQTVELEVBQVlBLFNBQVMseUJBQVRBLFNBQVMsTUFBckIiLCJuYW1lcyI6WyJTbG90RGF0YSIsImluZGV4IiwibmFtZSIsImJvbmVEYXRhIiwiQ29sb3IiLCJFcnJvciIsIkJsZW5kTW9kZSJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvU2xvdERhdGEudHMiXSwic291cmNlc0NvbnRlbnQiOltudWxsXX0=","\"use strict\";\n\nexports.__esModule = true;\nexports.TextureWrap = exports.TextureRegion = exports.TextureFilter = exports.Texture = exports.FakeTexture = void 0;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/******************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated January 1, 2020. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2020, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\r\n * or otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\nvar Texture = /*#__PURE__*/function () {\n  function Texture(image) {\n    this._image = image;\n  }\n\n  var _proto = Texture.prototype;\n\n  _proto.getImage = function getImage() {\n    return this._image;\n  };\n\n  return Texture;\n}();\n\nexports.Texture = Texture;\nvar TextureFilter;\nexports.TextureFilter = TextureFilter;\n\n(function (TextureFilter) {\n  TextureFilter[TextureFilter[\"Nearest\"] = 9728] = \"Nearest\";\n  TextureFilter[TextureFilter[\"Linear\"] = 9729] = \"Linear\";\n  TextureFilter[TextureFilter[\"MipMap\"] = 9987] = \"MipMap\";\n  TextureFilter[TextureFilter[\"MipMapNearestNearest\"] = 9984] = \"MipMapNearestNearest\";\n  TextureFilter[TextureFilter[\"MipMapLinearNearest\"] = 9985] = \"MipMapLinearNearest\";\n  TextureFilter[TextureFilter[\"MipMapNearestLinear\"] = 9986] = \"MipMapNearestLinear\";\n  TextureFilter[TextureFilter[\"MipMapLinearLinear\"] = 9987] = \"MipMapLinearLinear\"; // WebGLRenderingContext.LINEAR_MIPMAP_LINEAR\n})(TextureFilter || (exports.TextureFilter = TextureFilter = {}));\n\nvar TextureWrap;\nexports.TextureWrap = TextureWrap;\n\n(function (TextureWrap) {\n  TextureWrap[TextureWrap[\"MirroredRepeat\"] = 33648] = \"MirroredRepeat\";\n  TextureWrap[TextureWrap[\"ClampToEdge\"] = 33071] = \"ClampToEdge\";\n  TextureWrap[TextureWrap[\"Repeat\"] = 10497] = \"Repeat\"; // WebGLRenderingContext.REPEAT\n})(TextureWrap || (exports.TextureWrap = TextureWrap = {}));\n\nvar TextureRegion = function TextureRegion() {\n  this.u = 0;\n  this.v = 0;\n  this.u2 = 0;\n  this.v2 = 0;\n  this.width = 0;\n  this.height = 0;\n  this.degrees = 0;\n  this.offsetX = 0;\n  this.offsetY = 0;\n  this.originalWidth = 0;\n  this.originalHeight = 0;\n};\n\nexports.TextureRegion = TextureRegion;\n\nvar FakeTexture = /*#__PURE__*/function (_Texture) {\n  _inheritsLoose(FakeTexture, _Texture);\n\n  function FakeTexture() {\n    return _Texture.apply(this, arguments) || this;\n  }\n\n  var _proto2 = FakeTexture.prototype;\n\n  _proto2.setFilters = function setFilters(minFilter, magFilter) {};\n\n  _proto2.setWraps = function setWraps(uWrap, vWrap) {};\n\n  _proto2.dispose = function dispose() {};\n\n  return FakeTexture;\n}(Texture);\n\nexports.FakeTexture = FakeTexture;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUE2QnNCQSxPO0VBR3JCLGlCQUFhQyxLQUFiLEVBQWtEO0lBQ2pELEtBQUtDLE1BQUwsR0FBY0QsS0FBZDtFQUNBOzs7O1NBRURFLFEsR0FBQSxvQkFBUTtJQUNQLE9BQU8sS0FBS0QsTUFBWjtFQUNBLEM7Ozs7OztBQU9GLElBQVlFLGFBQVo7OztBQUFBLFdBQVlBLGFBQVosRUFBeUI7RUFDeEJBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBO0VBQ0FBLGlGQVB3QixDQU9FO0FBQzFCLENBUkQsRUFBWUEsYUFBYSw2QkFBYkEsYUFBYSxNQUF6Qjs7QUFVQSxJQUFZQyxXQUFaOzs7QUFBQSxXQUFZQSxXQUFaLEVBQXVCO0VBQ3RCQTtFQUNBQTtFQUNBQSxzREFIc0IsQ0FHUDtBQUNmLENBSkQsRUFBWUEsV0FBVywyQkFBWEEsV0FBVyxNQUF2Qjs7SUFNYUMsYSxHQUFiO0VBRUMsU0FBSSxDQUFKO0VBQU8sU0FBSSxDQUFKO0VBQ1AsVUFBSyxDQUFMO0VBQVEsVUFBSyxDQUFMO0VBQ1IsYUFBUSxDQUFSO0VBQVcsY0FBUyxDQUFUO0VBQ1gsZUFBVSxDQUFWO0VBQ0EsZUFBVSxDQUFWO0VBQWEsZUFBVSxDQUFWO0VBQ2IscUJBQWdCLENBQWhCO0VBQW1CLHNCQUFpQixDQUFqQjtBQUNuQixDOzs7O0lBRVlDLFc7Ozs7Ozs7OztVQUNaQyxVLEdBQUEsb0JBQVlDLFNBQVosRUFBc0NDLFNBQXRDLEVBQThELENBQUssQzs7VUFDbkVDLFEsR0FBQSxrQkFBVUMsS0FBVixFQUE4QkMsS0FBOUIsRUFBZ0QsQ0FBSyxDOztVQUNyREMsTyxHQUFBLG1CQUFPLENBQU8sQzs7O0VBSGtCZCxPIiwibmFtZXMiOlsiVGV4dHVyZSIsImltYWdlIiwiX2ltYWdlIiwiZ2V0SW1hZ2UiLCJUZXh0dXJlRmlsdGVyIiwiVGV4dHVyZVdyYXAiLCJUZXh0dXJlUmVnaW9uIiwiRmFrZVRleHR1cmUiLCJzZXRGaWx0ZXJzIiwibWluRmlsdGVyIiwibWFnRmlsdGVyIiwic2V0V3JhcHMiLCJ1V3JhcCIsInZXcmFwIiwiZGlzcG9zZSJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvVGV4dHVyZS50cyJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdfQ==","\"use strict\";\n\nexports.__esModule = true;\nexports.TextureAtlasRegion = exports.TextureAtlasPage = exports.TextureAtlas = void 0;\n\nvar _Texture = require(\"./Texture\");\n\nvar _Utils = require(\"./Utils\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar TextureAtlas = /*#__PURE__*/function () {\n  function TextureAtlas(atlasText) {\n    this.pages = new Array();\n    this.regions = new Array();\n    var reader = new TextureAtlasReader(atlasText);\n    var entry = new Array(4);\n    var page = null;\n    var region = null;\n    var pageFields = {};\n\n    pageFields[\"size\"] = function () {\n      page.width = parseInt(entry[1]);\n      page.height = parseInt(entry[2]);\n    };\n\n    pageFields[\"format\"] = function () {// page.format = Format[tuple[0]]; we don't need format in WebGL\n    };\n\n    pageFields[\"filter\"] = function () {\n      page.minFilter = _Utils.Utils.enumValue(_Texture.TextureFilter, entry[1]);\n      page.magFilter = _Utils.Utils.enumValue(_Texture.TextureFilter, entry[2]);\n    };\n\n    pageFields[\"repeat\"] = function () {\n      if (entry[1].indexOf('x') != -1) page.uWrap = _Texture.TextureWrap.Repeat;\n      if (entry[1].indexOf('y') != -1) page.vWrap = _Texture.TextureWrap.Repeat;\n    };\n\n    pageFields[\"pma\"] = function () {\n      page.pma = entry[1] == \"true\";\n    };\n\n    var regionFields = {};\n\n    regionFields[\"xy\"] = function () {\n      region.x = parseInt(entry[1]);\n      region.y = parseInt(entry[2]);\n    };\n\n    regionFields[\"size\"] = function () {\n      region.width = parseInt(entry[1]);\n      region.height = parseInt(entry[2]);\n    };\n\n    regionFields[\"bounds\"] = function () {\n      region.x = parseInt(entry[1]);\n      region.y = parseInt(entry[2]);\n      region.width = parseInt(entry[3]);\n      region.height = parseInt(entry[4]);\n    };\n\n    regionFields[\"offset\"] = function () {\n      region.offsetX = parseInt(entry[1]);\n      region.offsetY = parseInt(entry[2]);\n    };\n\n    regionFields[\"orig\"] = function () {\n      region.originalWidth = parseInt(entry[1]);\n      region.originalHeight = parseInt(entry[2]);\n    };\n\n    regionFields[\"offsets\"] = function () {\n      region.offsetX = parseInt(entry[1]);\n      region.offsetY = parseInt(entry[2]);\n      region.originalWidth = parseInt(entry[3]);\n      region.originalHeight = parseInt(entry[4]);\n    };\n\n    regionFields[\"rotate\"] = function () {\n      var value = entry[1];\n      if (value == \"true\") region.degrees = 90;else if (value != \"false\") region.degrees = parseInt(value);\n    };\n\n    regionFields[\"index\"] = function () {\n      region.index = parseInt(entry[1]);\n    };\n\n    var line = reader.readLine(); // Ignore empty lines before first entry.\n\n    while (line && line.trim().length == 0) {\n      line = reader.readLine();\n    } // Header entries.\n\n\n    while (true) {\n      if (!line || line.trim().length == 0) break;\n      if (reader.readEntry(entry, line) == 0) break; // Silently ignore all header fields.\n\n      line = reader.readLine();\n    } // Page and region entries.\n\n\n    var names = null;\n    var values = null;\n\n    while (true) {\n      if (line === null) break;\n\n      if (line.trim().length == 0) {\n        page = null;\n        line = reader.readLine();\n      } else if (!page) {\n        page = new TextureAtlasPage();\n        page.name = line.trim();\n\n        while (true) {\n          if (reader.readEntry(entry, line = reader.readLine()) == 0) break;\n          var field = pageFields[entry[0]];\n          if (field) field();\n        }\n\n        this.pages.push(page);\n      } else {\n        region = new TextureAtlasRegion();\n        region.page = page;\n        region.name = line;\n\n        while (true) {\n          var count = reader.readEntry(entry, line = reader.readLine());\n          if (count == 0) break;\n          var _field = regionFields[entry[0]];\n          if (_field) _field();else {\n            if (!names) {\n              names = [];\n              values = [];\n            }\n\n            names.push(entry[0]);\n            var entryValues = [];\n\n            for (var i = 0; i < count; i++) {\n              entryValues.push(parseInt(entry[i + 1]));\n            }\n\n            values.push(entryValues);\n          }\n        }\n\n        if (region.originalWidth == 0 && region.originalHeight == 0) {\n          region.originalWidth = region.width;\n          region.originalHeight = region.height;\n        }\n\n        if (names && names.length > 0) {\n          region.names = names;\n          region.values = values;\n          names = null;\n          values = null;\n        }\n\n        region.u = region.x / page.width;\n        region.v = region.y / page.height;\n\n        if (region.degrees == 90) {\n          region.u2 = (region.x + region.height) / page.width;\n          region.v2 = (region.y + region.width) / page.height;\n        } else {\n          region.u2 = (region.x + region.width) / page.width;\n          region.v2 = (region.y + region.height) / page.height;\n        }\n\n        this.regions.push(region);\n      }\n    }\n  }\n\n  var _proto = TextureAtlas.prototype;\n\n  _proto.findRegion = function findRegion(name) {\n    for (var i = 0; i < this.regions.length; i++) {\n      if (this.regions[i].name == name) {\n        return this.regions[i];\n      }\n    }\n\n    return null;\n  };\n\n  _proto.setTextures = function setTextures(assetManager, pathPrefix) {\n    if (pathPrefix === void 0) {\n      pathPrefix = \"\";\n    }\n\n    for (var _iterator = _createForOfIteratorHelperLoose(this.pages), _step; !(_step = _iterator()).done;) {\n      var page = _step.value;\n      page.setTexture(assetManager.get(pathPrefix + page.name));\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    for (var i = 0; i < this.pages.length; i++) {\n      this.pages[i].texture.dispose();\n    }\n  };\n\n  return TextureAtlas;\n}();\n\nexports.TextureAtlas = TextureAtlas;\n\nvar TextureAtlasReader = /*#__PURE__*/function () {\n  function TextureAtlasReader(text) {\n    this.lines = null;\n    this.index = 0;\n    this.lines = text.split(/\\r\\n|\\r|\\n/);\n  }\n\n  var _proto2 = TextureAtlasReader.prototype;\n\n  _proto2.readLine = function readLine() {\n    if (this.index >= this.lines.length) return null;\n    return this.lines[this.index++];\n  };\n\n  _proto2.readEntry = function readEntry(entry, line) {\n    if (!line) return 0;\n    line = line.trim();\n    if (line.length == 0) return 0;\n    var colon = line.indexOf(':');\n    if (colon == -1) return 0;\n    entry[0] = line.substr(0, colon).trim();\n\n    for (var i = 1, lastMatch = colon + 1;; i++) {\n      var comma = line.indexOf(',', lastMatch);\n\n      if (comma == -1) {\n        entry[i] = line.substr(lastMatch).trim();\n        return i;\n      }\n\n      entry[i] = line.substr(lastMatch, comma - lastMatch).trim();\n      lastMatch = comma + 1;\n      if (i == 4) return 4;\n    }\n  };\n\n  return TextureAtlasReader;\n}();\n\nvar TextureAtlasPage = /*#__PURE__*/function () {\n  function TextureAtlasPage() {\n    this.name = null;\n    this.minFilter = _Texture.TextureFilter.Nearest;\n    this.magFilter = _Texture.TextureFilter.Nearest;\n    this.uWrap = _Texture.TextureWrap.ClampToEdge;\n    this.vWrap = _Texture.TextureWrap.ClampToEdge;\n    this.texture = null;\n    this.width = 0;\n    this.height = 0;\n    this.pma = false;\n  }\n\n  var _proto3 = TextureAtlasPage.prototype;\n\n  _proto3.setTexture = function setTexture(texture) {\n    this.texture = texture;\n    texture.setFilters(this.minFilter, this.magFilter);\n    texture.setWraps(this.uWrap, this.vWrap);\n  };\n\n  return TextureAtlasPage;\n}();\n\nexports.TextureAtlasPage = TextureAtlasPage;\n\nvar TextureAtlasRegion = /*#__PURE__*/function (_TextureRegion) {\n  _inheritsLoose(TextureAtlasRegion, _TextureRegion);\n\n  function TextureAtlasRegion() {\n    var _this;\n\n    _this = _TextureRegion.apply(this, arguments) || this;\n    _this.page = null;\n    _this.name = null;\n    _this.x = 0;\n    _this.y = 0;\n    _this.offsetX = 0;\n    _this.offsetY = 0;\n    _this.originalWidth = 0;\n    _this.originalHeight = 0;\n    _this.index = 0;\n    _this.degrees = 0;\n    _this.names = null;\n    _this.values = null;\n    return _this;\n  }\n\n  return TextureAtlasRegion;\n}(_Texture.TextureRegion);\n\nexports.TextureAtlasRegion = TextureAtlasRegion;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","\"use strict\";\n\nexports.__esModule = true;\nexports.TransformConstraint = void 0;\n\nvar _Utils = require(\"./Utils\");\n\n/******************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated January 1, 2020. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2020, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\r\n * or otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\n\n/** Stores the current pose for a transform constraint. A transform constraint adjusts the world transform of the constrained\r\n * bones to match that of the target bone.\r\n *\r\n * See [Transform constraints](http://esotericsoftware.com/spine-transform-constraints) in the Spine User Guide. */\nvar TransformConstraint = /*#__PURE__*/function () {\n  function TransformConstraint(data, skeleton) {\n    /** The transform constraint's setup pose data. */\n    this.data = null;\n    /** The bones that will be modified by this transform constraint. */\n\n    this.bones = null;\n    /** The target bone whose world transform will be copied to the constrained bones. */\n\n    this.target = null;\n    this.mixRotate = 0;\n    this.mixX = 0;\n    this.mixY = 0;\n    this.mixScaleX = 0;\n    this.mixScaleY = 0;\n    this.mixShearY = 0;\n    this.temp = new _Utils.Vector2();\n    this.active = false;\n    if (!data) throw new Error(\"data cannot be null.\");\n    if (!skeleton) throw new Error(\"skeleton cannot be null.\");\n    this.data = data;\n    this.mixRotate = data.mixRotate;\n    this.mixX = data.mixX;\n    this.mixY = data.mixY;\n    this.mixScaleX = data.mixScaleX;\n    this.mixScaleY = data.mixScaleY;\n    this.mixShearY = data.mixShearY;\n    this.bones = new Array();\n\n    for (var i = 0; i < data.bones.length; i++) {\n      this.bones.push(skeleton.findBone(data.bones[i].name));\n    }\n\n    this.target = skeleton.findBone(data.target.name);\n  }\n\n  var _proto = TransformConstraint.prototype;\n\n  _proto.isActive = function isActive() {\n    return this.active;\n  };\n\n  _proto.update = function update() {\n    if (this.mixRotate == 0 && this.mixX == 0 && this.mixY == 0 && this.mixScaleX == 0 && this.mixScaleX == 0 && this.mixShearY == 0) return;\n\n    if (this.data.local) {\n      if (this.data.relative) this.applyRelativeLocal();else this.applyAbsoluteLocal();\n    } else {\n      if (this.data.relative) this.applyRelativeWorld();else this.applyAbsoluteWorld();\n    }\n  };\n\n  _proto.applyAbsoluteWorld = function applyAbsoluteWorld() {\n    var mixRotate = this.mixRotate,\n        mixX = this.mixX,\n        mixY = this.mixY,\n        mixScaleX = this.mixScaleX,\n        mixScaleY = this.mixScaleY,\n        mixShearY = this.mixShearY;\n    var translate = mixX != 0 || mixY != 0;\n    var target = this.target;\n    var ta = target.a,\n        tb = target.b,\n        tc = target.c,\n        td = target.d;\n    var degRadReflect = ta * td - tb * tc > 0 ? _Utils.MathUtils.degRad : -_Utils.MathUtils.degRad;\n    var offsetRotation = this.data.offsetRotation * degRadReflect;\n    var offsetShearY = this.data.offsetShearY * degRadReflect;\n    var bones = this.bones;\n\n    for (var i = 0, n = bones.length; i < n; i++) {\n      var bone = bones[i];\n\n      if (mixRotate != 0) {\n        var a = bone.a,\n            b = bone.b,\n            c = bone.c,\n            d = bone.d;\n        var r = Math.atan2(tc, ta) - Math.atan2(c, a) + offsetRotation;\n        if (r > _Utils.MathUtils.PI) r -= _Utils.MathUtils.PI2;else if (r < -_Utils.MathUtils.PI) //\n          r += _Utils.MathUtils.PI2;\n        r *= mixRotate;\n        var cos = Math.cos(r),\n            sin = Math.sin(r);\n        bone.a = cos * a - sin * c;\n        bone.b = cos * b - sin * d;\n        bone.c = sin * a + cos * c;\n        bone.d = sin * b + cos * d;\n      }\n\n      if (translate) {\n        var temp = this.temp;\n        target.localToWorld(temp.set(this.data.offsetX, this.data.offsetY));\n        bone.worldX += (temp.x - bone.worldX) * mixX;\n        bone.worldY += (temp.y - bone.worldY) * mixY;\n      }\n\n      if (mixScaleX != 0) {\n        var s = Math.sqrt(bone.a * bone.a + bone.c * bone.c);\n        if (s != 0) s = (s + (Math.sqrt(ta * ta + tc * tc) - s + this.data.offsetScaleX) * mixScaleX) / s;\n        bone.a *= s;\n        bone.c *= s;\n      }\n\n      if (mixScaleY != 0) {\n        var _s = Math.sqrt(bone.b * bone.b + bone.d * bone.d);\n\n        if (_s != 0) _s = (_s + (Math.sqrt(tb * tb + td * td) - _s + this.data.offsetScaleY) * mixScaleY) / _s;\n        bone.b *= _s;\n        bone.d *= _s;\n      }\n\n      if (mixShearY > 0) {\n        var _b = bone.b,\n            _d = bone.d;\n        var by = Math.atan2(_d, _b);\n\n        var _r = Math.atan2(td, tb) - Math.atan2(tc, ta) - (by - Math.atan2(bone.c, bone.a));\n\n        if (_r > _Utils.MathUtils.PI) _r -= _Utils.MathUtils.PI2;else if (_r < -_Utils.MathUtils.PI) //\n          _r += _Utils.MathUtils.PI2;\n        _r = by + (_r + offsetShearY) * mixShearY;\n\n        var _s2 = Math.sqrt(_b * _b + _d * _d);\n\n        bone.b = Math.cos(_r) * _s2;\n        bone.d = Math.sin(_r) * _s2;\n      }\n\n      bone.updateAppliedTransform();\n    }\n  };\n\n  _proto.applyRelativeWorld = function applyRelativeWorld() {\n    var mixRotate = this.mixRotate,\n        mixX = this.mixX,\n        mixY = this.mixY,\n        mixScaleX = this.mixScaleX,\n        mixScaleY = this.mixScaleY,\n        mixShearY = this.mixShearY;\n    var translate = mixX != 0 || mixY != 0;\n    var target = this.target;\n    var ta = target.a,\n        tb = target.b,\n        tc = target.c,\n        td = target.d;\n    var degRadReflect = ta * td - tb * tc > 0 ? _Utils.MathUtils.degRad : -_Utils.MathUtils.degRad;\n    var offsetRotation = this.data.offsetRotation * degRadReflect,\n        offsetShearY = this.data.offsetShearY * degRadReflect;\n    var bones = this.bones;\n\n    for (var i = 0, n = bones.length; i < n; i++) {\n      var bone = bones[i];\n\n      if (mixRotate != 0) {\n        var a = bone.a,\n            b = bone.b,\n            c = bone.c,\n            d = bone.d;\n        var r = Math.atan2(tc, ta) + offsetRotation;\n        if (r > _Utils.MathUtils.PI) r -= _Utils.MathUtils.PI2;else if (r < -_Utils.MathUtils.PI) //\n          r += _Utils.MathUtils.PI2;\n        r *= mixRotate;\n        var cos = Math.cos(r),\n            sin = Math.sin(r);\n        bone.a = cos * a - sin * c;\n        bone.b = cos * b - sin * d;\n        bone.c = sin * a + cos * c;\n        bone.d = sin * b + cos * d;\n      }\n\n      if (translate) {\n        var temp = this.temp;\n        target.localToWorld(temp.set(this.data.offsetX, this.data.offsetY));\n        bone.worldX += temp.x * mixX;\n        bone.worldY += temp.y * mixY;\n      }\n\n      if (mixScaleX != 0) {\n        var s = (Math.sqrt(ta * ta + tc * tc) - 1 + this.data.offsetScaleX) * mixScaleX + 1;\n        bone.a *= s;\n        bone.c *= s;\n      }\n\n      if (mixScaleY != 0) {\n        var _s3 = (Math.sqrt(tb * tb + td * td) - 1 + this.data.offsetScaleY) * mixScaleY + 1;\n\n        bone.b *= _s3;\n        bone.d *= _s3;\n      }\n\n      if (mixShearY > 0) {\n        var _r2 = Math.atan2(td, tb) - Math.atan2(tc, ta);\n\n        if (_r2 > _Utils.MathUtils.PI) _r2 -= _Utils.MathUtils.PI2;else if (_r2 < -_Utils.MathUtils.PI) //\n          _r2 += _Utils.MathUtils.PI2;\n        var _b2 = bone.b,\n            _d2 = bone.d;\n        _r2 = Math.atan2(_d2, _b2) + (_r2 - _Utils.MathUtils.PI / 2 + offsetShearY) * mixShearY;\n\n        var _s4 = Math.sqrt(_b2 * _b2 + _d2 * _d2);\n\n        bone.b = Math.cos(_r2) * _s4;\n        bone.d = Math.sin(_r2) * _s4;\n      }\n\n      bone.updateAppliedTransform();\n    }\n  };\n\n  _proto.applyAbsoluteLocal = function applyAbsoluteLocal() {\n    var mixRotate = this.mixRotate,\n        mixX = this.mixX,\n        mixY = this.mixY,\n        mixScaleX = this.mixScaleX,\n        mixScaleY = this.mixScaleY,\n        mixShearY = this.mixShearY;\n    var target = this.target;\n    var bones = this.bones;\n\n    for (var i = 0, n = bones.length; i < n; i++) {\n      var bone = bones[i];\n      var rotation = bone.arotation;\n\n      if (mixRotate != 0) {\n        var r = target.arotation - rotation + this.data.offsetRotation;\n        r -= (16384 - (16384.499999999996 - r / 360 | 0)) * 360;\n        rotation += r * mixRotate;\n      }\n\n      var x = bone.ax,\n          y = bone.ay;\n      x += (target.ax - x + this.data.offsetX) * mixX;\n      y += (target.ay - y + this.data.offsetY) * mixY;\n      var scaleX = bone.ascaleX,\n          scaleY = bone.ascaleY;\n      if (mixScaleX != 0 && scaleX != 0) scaleX = (scaleX + (target.ascaleX - scaleX + this.data.offsetScaleX) * mixScaleX) / scaleX;\n      if (mixScaleY != 0 && scaleY != 0) scaleY = (scaleY + (target.ascaleY - scaleY + this.data.offsetScaleY) * mixScaleY) / scaleY;\n      var shearY = bone.ashearY;\n\n      if (mixShearY != 0) {\n        var _r3 = target.ashearY - shearY + this.data.offsetShearY;\n\n        _r3 -= (16384 - (16384.499999999996 - _r3 / 360 | 0)) * 360;\n        shearY += _r3 * mixShearY;\n      }\n\n      bone.updateWorldTransformWith(x, y, rotation, scaleX, scaleY, bone.ashearX, shearY);\n    }\n  };\n\n  _proto.applyRelativeLocal = function applyRelativeLocal() {\n    var mixRotate = this.mixRotate,\n        mixX = this.mixX,\n        mixY = this.mixY,\n        mixScaleX = this.mixScaleX,\n        mixScaleY = this.mixScaleY,\n        mixShearY = this.mixShearY;\n    var target = this.target;\n    var bones = this.bones;\n\n    for (var i = 0, n = bones.length; i < n; i++) {\n      var bone = bones[i];\n      var rotation = bone.arotation + (target.arotation + this.data.offsetRotation) * mixRotate;\n      var x = bone.ax + (target.ax + this.data.offsetX) * mixX;\n      var y = bone.ay + (target.ay + this.data.offsetY) * mixY;\n      var scaleX = bone.ascaleX * ((target.ascaleX - 1 + this.data.offsetScaleX) * mixScaleX + 1);\n      var scaleY = bone.ascaleY * ((target.ascaleY - 1 + this.data.offsetScaleY) * mixScaleY + 1);\n      var shearY = bone.ashearY + (target.ashearY + this.data.offsetShearY) * mixShearY;\n      bone.updateWorldTransformWith(x, y, rotation, scaleX, scaleY, bone.ashearX, shearY);\n    }\n  };\n\n  return TransformConstraint;\n}();\n\nexports.TransformConstraint = TransformConstraint;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","\"use strict\";\n\nexports.__esModule = true;\nexports.TransformConstraintData = void 0;\n\nvar _ConstraintData2 = require(\"./ConstraintData\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/** Stores the setup pose for a {@link TransformConstraint}.\r\n *\r\n * See [Transform constraints](http://esotericsoftware.com/spine-transform-constraints) in the Spine User Guide. */\nvar TransformConstraintData = /*#__PURE__*/function (_ConstraintData) {\n  _inheritsLoose(TransformConstraintData, _ConstraintData);\n\n  function TransformConstraintData(name) {\n    var _this;\n\n    _this = _ConstraintData.call(this, name, 0, false) || this;\n    /** The bones that will be modified by this transform constraint. */\n\n    _this.bones = new Array();\n    /** The target bone whose world transform will be copied to the constrained bones. */\n\n    _this.target = null;\n    _this.mixRotate = 0;\n    _this.mixX = 0;\n    _this.mixY = 0;\n    _this.mixScaleX = 0;\n    _this.mixScaleY = 0;\n    _this.mixShearY = 0;\n    /** An offset added to the constrained bone rotation. */\n\n    _this.offsetRotation = 0;\n    /** An offset added to the constrained bone X translation. */\n\n    _this.offsetX = 0;\n    /** An offset added to the constrained bone Y translation. */\n\n    _this.offsetY = 0;\n    /** An offset added to the constrained bone scaleX. */\n\n    _this.offsetScaleX = 0;\n    /** An offset added to the constrained bone scaleY. */\n\n    _this.offsetScaleY = 0;\n    /** An offset added to the constrained bone shearY. */\n\n    _this.offsetShearY = 0;\n    _this.relative = false;\n    _this.local = false;\n    return _this;\n  }\n\n  return TransformConstraintData;\n}(_ConstraintData2.ConstraintData);\n\nexports.TransformConstraintData = TransformConstraintData;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7QUE2QkE7Ozs7OztBQUdBOzs7SUFHYUEsdUI7OztFQW9DWixpQ0FBYUMsSUFBYixFQUF5QjtJQUFBOztJQUN4QixtQ0FBTUEsSUFBTixFQUFZLENBQVosRUFBZSxLQUFmO0lBbkNEOztJQUNBLGNBQVEsSUFBSUMsS0FBSixFQUFSO0lBRUE7O0lBQ0EsZUFBbUIsSUFBbkI7SUFFQSxrQkFBWSxDQUFaO0lBQ0EsYUFBTyxDQUFQO0lBQ0EsYUFBTyxDQUFQO0lBQ0Esa0JBQVksQ0FBWjtJQUNBLGtCQUFZLENBQVo7SUFDQSxrQkFBWSxDQUFaO0lBRUE7O0lBQ0EsdUJBQWlCLENBQWpCO0lBRUE7O0lBQ0EsZ0JBQVUsQ0FBVjtJQUVBOztJQUNBLGdCQUFVLENBQVY7SUFFQTs7SUFDQSxxQkFBZSxDQUFmO0lBRUE7O0lBQ0EscUJBQWUsQ0FBZjtJQUVBOztJQUNBLHFCQUFlLENBQWY7SUFFQSxpQkFBVyxLQUFYO0lBQ0EsY0FBUSxLQUFSO0lBRXlCO0VBRXhCOzs7RUF0QzJDQywrQiIsIm5hbWVzIjpbIlRyYW5zZm9ybUNvbnN0cmFpbnREYXRhIiwibmFtZSIsIkFycmF5IiwiQ29uc3RyYWludERhdGEiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1RyYW5zZm9ybUNvbnN0cmFpbnREYXRhLnRzIl0sInNvdXJjZXNDb250ZW50IjpbbnVsbF19","\"use strict\";\n\nexports.__esModule = true;\nexports.WindowedMean = exports.Vector2 = exports.Utils = exports.TimeKeeper = exports.StringSet = exports.PowOut = exports.Pow = exports.Pool = exports.MathUtils = exports.Interpolation = exports.IntSet = exports.DebugUtils = exports.Color = void 0;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/******************************************************************************\r\n * Spine Runtimes License Agreement\r\n * Last updated January 1, 2020. Replaces all prior versions.\r\n *\r\n * Copyright (c) 2013-2020, Esoteric Software LLC\r\n *\r\n * Integration of the Spine Runtimes into software or otherwise creating\r\n * derivative works of the Spine Runtimes is permitted under the terms and\r\n * conditions of Section 2 of the Spine Editor License Agreement:\r\n * http://esotericsoftware.com/spine-editor-license\r\n *\r\n * Otherwise, it is permitted to integrate the Spine Runtimes into software\r\n * or otherwise create derivative works of the Spine Runtimes (collectively,\r\n * \"Products\"), provided that each user of the Products must obtain their own\r\n * Spine Editor license and redistribution of the Products in any form must\r\n * include this license and copyright notice.\r\n *\r\n * THE SPINE RUNTIMES ARE PROVIDED BY ESOTERIC SOFTWARE LLC \"AS IS\" AND ANY\r\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL ESOTERIC SOFTWARE LLC BE LIABLE FOR ANY\r\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES,\r\n * BUSINESS INTERRUPTION, OR LOSS OF USE, DATA, OR PROFITS) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n * THE SPINE RUNTIMES, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *****************************************************************************/\nvar IntSet = /*#__PURE__*/function () {\n  function IntSet() {\n    this.array = new Array();\n  }\n\n  var _proto = IntSet.prototype;\n\n  _proto.add = function add(value) {\n    var contains = this.contains(value);\n    this.array[value | 0] = value | 0;\n    return !contains;\n  };\n\n  _proto.contains = function contains(value) {\n    return this.array[value | 0] != undefined;\n  };\n\n  _proto.remove = function remove(value) {\n    this.array[value | 0] = undefined;\n  };\n\n  _proto.clear = function clear() {\n    this.array.length = 0;\n  };\n\n  return IntSet;\n}();\n\nexports.IntSet = IntSet;\n\nvar StringSet = /*#__PURE__*/function () {\n  function StringSet() {\n    this.entries = {};\n    this.size = 0;\n  }\n\n  var _proto2 = StringSet.prototype;\n\n  _proto2.add = function add(value) {\n    var contains = this.entries[value];\n    this.entries[value] = true;\n\n    if (!contains) {\n      this.size++;\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto2.addAll = function addAll(values) {\n    var oldSize = this.size;\n\n    for (var i = 0, n = values.length; i < n; i++) {\n      this.add(values[i]);\n    }\n\n    return oldSize != this.size;\n  };\n\n  _proto2.contains = function contains(value) {\n    return this.entries[value];\n  };\n\n  _proto2.clear = function clear() {\n    this.entries = {};\n    this.size = 0;\n  };\n\n  return StringSet;\n}();\n\nexports.StringSet = StringSet;\n\nvar Color = /*#__PURE__*/function () {\n  function Color(r, g, b, a) {\n    if (r === void 0) {\n      r = 0;\n    }\n\n    if (g === void 0) {\n      g = 0;\n    }\n\n    if (b === void 0) {\n      b = 0;\n    }\n\n    if (a === void 0) {\n      a = 0;\n    }\n\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    this.a = a;\n  }\n\n  var _proto3 = Color.prototype;\n\n  _proto3.set = function set(r, g, b, a) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    this.a = a;\n    return this.clamp();\n  };\n\n  _proto3.setFromColor = function setFromColor(c) {\n    this.r = c.r;\n    this.g = c.g;\n    this.b = c.b;\n    this.a = c.a;\n    return this;\n  };\n\n  _proto3.setFromString = function setFromString(hex) {\n    hex = hex.charAt(0) == '#' ? hex.substr(1) : hex;\n    this.r = parseInt(hex.substr(0, 2), 16) / 255;\n    this.g = parseInt(hex.substr(2, 2), 16) / 255;\n    this.b = parseInt(hex.substr(4, 2), 16) / 255;\n    this.a = hex.length != 8 ? 1 : parseInt(hex.substr(6, 2), 16) / 255;\n    return this;\n  };\n\n  _proto3.add = function add(r, g, b, a) {\n    this.r += r;\n    this.g += g;\n    this.b += b;\n    this.a += a;\n    return this.clamp();\n  };\n\n  _proto3.clamp = function clamp() {\n    if (this.r < 0) this.r = 0;else if (this.r > 1) this.r = 1;\n    if (this.g < 0) this.g = 0;else if (this.g > 1) this.g = 1;\n    if (this.b < 0) this.b = 0;else if (this.b > 1) this.b = 1;\n    if (this.a < 0) this.a = 0;else if (this.a > 1) this.a = 1;\n    return this;\n  };\n\n  Color.rgba8888ToColor = function rgba8888ToColor(color, value) {\n    color.r = ((value & 0xff000000) >>> 24) / 255;\n    color.g = ((value & 0x00ff0000) >>> 16) / 255;\n    color.b = ((value & 0x0000ff00) >>> 8) / 255;\n    color.a = (value & 0x000000ff) / 255;\n  };\n\n  Color.rgb888ToColor = function rgb888ToColor(color, value) {\n    color.r = ((value & 0x00ff0000) >>> 16) / 255;\n    color.g = ((value & 0x0000ff00) >>> 8) / 255;\n    color.b = (value & 0x000000ff) / 255;\n  };\n\n  Color.fromString = function fromString(hex) {\n    return new Color().setFromString(hex);\n  };\n\n  return Color;\n}();\n\nexports.Color = Color;\nColor.WHITE = new Color(1, 1, 1, 1);\nColor.RED = new Color(1, 0, 0, 1);\nColor.GREEN = new Color(0, 1, 0, 1);\nColor.BLUE = new Color(0, 0, 1, 1);\nColor.MAGENTA = new Color(1, 0, 1, 1);\n\nvar MathUtils = /*#__PURE__*/function () {\n  function MathUtils() {}\n\n  MathUtils.clamp = function clamp(value, min, max) {\n    if (value < min) return min;\n    if (value > max) return max;\n    return value;\n  };\n\n  MathUtils.cosDeg = function cosDeg(degrees) {\n    return Math.cos(degrees * MathUtils.degRad);\n  };\n\n  MathUtils.sinDeg = function sinDeg(degrees) {\n    return Math.sin(degrees * MathUtils.degRad);\n  };\n\n  MathUtils.signum = function signum(value) {\n    return value > 0 ? 1 : value < 0 ? -1 : 0;\n  };\n\n  MathUtils.toInt = function toInt(x) {\n    return x > 0 ? Math.floor(x) : Math.ceil(x);\n  };\n\n  MathUtils.cbrt = function cbrt(x) {\n    var y = Math.pow(Math.abs(x), 1 / 3);\n    return x < 0 ? -y : y;\n  };\n\n  MathUtils.randomTriangular = function randomTriangular(min, max) {\n    return MathUtils.randomTriangularWith(min, max, (min + max) * 0.5);\n  };\n\n  MathUtils.randomTriangularWith = function randomTriangularWith(min, max, mode) {\n    var u = Math.random();\n    var d = max - min;\n    if (u <= (mode - min) / d) return min + Math.sqrt(u * d * (mode - min));\n    return max - Math.sqrt((1 - u) * d * (max - mode));\n  };\n\n  MathUtils.isPowerOfTwo = function isPowerOfTwo(value) {\n    return value && (value & value - 1) === 0;\n  };\n\n  return MathUtils;\n}();\n\nexports.MathUtils = MathUtils;\nMathUtils.PI = 3.1415927;\nMathUtils.PI2 = MathUtils.PI * 2;\nMathUtils.radiansToDegrees = 180 / MathUtils.PI;\nMathUtils.radDeg = MathUtils.radiansToDegrees;\nMathUtils.degreesToRadians = MathUtils.PI / 180;\nMathUtils.degRad = MathUtils.degreesToRadians;\n\nvar Interpolation = /*#__PURE__*/function () {\n  function Interpolation() {}\n\n  var _proto4 = Interpolation.prototype;\n\n  _proto4.apply = function apply(start, end, a) {\n    return start + (end - start) * this.applyInternal(a);\n  };\n\n  return Interpolation;\n}();\n\nexports.Interpolation = Interpolation;\n\nvar Pow = /*#__PURE__*/function (_Interpolation) {\n  _inheritsLoose(Pow, _Interpolation);\n\n  function Pow(power) {\n    var _this;\n\n    _this = _Interpolation.call(this) || this;\n    _this.power = 2;\n    _this.power = power;\n    return _this;\n  }\n\n  var _proto5 = Pow.prototype;\n\n  _proto5.applyInternal = function applyInternal(a) {\n    if (a <= 0.5) return Math.pow(a * 2, this.power) / 2;\n    return Math.pow((a - 1) * 2, this.power) / (this.power % 2 == 0 ? -2 : 2) + 1;\n  };\n\n  return Pow;\n}(Interpolation);\n\nexports.Pow = Pow;\n\nvar PowOut = /*#__PURE__*/function (_Pow) {\n  _inheritsLoose(PowOut, _Pow);\n\n  function PowOut(power) {\n    return _Pow.call(this, power) || this;\n  }\n\n  var _proto6 = PowOut.prototype;\n\n  _proto6.applyInternal = function applyInternal(a) {\n    return Math.pow(a - 1, this.power) * (this.power % 2 == 0 ? -1 : 1) + 1;\n  };\n\n  return PowOut;\n}(Pow);\n\nexports.PowOut = PowOut;\n\nvar Utils = /*#__PURE__*/function () {\n  function Utils() {}\n\n  Utils.arrayCopy = function arrayCopy(source, sourceStart, dest, destStart, numElements) {\n    for (var i = sourceStart, j = destStart; i < sourceStart + numElements; i++, j++) {\n      dest[j] = source[i];\n    }\n  };\n\n  Utils.arrayFill = function arrayFill(array, fromIndex, toIndex, value) {\n    for (var i = fromIndex; i < toIndex; i++) {\n      array[i] = value;\n    }\n  };\n\n  Utils.setArraySize = function setArraySize(array, size, value) {\n    if (value === void 0) {\n      value = 0;\n    }\n\n    var oldSize = array.length;\n    if (oldSize == size) return array;\n    array.length = size;\n\n    if (oldSize < size) {\n      for (var i = oldSize; i < size; i++) {\n        array[i] = value;\n      }\n    }\n\n    return array;\n  };\n\n  Utils.ensureArrayCapacity = function ensureArrayCapacity(array, size, value) {\n    if (value === void 0) {\n      value = 0;\n    }\n\n    if (array.length >= size) return array;\n    return Utils.setArraySize(array, size, value);\n  };\n\n  Utils.newArray = function newArray(size, defaultValue) {\n    var array = new Array(size);\n\n    for (var i = 0; i < size; i++) {\n      array[i] = defaultValue;\n    }\n\n    return array;\n  };\n\n  Utils.newFloatArray = function newFloatArray(size) {\n    if (Utils.SUPPORTS_TYPED_ARRAYS) return new Float32Array(size);else {\n      var array = new Array(size);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i] = 0;\n      }\n\n      return array;\n    }\n  };\n\n  Utils.newShortArray = function newShortArray(size) {\n    if (Utils.SUPPORTS_TYPED_ARRAYS) return new Int16Array(size);else {\n      var array = new Array(size);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i] = 0;\n      }\n\n      return array;\n    }\n  };\n\n  Utils.toFloatArray = function toFloatArray(array) {\n    return Utils.SUPPORTS_TYPED_ARRAYS ? new Float32Array(array) : array;\n  };\n\n  Utils.toSinglePrecision = function toSinglePrecision(value) {\n    return Utils.SUPPORTS_TYPED_ARRAYS ? Math.fround(value) : value;\n  } // This function is used to fix WebKit 602 specific issue described at http://esotericsoftware.com/forum/iOS-10-disappearing-graphics-10109\n  ;\n\n  Utils.webkit602BugfixHelper = function webkit602BugfixHelper(alpha, blend) {};\n\n  Utils.contains = function contains(array, element, identity) {\n    if (identity === void 0) {\n      identity = true;\n    }\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i] == element) return true;\n    }\n\n    return false;\n  };\n\n  Utils.enumValue = function enumValue(type, name) {\n    return type[name[0].toUpperCase() + name.slice(1)];\n  };\n\n  return Utils;\n}();\n\nexports.Utils = Utils;\nUtils.SUPPORTS_TYPED_ARRAYS = typeof Float32Array !== \"undefined\";\n\nvar DebugUtils = /*#__PURE__*/function () {\n  function DebugUtils() {}\n\n  DebugUtils.logBones = function logBones(skeleton) {\n    for (var i = 0; i < skeleton.bones.length; i++) {\n      var bone = skeleton.bones[i];\n      console.log(bone.data.name + \", \" + bone.a + \", \" + bone.b + \", \" + bone.c + \", \" + bone.d + \", \" + bone.worldX + \", \" + bone.worldY);\n    }\n  };\n\n  return DebugUtils;\n}();\n\nexports.DebugUtils = DebugUtils;\n\nvar Pool = /*#__PURE__*/function () {\n  function Pool(instantiator) {\n    this.items = new Array();\n    this.instantiator = instantiator;\n  }\n\n  var _proto7 = Pool.prototype;\n\n  _proto7.obtain = function obtain() {\n    return this.items.length > 0 ? this.items.pop() : this.instantiator();\n  };\n\n  _proto7.free = function free(item) {\n    if (item.reset) item.reset();\n    this.items.push(item);\n  };\n\n  _proto7.freeAll = function freeAll(items) {\n    for (var i = 0; i < items.length; i++) {\n      this.free(items[i]);\n    }\n  };\n\n  _proto7.clear = function clear() {\n    this.items.length = 0;\n  };\n\n  return Pool;\n}();\n\nexports.Pool = Pool;\n\nvar Vector2 = /*#__PURE__*/function () {\n  function Vector2(x, y) {\n    if (x === void 0) {\n      x = 0;\n    }\n\n    if (y === void 0) {\n      y = 0;\n    }\n\n    this.x = x;\n    this.y = y;\n  }\n\n  var _proto8 = Vector2.prototype;\n\n  _proto8.set = function set(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  };\n\n  _proto8.length = function length() {\n    var x = this.x;\n    var y = this.y;\n    return Math.sqrt(x * x + y * y);\n  };\n\n  _proto8.normalize = function normalize() {\n    var len = this.length();\n\n    if (len != 0) {\n      this.x /= len;\n      this.y /= len;\n    }\n\n    return this;\n  };\n\n  return Vector2;\n}();\n\nexports.Vector2 = Vector2;\n\nvar TimeKeeper = /*#__PURE__*/function () {\n  function TimeKeeper() {\n    this.maxDelta = 0.064;\n    this.framesPerSecond = 0;\n    this.delta = 0;\n    this.totalTime = 0;\n    this.lastTime = Date.now() / 1000;\n    this.frameCount = 0;\n    this.frameTime = 0;\n  }\n\n  var _proto9 = TimeKeeper.prototype;\n\n  _proto9.update = function update() {\n    var now = Date.now() / 1000;\n    this.delta = now - this.lastTime;\n    this.frameTime += this.delta;\n    this.totalTime += this.delta;\n    if (this.delta > this.maxDelta) this.delta = this.maxDelta;\n    this.lastTime = now;\n    this.frameCount++;\n\n    if (this.frameTime > 1) {\n      this.framesPerSecond = this.frameCount / this.frameTime;\n      this.frameTime = 0;\n      this.frameCount = 0;\n    }\n  };\n\n  return TimeKeeper;\n}();\n\nexports.TimeKeeper = TimeKeeper;\n\nvar WindowedMean = /*#__PURE__*/function () {\n  function WindowedMean(windowSize) {\n    if (windowSize === void 0) {\n      windowSize = 32;\n    }\n\n    this.addedValues = 0;\n    this.lastValue = 0;\n    this.mean = 0;\n    this.dirty = true;\n    this.values = new Array(windowSize);\n  }\n\n  var _proto10 = WindowedMean.prototype;\n\n  _proto10.hasEnoughData = function hasEnoughData() {\n    return this.addedValues >= this.values.length;\n  };\n\n  _proto10.addValue = function addValue(value) {\n    if (this.addedValues < this.values.length) this.addedValues++;\n    this.values[this.lastValue++] = value;\n    if (this.lastValue > this.values.length - 1) this.lastValue = 0;\n    this.dirty = true;\n  };\n\n  _proto10.getMean = function getMean() {\n    if (this.hasEnoughData()) {\n      if (this.dirty) {\n        var mean = 0;\n\n        for (var i = 0; i < this.values.length; i++) {\n          mean += this.values[i];\n        }\n\n        this.mean = mean / this.values.length;\n        this.dirty = false;\n      }\n\n      return this.mean;\n    }\n\n    return 0;\n  };\n\n  return WindowedMean;\n}();\n\nexports.WindowedMean = WindowedMean;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","\"use strict\";\n\nexports.__esModule = true;\nexports.VertexAttachment = exports.Attachment = void 0;\n\nvar _Utils = require(\"../Utils\");\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/** The base class for all attachments. */\nvar Attachment = function Attachment(name) {\n  if (!name) throw new Error(\"name cannot be null.\");\n  this.name = name;\n};\n/** Base class for an attachment with vertices that are transformed by one or more bones and can be deformed by a slot's\r\n * {@link Slot#deform}. */\n\n\nexports.Attachment = Attachment;\n\nvar VertexAttachment = /*#__PURE__*/function (_Attachment) {\n  _inheritsLoose(VertexAttachment, _Attachment);\n\n  function VertexAttachment(name) {\n    var _this;\n\n    _this = _Attachment.call(this, name) || this;\n    /** The unique ID for this attachment. */\n\n    _this.id = VertexAttachment.nextID++;\n    /** The bones which affect the {@link #getVertices()}. The array entries are, for each vertex, the number of bones affecting\r\n     * the vertex followed by that many bone indices, which is the index of the bone in {@link Skeleton#bones}. Will be null\r\n     * if this attachment has no weights. */\n\n    _this.bones = null;\n    /** The vertex positions in the bone's coordinate system. For a non-weighted attachment, the values are `x,y`\r\n     * entries for each vertex. For a weighted attachment, the values are `x,y,weight` entries for each bone affecting\r\n     * each vertex. */\n\n    _this.vertices = null;\n    /** The maximum number of world vertex values that can be output by\r\n     * {@link #computeWorldVertices()} using the `count` parameter. */\n\n    _this.worldVerticesLength = 0;\n    /** Deform keys for the deform attachment are also applied to this attachment. May be null if no deform keys should be applied. */\n\n    _this.deformAttachment = _assertThisInitialized(_this);\n    return _this;\n  }\n  /** Transforms the attachment's local {@link #vertices} to world coordinates. If the slot's {@link Slot#deform} is\r\n   * not empty, it is used to deform the vertices.\r\n   *\r\n   * See [World transforms](http://esotericsoftware.com/spine-runtime-skeletons#World-transforms) in the Spine\r\n   * Runtimes Guide.\r\n   * @param start The index of the first {@link #vertices} value to transform. Each vertex has 2 values, x and y.\r\n   * @param count The number of world vertex values to output. Must be <= {@link #worldVerticesLength} - `start`.\r\n   * @param worldVertices The output world vertices. Must have a length >= `offset` + `count` *\r\n   *           `stride` / 2.\r\n   * @param offset The `worldVertices` index to begin writing values.\r\n   * @param stride The number of `worldVertices` entries between the value pairs written. */\n\n\n  var _proto = VertexAttachment.prototype;\n\n  _proto.computeWorldVertices = function computeWorldVertices(slot, start, count, worldVertices, offset, stride) {\n    count = offset + (count >> 1) * stride;\n    var skeleton = slot.bone.skeleton;\n    var deformArray = slot.deform;\n    var vertices = this.vertices;\n    var bones = this.bones;\n\n    if (!bones) {\n      if (deformArray.length > 0) vertices = deformArray;\n      var bone = slot.bone;\n      var x = bone.worldX;\n      var y = bone.worldY;\n      var a = bone.a,\n          b = bone.b,\n          c = bone.c,\n          d = bone.d;\n\n      for (var _v = start, w = offset; w < count; _v += 2, w += stride) {\n        var vx = vertices[_v],\n            vy = vertices[_v + 1];\n        worldVertices[w] = vx * a + vy * b + x;\n        worldVertices[w + 1] = vx * c + vy * d + y;\n      }\n\n      return;\n    }\n\n    var v = 0,\n        skip = 0;\n\n    for (var i = 0; i < start; i += 2) {\n      var n = bones[v];\n      v += n + 1;\n      skip += n;\n    }\n\n    var skeletonBones = skeleton.bones;\n\n    if (deformArray.length == 0) {\n      for (var _w = offset, _b = skip * 3; _w < count; _w += stride) {\n        var wx = 0,\n            wy = 0;\n        var _n = bones[v++];\n        _n += v;\n\n        for (; v < _n; v++, _b += 3) {\n          var _bone = skeletonBones[bones[v]];\n          var _vx = vertices[_b],\n              _vy = vertices[_b + 1],\n              weight = vertices[_b + 2];\n          wx += (_vx * _bone.a + _vy * _bone.b + _bone.worldX) * weight;\n          wy += (_vx * _bone.c + _vy * _bone.d + _bone.worldY) * weight;\n        }\n\n        worldVertices[_w] = wx;\n        worldVertices[_w + 1] = wy;\n      }\n    } else {\n      var deform = deformArray;\n\n      for (var _w2 = offset, _b2 = skip * 3, f = skip << 1; _w2 < count; _w2 += stride) {\n        var _wx = 0,\n            _wy = 0;\n        var _n2 = bones[v++];\n        _n2 += v;\n\n        for (; v < _n2; v++, _b2 += 3, f += 2) {\n          var _bone2 = skeletonBones[bones[v]];\n\n          var _vx2 = vertices[_b2] + deform[f],\n              _vy2 = vertices[_b2 + 1] + deform[f + 1],\n              _weight = vertices[_b2 + 2];\n\n          _wx += (_vx2 * _bone2.a + _vy2 * _bone2.b + _bone2.worldX) * _weight;\n          _wy += (_vx2 * _bone2.c + _vy2 * _bone2.d + _bone2.worldY) * _weight;\n        }\n\n        worldVertices[_w2] = _wx;\n        worldVertices[_w2 + 1] = _wy;\n      }\n    }\n  }\n  /** Does not copy id (generated) or name (set on construction). **/\n  ;\n\n  _proto.copyTo = function copyTo(attachment) {\n    if (this.bones) {\n      attachment.bones = new Array(this.bones.length);\n\n      _Utils.Utils.arrayCopy(this.bones, 0, attachment.bones, 0, this.bones.length);\n    } else attachment.bones = null;\n\n    if (this.vertices) {\n      attachment.vertices = _Utils.Utils.newFloatArray(this.vertices.length);\n\n      _Utils.Utils.arrayCopy(this.vertices, 0, attachment.vertices, 0, this.vertices.length);\n    } else attachment.vertices = null;\n\n    attachment.worldVerticesLength = this.worldVerticesLength;\n    attachment.deformAttachment = this.deformAttachment;\n  };\n\n  return VertexAttachment;\n}(Attachment);\n\nexports.VertexAttachment = VertexAttachment;\nVertexAttachment.nextID = 0;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVMsQ0FBVCIsIm5hbWVzIjpbIkF0dGFjaG1lbnQiLCJuYW1lIiwiRXJyb3IiLCJWZXJ0ZXhBdHRhY2htZW50IiwibmV4dElEIiwiY29tcHV0ZVdvcmxkVmVydGljZXMiLCJzbG90Iiwic3RhcnQiLCJjb3VudCIsIndvcmxkVmVydGljZXMiLCJvZmZzZXQiLCJzdHJpZGUiLCJza2VsZXRvbiIsImJvbmUiLCJkZWZvcm1BcnJheSIsImRlZm9ybSIsInZlcnRpY2VzIiwiYm9uZXMiLCJsZW5ndGgiLCJ4Iiwid29ybGRYIiwieSIsIndvcmxkWSIsImEiLCJiIiwiYyIsImQiLCJ2IiwidyIsInZ4IiwidnkiLCJza2lwIiwiaSIsIm4iLCJza2VsZXRvbkJvbmVzIiwid3giLCJ3eSIsIndlaWdodCIsImYiLCJjb3B5VG8iLCJhdHRhY2htZW50IiwiQXJyYXkiLCJVdGlscyIsImFycmF5Q29weSIsIm5ld0Zsb2F0QXJyYXkiLCJ3b3JsZFZlcnRpY2VzTGVuZ3RoIiwiZGVmb3JtQXR0YWNobWVudCJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXR0YWNobWVudHMvQXR0YWNobWVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdfQ==","\"use strict\";\n\nexports.__esModule = true;\nexports.BoundingBoxAttachment = void 0;\n\nvar _Utils = require(\"../Utils\");\n\nvar _Attachment = require(\"./Attachment\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/** An attachment with vertices that make up a polygon. Can be used for hit detection, creating physics bodies, spawning particle\r\n * effects, and more.\r\n *\r\n * See {@link SkeletonBounds} and [Bounding Boxes](http://esotericsoftware.com/spine-bounding-boxes) in the Spine User\r\n * Guide. */\nvar BoundingBoxAttachment = /*#__PURE__*/function (_VertexAttachment) {\n  _inheritsLoose(BoundingBoxAttachment, _VertexAttachment);\n\n  function BoundingBoxAttachment(name) {\n    var _this;\n\n    _this = _VertexAttachment.call(this, name) || this;\n    _this.color = new _Utils.Color(1, 1, 1, 1);\n    return _this;\n  }\n\n  var _proto = BoundingBoxAttachment.prototype;\n\n  _proto.copy = function copy() {\n    var copy = new BoundingBoxAttachment(this.name);\n    this.copyTo(copy);\n    copy.color.setFromColor(this.color);\n    return copy;\n  };\n\n  return BoundingBoxAttachment;\n}(_Attachment.VertexAttachment);\n\nexports.BoundingBoxAttachment = BoundingBoxAttachment;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7QUE2QkE7O0FBQ0E7Ozs7OztBQUVBOzs7OztJQUthQSxxQjs7O0VBR1osK0JBQWFDLElBQWIsRUFBeUI7SUFBQTs7SUFDeEIscUNBQU1BLElBQU47SUFIRCxjQUFRLElBQUlDLFlBQUosQ0FBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixDQUFSO0lBRXlCO0VBRXhCOzs7O1NBRURDLEksR0FBQSxnQkFBSTtJQUNILElBQUlBLElBQUksR0FBRyxJQUFJSCxxQkFBSixDQUEwQixLQUFLQyxJQUEvQixDQUFYO0lBQ0EsS0FBS0csTUFBTCxDQUFZRCxJQUFaO0lBQ0FBLElBQUksQ0FBQ0UsS0FBTCxDQUFXQyxZQUFYLENBQXdCLEtBQUtELEtBQTdCO0lBQ0EsT0FBT0YsSUFBUDtFQUNBLEM7OztFQVp5Q0ksNEIiLCJuYW1lcyI6WyJCb3VuZGluZ0JveEF0dGFjaG1lbnQiLCJuYW1lIiwiQ29sb3IiLCJjb3B5IiwiY29weVRvIiwiY29sb3IiLCJzZXRGcm9tQ29sb3IiLCJWZXJ0ZXhBdHRhY2htZW50Il0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hdHRhY2htZW50cy9Cb3VuZGluZ0JveEF0dGFjaG1lbnQudHMiXSwic291cmNlc0NvbnRlbnQiOltudWxsXX0=","\"use strict\";\n\nexports.__esModule = true;\nexports.ClippingAttachment = void 0;\n\nvar _Utils = require(\"../Utils\");\n\nvar _Attachment = require(\"./Attachment\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/** An attachment with vertices that make up a polygon used for clipping the rendering of other attachments. */\nvar ClippingAttachment = /*#__PURE__*/function (_VertexAttachment) {\n  _inheritsLoose(ClippingAttachment, _VertexAttachment);\n\n  function ClippingAttachment(name) {\n    var _this;\n\n    _this = _VertexAttachment.call(this, name) || this;\n    /** Clipping is performed between the clipping polygon's slot and the end slot. Returns null if clipping is done until the end of\r\n     * the skeleton's rendering. */\n\n    _this.endSlot = null; // Nonessential.\n\n    /** The color of the clipping polygon as it was in Spine. Available only when nonessential data was exported. Clipping polygons\r\n     * are not usually rendered at runtime. */\n\n    _this.color = new _Utils.Color(0.2275, 0.2275, 0.8078, 1); // ce3a3aff\n\n    return _this;\n  }\n\n  var _proto = ClippingAttachment.prototype;\n\n  _proto.copy = function copy() {\n    var copy = new ClippingAttachment(this.name);\n    this.copyTo(copy);\n    copy.endSlot = this.endSlot;\n    copy.color.setFromColor(this.color);\n    return copy;\n  };\n\n  return ClippingAttachment;\n}(_Attachment.VertexAttachment);\n\nexports.ClippingAttachment = ClippingAttachment;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7QUE4QkE7O0FBQ0E7Ozs7OztBQUVBO0lBQ2FBLGtCOzs7RUFVWiw0QkFBYUMsSUFBYixFQUF5QjtJQUFBOztJQUN4QixxQ0FBTUEsSUFBTjtJQVZEOzs7SUFFQSxnQkFBb0IsSUFBcEIsQ0FPeUIsQ0FMekI7O0lBQ0E7OztJQUVBLGNBQVEsSUFBSUMsWUFBSixDQUFVLE1BQVYsRUFBa0IsTUFBbEIsRUFBMEIsTUFBMUIsRUFBa0MsQ0FBbEMsQ0FBUixDQUV5QixDQUZxQjs7SUFFckI7RUFFeEI7Ozs7U0FFREMsSSxHQUFBLGdCQUFJO0lBQ0gsSUFBSUEsSUFBSSxHQUFHLElBQUlILGtCQUFKLENBQXVCLEtBQUtDLElBQTVCLENBQVg7SUFDQSxLQUFLRyxNQUFMLENBQVlELElBQVo7SUFDQUEsSUFBSSxDQUFDRSxPQUFMLEdBQWUsS0FBS0EsT0FBcEI7SUFDQUYsSUFBSSxDQUFDRyxLQUFMLENBQVdDLFlBQVgsQ0FBd0IsS0FBS0QsS0FBN0I7SUFDQSxPQUFPSCxJQUFQO0VBQ0EsQzs7O0VBcEJzQ0ssNEIiLCJuYW1lcyI6WyJDbGlwcGluZ0F0dGFjaG1lbnQiLCJuYW1lIiwiQ29sb3IiLCJjb3B5IiwiY29weVRvIiwiZW5kU2xvdCIsImNvbG9yIiwic2V0RnJvbUNvbG9yIiwiVmVydGV4QXR0YWNobWVudCJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXR0YWNobWVudHMvQ2xpcHBpbmdBdHRhY2htZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbbnVsbF19","\"use strict\";\n\nexports.__esModule = true;\nexports.MeshAttachment = void 0;\n\nvar _TextureAtlas = require(\"../TextureAtlas\");\n\nvar _Utils = require(\"../Utils\");\n\nvar _Attachment = require(\"./Attachment\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/** An attachment that displays a textured mesh. A mesh has hull vertices and internal vertices within the hull. Holes are not\r\n * supported. Each vertex has UVs (texture coordinates) and triangles are used to map an image on to the mesh.\r\n *\r\n * See [Mesh attachments](http://esotericsoftware.com/spine-meshes) in the Spine User Guide. */\nvar MeshAttachment = /*#__PURE__*/function (_VertexAttachment) {\n  _inheritsLoose(MeshAttachment, _VertexAttachment);\n\n  function MeshAttachment(name) {\n    var _this;\n\n    _this = _VertexAttachment.call(this, name) || this;\n    _this.region = null;\n    /** The name of the texture region for this attachment. */\n\n    _this.path = null;\n    /** The UV pair for each vertex, normalized within the texture region. */\n\n    _this.regionUVs = null;\n    /** The UV pair for each vertex, normalized within the entire texture.\r\n     *\r\n     * See {@link #updateUVs}. */\n\n    _this.uvs = null;\n    /** Triplets of vertex indices which describe the mesh's triangulation. */\n\n    _this.triangles = null;\n    /** The color to tint the mesh. */\n\n    _this.color = new _Utils.Color(1, 1, 1, 1);\n    /** The width of the mesh's image. Available only when nonessential data was exported. */\n\n    _this.width = 0;\n    /** The height of the mesh's image. Available only when nonessential data was exported. */\n\n    _this.height = 0;\n    /** The number of entries at the beginning of {@link #vertices} that make up the mesh hull. */\n\n    _this.hullLength = 0;\n    /** Vertex index pairs describing edges for controling triangulation. Mesh triangles will never cross edges. Only available if\r\n     * nonessential data was exported. Triangulation is not performed at runtime. */\n\n    _this.edges = null;\n    _this.parentMesh = null;\n    _this.tempColor = new _Utils.Color(0, 0, 0, 0);\n    return _this;\n  }\n  /** Calculates {@link #uvs} using {@link #regionUVs} and the {@link #region}. Must be called after changing the region UVs or\r\n   * region. */\n\n\n  var _proto = MeshAttachment.prototype;\n\n  _proto.updateUVs = function updateUVs() {\n    var regionUVs = this.regionUVs;\n    if (!this.uvs || this.uvs.length != regionUVs.length) this.uvs = _Utils.Utils.newFloatArray(regionUVs.length);\n    var uvs = this.uvs;\n    var n = this.uvs.length;\n    var u = this.region.u,\n        v = this.region.v,\n        width = 0,\n        height = 0;\n\n    if (this.region instanceof _TextureAtlas.TextureAtlasRegion) {\n      var region = this.region,\n          page = region.page;\n      var textureWidth = page.width,\n          textureHeight = page.height;\n\n      switch (region.degrees) {\n        case 90:\n          u -= (region.originalHeight - region.offsetY - region.height) / textureWidth;\n          v -= (region.originalWidth - region.offsetX - region.width) / textureHeight;\n          width = region.originalHeight / textureWidth;\n          height = region.originalWidth / textureHeight;\n\n          for (var i = 0; i < n; i += 2) {\n            uvs[i] = u + regionUVs[i + 1] * width;\n            uvs[i + 1] = v + (1 - regionUVs[i]) * height;\n          }\n\n          return;\n\n        case 180:\n          u -= (region.originalWidth - region.offsetX - region.width) / textureWidth;\n          v -= region.offsetY / textureHeight;\n          width = region.originalWidth / textureWidth;\n          height = region.originalHeight / textureHeight;\n\n          for (var _i = 0; _i < n; _i += 2) {\n            uvs[_i] = u + (1 - regionUVs[_i]) * width;\n            uvs[_i + 1] = v + (1 - regionUVs[_i + 1]) * height;\n          }\n\n          return;\n\n        case 270:\n          u -= region.offsetY / textureWidth;\n          v -= region.offsetX / textureHeight;\n          width = region.originalHeight / textureWidth;\n          height = region.originalWidth / textureHeight;\n\n          for (var _i2 = 0; _i2 < n; _i2 += 2) {\n            uvs[_i2] = u + (1 - regionUVs[_i2 + 1]) * width;\n            uvs[_i2 + 1] = v + regionUVs[_i2] * height;\n          }\n\n          return;\n      }\n\n      u -= region.offsetX / textureWidth;\n      v -= (region.originalHeight - region.offsetY - region.height) / textureHeight;\n      width = region.originalWidth / textureWidth;\n      height = region.originalHeight / textureHeight;\n    } else if (!this.region) {\n      u = v = 0;\n      width = height = 1;\n    } else {\n      width = this.region.u2 - u;\n      height = this.region.v2 - v;\n    }\n\n    for (var _i3 = 0; _i3 < n; _i3 += 2) {\n      uvs[_i3] = u + regionUVs[_i3] * width;\n      uvs[_i3 + 1] = v + regionUVs[_i3 + 1] * height;\n    }\n  }\n  /** The parent mesh if this is a linked mesh, else null. A linked mesh shares the {@link #bones}, {@link #vertices},\r\n   * {@link #regionUVs}, {@link #triangles}, {@link #hullLength}, {@link #edges}, {@link #width}, and {@link #height} with the\r\n   * parent mesh, but may have a different {@link #name} or {@link #path} (and therefore a different texture). */\n  ;\n\n  _proto.getParentMesh = function getParentMesh() {\n    return this.parentMesh;\n  }\n  /** @param parentMesh May be null. */\n  ;\n\n  _proto.setParentMesh = function setParentMesh(parentMesh) {\n    this.parentMesh = parentMesh;\n\n    if (parentMesh) {\n      this.bones = parentMesh.bones;\n      this.vertices = parentMesh.vertices;\n      this.worldVerticesLength = parentMesh.worldVerticesLength;\n      this.regionUVs = parentMesh.regionUVs;\n      this.triangles = parentMesh.triangles;\n      this.hullLength = parentMesh.hullLength;\n      this.worldVerticesLength = parentMesh.worldVerticesLength;\n    }\n  };\n\n  _proto.copy = function copy() {\n    if (this.parentMesh) return this.newLinkedMesh();\n    var copy = new MeshAttachment(this.name);\n    copy.region = this.region;\n    copy.path = this.path;\n    copy.color.setFromColor(this.color);\n    this.copyTo(copy);\n    copy.regionUVs = new Array(this.regionUVs.length);\n\n    _Utils.Utils.arrayCopy(this.regionUVs, 0, copy.regionUVs, 0, this.regionUVs.length);\n\n    copy.uvs = new Array(this.uvs.length);\n\n    _Utils.Utils.arrayCopy(this.uvs, 0, copy.uvs, 0, this.uvs.length);\n\n    copy.triangles = new Array(this.triangles.length);\n\n    _Utils.Utils.arrayCopy(this.triangles, 0, copy.triangles, 0, this.triangles.length);\n\n    copy.hullLength = this.hullLength; // Nonessential.\n\n    if (this.edges) {\n      copy.edges = new Array(this.edges.length);\n\n      _Utils.Utils.arrayCopy(this.edges, 0, copy.edges, 0, this.edges.length);\n    }\n\n    copy.width = this.width;\n    copy.height = this.height;\n    return copy;\n  }\n  /** Returns a new mesh with the {@link #parentMesh} set to this mesh's parent mesh, if any, else to this mesh. **/\n  ;\n\n  _proto.newLinkedMesh = function newLinkedMesh() {\n    var copy = new MeshAttachment(this.name);\n    copy.region = this.region;\n    copy.path = this.path;\n    copy.color.setFromColor(this.color);\n    copy.deformAttachment = this.deformAttachment;\n    copy.setParentMesh(this.parentMesh ? this.parentMesh : this);\n    copy.updateUVs();\n    return copy;\n  };\n\n  return MeshAttachment;\n}(_Attachment.VertexAttachment);\n\nexports.MeshAttachment = MeshAttachment;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","\"use strict\";\n\nexports.__esModule = true;\nexports.PathAttachment = void 0;\n\nvar _Utils = require(\"../Utils\");\n\nvar _Attachment = require(\"./Attachment\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/** An attachment whose vertices make up a composite Bezier curve.\r\n *\r\n * See {@link PathConstraint} and [Paths](http://esotericsoftware.com/spine-paths) in the Spine User Guide. */\nvar PathAttachment = /*#__PURE__*/function (_VertexAttachment) {\n  _inheritsLoose(PathAttachment, _VertexAttachment);\n\n  function PathAttachment(name) {\n    var _this;\n\n    _this = _VertexAttachment.call(this, name) || this;\n    /** The lengths along the path in the setup pose from the start of the path to the end of each Bezier curve. */\n\n    _this.lengths = null;\n    /** If true, the start and end knots are connected. */\n\n    _this.closed = false;\n    /** If true, additional calculations are performed to make calculating positions along the path more accurate. If false, fewer\r\n     * calculations are performed but calculating positions along the path is less accurate. */\n\n    _this.constantSpeed = false;\n    /** The color of the path as it was in Spine. Available only when nonessential data was exported. Paths are not usually\r\n     * rendered at runtime. */\n\n    _this.color = new _Utils.Color(1, 1, 1, 1);\n    return _this;\n  }\n\n  var _proto = PathAttachment.prototype;\n\n  _proto.copy = function copy() {\n    var copy = new PathAttachment(this.name);\n    this.copyTo(copy);\n    copy.lengths = new Array(this.lengths.length);\n\n    _Utils.Utils.arrayCopy(this.lengths, 0, copy.lengths, 0, this.lengths.length);\n\n    copy.closed = closed;\n    copy.constantSpeed = this.constantSpeed;\n    copy.color.setFromColor(this.color);\n    return copy;\n  };\n\n  return PathAttachment;\n}(_Attachment.VertexAttachment);\n\nexports.PathAttachment = PathAttachment;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7QUE2QkE7O0FBQ0E7Ozs7OztBQUVBOzs7SUFHYUEsYzs7O0VBZ0JaLHdCQUFhQyxJQUFiLEVBQXlCO0lBQUE7O0lBQ3hCLHFDQUFNQSxJQUFOO0lBZkQ7O0lBQ0EsZ0JBQXlCLElBQXpCO0lBRUE7O0lBQ0EsZUFBUyxLQUFUO0lBRUE7OztJQUVBLHNCQUFnQixLQUFoQjtJQUVBOzs7SUFFQSxjQUFRLElBQUlDLFlBQUosQ0FBVSxDQUFWLEVBQWEsQ0FBYixFQUFnQixDQUFoQixFQUFtQixDQUFuQixDQUFSO0lBRXlCO0VBRXhCOzs7O1NBRURDLEksR0FBQSxnQkFBSTtJQUNILElBQUlBLElBQUksR0FBRyxJQUFJSCxjQUFKLENBQW1CLEtBQUtDLElBQXhCLENBQVg7SUFDQSxLQUFLRyxNQUFMLENBQVlELElBQVo7SUFDQUEsSUFBSSxDQUFDRSxPQUFMLEdBQWUsSUFBSUMsS0FBSixDQUFrQixLQUFLRCxPQUFMLENBQWFFLE1BQS9CLENBQWY7O0lBQ0FDLGFBQU1DLFNBQU4sQ0FBZ0IsS0FBS0osT0FBckIsRUFBOEIsQ0FBOUIsRUFBaUNGLElBQUksQ0FBQ0UsT0FBdEMsRUFBK0MsQ0FBL0MsRUFBa0QsS0FBS0EsT0FBTCxDQUFhRSxNQUEvRDs7SUFDQUosSUFBSSxDQUFDTyxNQUFMLEdBQWNBLE1BQWQ7SUFDQVAsSUFBSSxDQUFDUSxhQUFMLEdBQXFCLEtBQUtBLGFBQTFCO0lBQ0FSLElBQUksQ0FBQ1MsS0FBTCxDQUFXQyxZQUFYLENBQXdCLEtBQUtELEtBQTdCO0lBQ0EsT0FBT1QsSUFBUDtFQUNBLEM7OztFQTdCa0NXLDRCIiwibmFtZXMiOlsiUGF0aEF0dGFjaG1lbnQiLCJuYW1lIiwiQ29sb3IiLCJjb3B5IiwiY29weVRvIiwibGVuZ3RocyIsIkFycmF5IiwibGVuZ3RoIiwiVXRpbHMiLCJhcnJheUNvcHkiLCJjbG9zZWQiLCJjb25zdGFudFNwZWVkIiwiY29sb3IiLCJzZXRGcm9tQ29sb3IiLCJWZXJ0ZXhBdHRhY2htZW50Il0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hdHRhY2htZW50cy9QYXRoQXR0YWNobWVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdfQ==","\"use strict\";\n\nexports.__esModule = true;\nexports.PointAttachment = void 0;\n\nvar _Utils = require(\"../Utils\");\n\nvar _Attachment = require(\"./Attachment\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/** An attachment which is a single point and a rotation. This can be used to spawn projectiles, particles, etc. A bone can be\r\n * used in similar ways, but a PointAttachment is slightly less expensive to compute and can be hidden, shown, and placed in a\r\n * skin.\r\n *\r\n * See [Point Attachments](http://esotericsoftware.com/spine-point-attachments) in the Spine User Guide. */\nvar PointAttachment = /*#__PURE__*/function (_VertexAttachment) {\n  _inheritsLoose(PointAttachment, _VertexAttachment);\n\n  function PointAttachment(name) {\n    var _this;\n\n    _this = _VertexAttachment.call(this, name) || this;\n    _this.x = 0;\n    _this.y = 0;\n    _this.rotation = 0;\n    /** The color of the point attachment as it was in Spine. Available only when nonessential data was exported. Point attachments\r\n     * are not usually rendered at runtime. */\n\n    _this.color = new _Utils.Color(0.38, 0.94, 0, 1);\n    return _this;\n  }\n\n  var _proto = PointAttachment.prototype;\n\n  _proto.computeWorldPosition = function computeWorldPosition(bone, point) {\n    point.x = this.x * bone.a + this.y * bone.b + bone.worldX;\n    point.y = this.x * bone.c + this.y * bone.d + bone.worldY;\n    return point;\n  };\n\n  _proto.computeWorldRotation = function computeWorldRotation(bone) {\n    var cos = _Utils.MathUtils.cosDeg(this.rotation),\n        sin = _Utils.MathUtils.sinDeg(this.rotation);\n\n    var x = cos * bone.a + sin * bone.b;\n    var y = cos * bone.c + sin * bone.d;\n    return Math.atan2(y, x) * _Utils.MathUtils.radDeg;\n  };\n\n  _proto.copy = function copy() {\n    var copy = new PointAttachment(this.name);\n    copy.x = this.x;\n    copy.y = this.y;\n    copy.rotation = this.rotation;\n    copy.color.setFromColor(this.color);\n    return copy;\n  };\n\n  return PointAttachment;\n}(_Attachment.VertexAttachment);\n\nexports.PointAttachment = PointAttachment;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7QUE4QkE7O0FBQ0E7Ozs7OztBQUVBOzs7OztJQUthQSxlOzs7RUFTWix5QkFBYUMsSUFBYixFQUF5QjtJQUFBOztJQUN4QixxQ0FBTUEsSUFBTjtJQVRELFVBQVksQ0FBWjtJQUNBLFVBQVksQ0FBWjtJQUNBLGlCQUFtQixDQUFuQjtJQUVBOzs7SUFFQSxjQUFRLElBQUlDLFlBQUosQ0FBVSxJQUFWLEVBQWdCLElBQWhCLEVBQXNCLENBQXRCLEVBQXlCLENBQXpCLENBQVI7SUFFeUI7RUFFeEI7Ozs7U0FFREMsb0IsR0FBQSw4QkFBc0JDLElBQXRCLEVBQWtDQyxLQUFsQyxFQUFnRDtJQUMvQ0EsS0FBSyxDQUFDQyxDQUFOLEdBQVUsS0FBS0EsQ0FBTCxHQUFTRixJQUFJLENBQUNHLENBQWQsR0FBa0IsS0FBS0MsQ0FBTCxHQUFTSixJQUFJLENBQUNLLENBQWhDLEdBQW9DTCxJQUFJLENBQUNNLE1BQW5EO0lBQ0FMLEtBQUssQ0FBQ0csQ0FBTixHQUFVLEtBQUtGLENBQUwsR0FBU0YsSUFBSSxDQUFDTyxDQUFkLEdBQWtCLEtBQUtILENBQUwsR0FBU0osSUFBSSxDQUFDUSxDQUFoQyxHQUFvQ1IsSUFBSSxDQUFDUyxNQUFuRDtJQUNBLE9BQU9SLEtBQVA7RUFDQSxDOztTQUVEUyxvQixHQUFBLDhCQUFzQlYsSUFBdEIsRUFBZ0M7SUFDL0IsSUFBSVcsR0FBRyxHQUFHQyxpQkFBVUMsTUFBVixDQUFpQixLQUFLQyxRQUF0QixDQUFWO0lBQUEsSUFBMkNDLEdBQUcsR0FBR0gsaUJBQVVJLE1BQVYsQ0FBaUIsS0FBS0YsUUFBdEIsQ0FBakQ7O0lBQ0EsSUFBSVosQ0FBQyxHQUFHUyxHQUFHLEdBQUdYLElBQUksQ0FBQ0csQ0FBWCxHQUFlWSxHQUFHLEdBQUdmLElBQUksQ0FBQ0ssQ0FBbEM7SUFDQSxJQUFJRCxDQUFDLEdBQUdPLEdBQUcsR0FBR1gsSUFBSSxDQUFDTyxDQUFYLEdBQWVRLEdBQUcsR0FBR2YsSUFBSSxDQUFDUSxDQUFsQztJQUNBLE9BQU9TLElBQUksQ0FBQ0MsS0FBTCxDQUFXZCxDQUFYLEVBQWNGLENBQWQsSUFBbUJVLGlCQUFVTyxNQUFwQztFQUNBLEM7O1NBRURDLEksR0FBQSxnQkFBSTtJQUNILElBQUlBLElBQUksR0FBRyxJQUFJeEIsZUFBSixDQUFvQixLQUFLQyxJQUF6QixDQUFYO0lBQ0F1QixJQUFJLENBQUNsQixDQUFMLEdBQVMsS0FBS0EsQ0FBZDtJQUNBa0IsSUFBSSxDQUFDaEIsQ0FBTCxHQUFTLEtBQUtBLENBQWQ7SUFDQWdCLElBQUksQ0FBQ04sUUFBTCxHQUFnQixLQUFLQSxRQUFyQjtJQUNBTSxJQUFJLENBQUNDLEtBQUwsQ0FBV0MsWUFBWCxDQUF3QixLQUFLRCxLQUE3QjtJQUNBLE9BQU9ELElBQVA7RUFDQSxDOzs7RUFqQ21DRyw0QiIsIm5hbWVzIjpbIlBvaW50QXR0YWNobWVudCIsIm5hbWUiLCJDb2xvciIsImNvbXB1dGVXb3JsZFBvc2l0aW9uIiwiYm9uZSIsInBvaW50IiwieCIsImEiLCJ5IiwiYiIsIndvcmxkWCIsImMiLCJkIiwid29ybGRZIiwiY29tcHV0ZVdvcmxkUm90YXRpb24iLCJjb3MiLCJNYXRoVXRpbHMiLCJjb3NEZWciLCJyb3RhdGlvbiIsInNpbiIsInNpbkRlZyIsIk1hdGgiLCJhdGFuMiIsInJhZERlZyIsImNvcHkiLCJjb2xvciIsInNldEZyb21Db2xvciIsIlZlcnRleEF0dGFjaG1lbnQiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2F0dGFjaG1lbnRzL1BvaW50QXR0YWNobWVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdfQ==","\"use strict\";\n\nexports.__esModule = true;\nexports.RegionAttachment = void 0;\n\nvar _Utils = require(\"../Utils\");\n\nvar _Attachment2 = require(\"./Attachment\");\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/** An attachment that displays a textured quadrilateral.\r\n *\r\n * See [Region attachments](http://esotericsoftware.com/spine-regions) in the Spine User Guide. */\nvar RegionAttachment = /*#__PURE__*/function (_Attachment) {\n  _inheritsLoose(RegionAttachment, _Attachment);\n\n  function RegionAttachment(name) {\n    var _this;\n\n    _this = _Attachment.call(this, name) || this;\n    /** The local x translation. */\n\n    _this.x = 0;\n    /** The local y translation. */\n\n    _this.y = 0;\n    /** The local scaleX. */\n\n    _this.scaleX = 1;\n    /** The local scaleY. */\n\n    _this.scaleY = 1;\n    /** The local rotation. */\n\n    _this.rotation = 0;\n    /** The width of the region attachment in Spine. */\n\n    _this.width = 0;\n    /** The height of the region attachment in Spine. */\n\n    _this.height = 0;\n    /** The color to tint the region attachment. */\n\n    _this.color = new _Utils.Color(1, 1, 1, 1);\n    /** The name of the texture region for this attachment. */\n\n    _this.path = null;\n    _this.rendererObject = null;\n    _this.region = null;\n    /** For each of the 4 vertices, a pair of <code>x,y</code> values that is the local position of the vertex.\r\n     *\r\n     * See {@link #updateOffset()}. */\n\n    _this.offset = _Utils.Utils.newFloatArray(8);\n    _this.uvs = _Utils.Utils.newFloatArray(8);\n    _this.tempColor = new _Utils.Color(1, 1, 1, 1);\n    return _this;\n  }\n  /** Calculates the {@link #offset} using the region settings. Must be called after changing region settings. */\n\n\n  var _proto = RegionAttachment.prototype;\n\n  _proto.updateOffset = function updateOffset() {\n    var region = this.region;\n    var regionScaleX = this.width / this.region.originalWidth * this.scaleX;\n    var regionScaleY = this.height / this.region.originalHeight * this.scaleY;\n    var localX = -this.width / 2 * this.scaleX + this.region.offsetX * regionScaleX;\n    var localY = -this.height / 2 * this.scaleY + this.region.offsetY * regionScaleY;\n    var localX2 = localX + this.region.width * regionScaleX;\n    var localY2 = localY + this.region.height * regionScaleY;\n    var radians = this.rotation * Math.PI / 180;\n    var cos = Math.cos(radians);\n    var sin = Math.sin(radians);\n    var x = this.x,\n        y = this.y;\n    var localXCos = localX * cos + x;\n    var localXSin = localX * sin;\n    var localYCos = localY * cos + y;\n    var localYSin = localY * sin;\n    var localX2Cos = localX2 * cos + x;\n    var localX2Sin = localX2 * sin;\n    var localY2Cos = localY2 * cos + y;\n    var localY2Sin = localY2 * sin;\n    var offset = this.offset;\n    offset[0] = localXCos - localYSin;\n    offset[1] = localYCos + localXSin;\n    offset[2] = localXCos - localY2Sin;\n    offset[3] = localY2Cos + localXSin;\n    offset[4] = localX2Cos - localY2Sin;\n    offset[5] = localY2Cos + localX2Sin;\n    offset[6] = localX2Cos - localYSin;\n    offset[7] = localYCos + localX2Sin;\n  };\n\n  _proto.setRegion = function setRegion(region) {\n    this.region = region;\n    var uvs = this.uvs;\n\n    if (region.degrees == 90) {\n      uvs[2] = region.u;\n      uvs[3] = region.v2;\n      uvs[4] = region.u;\n      uvs[5] = region.v;\n      uvs[6] = region.u2;\n      uvs[7] = region.v;\n      uvs[0] = region.u2;\n      uvs[1] = region.v2;\n    } else {\n      uvs[0] = region.u;\n      uvs[1] = region.v2;\n      uvs[2] = region.u;\n      uvs[3] = region.v;\n      uvs[4] = region.u2;\n      uvs[5] = region.v;\n      uvs[6] = region.u2;\n      uvs[7] = region.v2;\n    }\n  }\n  /** Transforms the attachment's four vertices to world coordinates.\r\n   *\r\n   * See [World transforms](http://esotericsoftware.com/spine-runtime-skeletons#World-transforms) in the Spine\r\n   * Runtimes Guide.\r\n   * @param worldVertices The output world vertices. Must have a length >= `offset` + 8.\r\n   * @param offset The `worldVertices` index to begin writing values.\r\n   * @param stride The number of `worldVertices` entries between the value pairs written. */\n  ;\n\n  _proto.computeWorldVertices = function computeWorldVertices(bone, worldVertices, offset, stride) {\n    var vertexOffset = this.offset;\n    var x = bone.worldX,\n        y = bone.worldY;\n    var a = bone.a,\n        b = bone.b,\n        c = bone.c,\n        d = bone.d;\n    var offsetX = 0,\n        offsetY = 0;\n    offsetX = vertexOffset[0];\n    offsetY = vertexOffset[1];\n    worldVertices[offset] = offsetX * a + offsetY * b + x; // br\n\n    worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n    offset += stride;\n    offsetX = vertexOffset[2];\n    offsetY = vertexOffset[3];\n    worldVertices[offset] = offsetX * a + offsetY * b + x; // bl\n\n    worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n    offset += stride;\n    offsetX = vertexOffset[4];\n    offsetY = vertexOffset[5];\n    worldVertices[offset] = offsetX * a + offsetY * b + x; // ul\n\n    worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n    offset += stride;\n    offsetX = vertexOffset[6];\n    offsetY = vertexOffset[7];\n    worldVertices[offset] = offsetX * a + offsetY * b + x; // ur\n\n    worldVertices[offset + 1] = offsetX * c + offsetY * d + y;\n  };\n\n  _proto.copy = function copy() {\n    var copy = new RegionAttachment(this.name);\n    copy.region = this.region;\n    copy.rendererObject = this.rendererObject;\n    copy.path = this.path;\n    copy.x = this.x;\n    copy.y = this.y;\n    copy.scaleX = this.scaleX;\n    copy.scaleY = this.scaleY;\n    copy.rotation = this.rotation;\n    copy.width = this.width;\n    copy.height = this.height;\n\n    _Utils.Utils.arrayCopy(this.uvs, 0, copy.uvs, 0, 8);\n\n    _Utils.Utils.arrayCopy(this.offset, 0, copy.offset, 0, 8);\n\n    copy.color.setFromColor(this.color);\n    return copy;\n  };\n\n  return RegionAttachment;\n}(_Attachment2.Attachment);\n\nexports.RegionAttachment = RegionAttachment;\nRegionAttachment.X1 = 0;\nRegionAttachment.Y1 = 1;\nRegionAttachment.C1R = 2;\nRegionAttachment.C1G = 3;\nRegionAttachment.C1B = 4;\nRegionAttachment.C1A = 5;\nRegionAttachment.U1 = 6;\nRegionAttachment.V1 = 7;\nRegionAttachment.X2 = 8;\nRegionAttachment.Y2 = 9;\nRegionAttachment.C2R = 10;\nRegionAttachment.C2G = 11;\nRegionAttachment.C2B = 12;\nRegionAttachment.C2A = 13;\nRegionAttachment.U2 = 14;\nRegionAttachment.V2 = 15;\nRegionAttachment.X3 = 16;\nRegionAttachment.Y3 = 17;\nRegionAttachment.C3R = 18;\nRegionAttachment.C3G = 19;\nRegionAttachment.C3B = 20;\nRegionAttachment.C3A = 21;\nRegionAttachment.U3 = 22;\nRegionAttachment.V3 = 23;\nRegionAttachment.X4 = 24;\nRegionAttachment.Y4 = 25;\nRegionAttachment.C4R = 26;\nRegionAttachment.C4G = 27;\nRegionAttachment.C4B = 28;\nRegionAttachment.C4A = 29;\nRegionAttachment.U4 = 30;\nRegionAttachment.V4 = 31;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","module.exports = create\n\n/**\n * Creates a new identity mat3\n *\n * @alias mat3.create\n * @returns {mat3} a new 3x3 matrix\n */\nfunction create() {\n  var out = new Float32Array(9)\n  out[0] = 1\n  out[1] = 0\n  out[2] = 0\n  out[3] = 0\n  out[4] = 1\n  out[5] = 0\n  out[6] = 0\n  out[7] = 0\n  out[8] = 1\n  return out\n}\n","module.exports = fromMat4\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @alias mat3.fromMat4\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nfunction fromMat4(out, a) {\n  out[0] = a[0]\n  out[1] = a[1]\n  out[2] = a[2]\n  out[3] = a[4]\n  out[4] = a[5]\n  out[5] = a[6]\n  out[6] = a[8]\n  out[7] = a[9]\n  out[8] = a[10]\n  return out\n}\n","module.exports = copy;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};","module.exports = create;\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nfunction create() {\n    var out = new Float32Array(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};","module.exports = identity;\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nfunction identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};","module.exports = invert;\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction invert(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};","var identity = require('./identity');\n\nmodule.exports = lookAt;\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction lookAt(out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < 0.000001 &&\n        Math.abs(eyey - centery) < 0.000001 &&\n        Math.abs(eyez - centerz) < 0.000001) {\n        return identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};","module.exports = multiply;\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction multiply(out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};","module.exports = perspective;\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction perspective(out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};","module.exports = transpose;\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n    \n    return out;\n};","const assert = require('assert');\n\n// Various async functions\n\n// Do *not* nextTick upon empty request, this causes different behavior when empty!\n// let nextTick = typeof process !== 'undefined' ?\n//   process.nextTick :\n//   window.setImmediate ? window.setImmediate : (fn) => setTimeout(fn, 1);\n\n// Derived from https://github.com/hughsk/async-series - MIT Licensed\n// Series executions stops upon the first error, no further entries in `arr[]` will run\nfunction series(arr, done) {\n  let length = arr.length;\n\n  if (!length) {\n    return void done(); // void nextTick(done);\n  }\n\n  function handleItem(idx) {\n    arr[idx](function (err) {\n      if (err) {\n        return done(err);\n      }\n      if (idx < length - 1) {\n        return handleItem(idx + 1);\n      }\n      return done();\n    });\n  }\n\n  handleItem(0);\n}\nexports.series = series;\n\n// Originally derived from https://github.com/feross/run-parallel-limit - MIT licensed\n// All members of `arr[]` are passed to proc() and processing is finished\n//   before done() is ever called.  Does *not* early-out to done() upon the first\n//   error because that leaves running instances of `proc` in-flight while the calling\n//   code already things things have finished!\n// Can grab from https://github.com/Jimbly/glovjs/blob/6f75327d542c52c999d023e5dc08c18c592157c2/src/common/async.js if\n//   the old, early-out behavior is required\nfunction eachLimit(arr, limit, proc, done) {\n  assert.equal(typeof limit, 'number');\n  assert(Array.isArray(arr));\n  assert.equal(typeof proc, 'function');\n  assert.equal(typeof done, 'function');\n  let len = arr.length;\n  let pending = len;\n\n  let next;\n  let results = [];\n  let any_err = null;\n  function doNext(idx, err, result) {\n    assert.equal(results[idx], undefined); // ensure not called twice\n    results[idx] = result;\n    if (err) {\n      any_err = any_err || err;\n    }\n    if (--pending === 0) {\n      done(any_err, results);\n    } else if (next < len) {\n      let key = next++;\n      proc(arr[key], doNext.bind(null, key), idx);\n    }\n  }\n\n  if (!pending) {\n    // empty\n    return void done(null, results); // void nextTick(done.bind(null, null, results));\n  }\n  next = limit;\n  for (let ii = 0; ii < arr.length && ii < limit; ++ii) {\n    proc(arr[ii], doNext.bind(null, ii), ii);\n  }\n}\nexports.eachLimit = eachLimit;\n\nfunction each(arr, proc, done) {\n  eachLimit(arr, Infinity, proc, done);\n}\nexports.each = each;\n\nfunction eachSeries(arr, proc, done) {\n  eachLimit(arr, 1, proc, done);\n}\nexports.eachSeries = eachSeries;\n\nfunction parallelLimit(tasks, limit, done) {\n  eachLimit(tasks, limit, function (task, next) {\n    task(next);\n  }, done);\n}\nexports.parallelLimit = parallelLimit;\n\nfunction parallel(tasks, done) {\n  parallelLimit(tasks, Infinity, done);\n}\nexports.parallel = parallel;\n\nfunction limiter(limit) {\n  let avail = limit;\n  let head = null;\n  let tail = null;\n  function onFinish() {\n    if (!head) {\n      ++avail;\n      return;\n    }\n    let next = head;\n    head = head.next;\n    if (!head) {\n      tail = null;\n    }\n    runit(next); // eslint-disable-line no-use-before-define\n  }\n  function runit(unit) {\n    if (unit.cb) {\n      unit.exec(function (...args) {\n        unit.cb(...args);\n        onFinish();\n      });\n    } else {\n      unit.exec(onFinish);\n    }\n  }\n  return function limiterRun(exec, cb) {\n    let unit = {\n      exec,\n      cb,\n    };\n    if (!avail) {\n      if (!head) {\n        head = tail = unit;\n      } else {\n        tail.next = unit;\n        tail = unit;\n      }\n      return;\n    }\n    --avail;\n    runit(unit);\n  };\n}\nexports.limiter = limiter;\n\nObject.keys(exports).forEach((key) => {\n  exports[`async${key[0].toUpperCase()}${key.slice(1)}`] = exports[key];\n});\n","/* globals deps */\nrequire('../glov/client/require.js');\n\n// Node built-in replacements\ndeps.assert = require('assert');\ndeps.buffer = require('buffer');\ndeps.not_worker = require('not_worker');\ndeps['glov-async'] = require('glov-async');\ndeps['gl-mat3/create'] = require('gl-mat3/create');\ndeps['gl-mat3/fromMat4'] = require('gl-mat3/fromMat4');\ndeps['gl-mat4/copy'] = require('gl-mat4/copy');\ndeps['gl-mat4/create'] = require('gl-mat4/create');\ndeps['gl-mat4/invert'] = require('gl-mat4/invert');\ndeps['gl-mat4/lookAt'] = require('gl-mat4/lookAt');\ndeps['gl-mat4/multiply'] = require('gl-mat4/multiply');\ndeps['gl-mat4/perspective'] = require('gl-mat4/perspective');\ndeps['gl-mat4/transpose'] = require('gl-mat4/transpose');\ndeps['@jimbly/howler/src/howler.core.js'] = require('@jimbly/howler/src/howler.core.js');\n// Spine support:\ndeps['spine-core/AnimationState'] = require('@jimbly/spine-core/dist/AnimationState');\ndeps['spine-core/AnimationStateData'] = require('@jimbly/spine-core/dist/AnimationStateData');\ndeps['spine-core/AtlasAttachmentLoader'] = require('@jimbly/spine-core/dist/AtlasAttachmentLoader');\ndeps['spine-core/ClippingAttachment'] = require('@jimbly/spine-core/dist/attachments/ClippingAttachment');\ndeps['spine-core/MeshAttachment'] = require('@jimbly/spine-core/dist/attachments/MeshAttachment');\ndeps['spine-core/RegionAttachment'] = require('@jimbly/spine-core/dist/attachments/RegionAttachment');\ndeps['spine-core/SlotData'] = require('@jimbly/spine-core/dist/SlotData');\ndeps['spine-core/Skeleton'] = require('@jimbly/spine-core/dist/Skeleton');\ndeps['spine-core/SkeletonBinary'] = require('@jimbly/spine-core/dist/SkeletonBinary');\n// deps['spine-core/SkeletonJson'] = require('@jimbly/spine-core/dist/SkeletonJson');\ndeps['spine-core/TextureAtlas'] = require('@jimbly/spine-core/dist/TextureAtlas');\ndeps['spine-core/Utils'] = require('@jimbly/spine-core/dist/Utils');\n","/* globals self */\nconst glob = typeof window === 'undefined' ? self : window;\nlet deps = glob.deps = glob.deps || {};\nglob.require = function (mod) {\n  if (!deps[mod]) {\n    throw new Error(`Cannot find module '${mod}' (add it to deps.js or equivalent)`);\n  }\n  return deps[mod];\n};\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nfunction ok(exp, msg) {\n  if (exp) {\n    return;\n  }\n  msg = msg ? msg : (exp === undefined || exp === false) ? '' : JSON.stringify(exp);\n  throw new Error(`Assertion failed${msg ? `: ${msg}` : ''}`);\n}\nmodule.exports = ok;\nmodule.exports.ok = ok;\n\nfunction equal(a, b) {\n  if (a === b) {\n    return;\n  }\n  throw new Error(`Assertion failed: \"${a}\"===\"${b}\"`);\n}\nmodule.exports.equal = equal;\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nexport let Buffer = {};\nBuffer.isBuffer = function (b) {\n  return false;\n};\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n// Dummy shim module that does not exist in worker bundles, to catch bat requires at bundle-time instead of run-time\n\nmodule.exports = true;\n"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","HowlerGlobal","this","init","prototype","self","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","safeToPlay","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","split","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","mp4","weba","webm","dolby","flac","manualUnlock","unlockFunction","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","source","load","onUnlockFinish","document","removeEventListener","_emit","_autoResume","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","addEventListener","_obtainHtml5Audio","pop","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","then","_resumeAfterSuspend","Howl","src","console","error","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhrWithCredentials","xhrWithCredentials","_xhrHeaders","xhrHeaders","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","play","url","str","exec","toLowerCase","warn","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","setParams","_start","_stop","playHtml5","listener","sound_volume","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playbackRate","Promise","catch","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","indexOf","apply","fade","from","to","len","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","min","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","index","splice","remCache","cache","on","events","off","isId","keys","Object","Array","isArray","msg","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","xhr","XMLHttpRequest","open","withCredentials","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","define","amd","global","__esModule","TranslateYTimeline","TranslateXTimeline","TranslateTimeline","TransformConstraintTimeline","Timeline","ShearYTimeline","ShearXTimeline","ShearTimeline","ScaleYTimeline","ScaleXTimeline","ScaleTimeline","RotateTimeline","RGBTimeline","RGBATimeline","RGBA2Timeline","RGB2Timeline","PathConstraintSpacingTimeline","PathConstraintPositionTimeline","PathConstraintMixTimeline","MixDirection","MixBlend","IkConstraintTimeline","EventTimeline","DrawOrderTimeline","DeformTimeline","CurveTimeline2","CurveTimeline1","CurveTimeline","AttachmentTimeline","Animation","AlphaTimeline","_Attachment","_Utils","_inheritsLoose","subClass","superClass","_setPrototypeOf","constructor","setPrototypeOf","__proto__","name","timelines","timelineIds","setTimelines","_proto","StringSet","addAll","getPropertyIds","hasTimeline","contains","skeleton","lastTime","time","alpha","blend","direction","Property","frameCount","propertyIds","frames","Utils","newFloatArray","getFrameEntries","_proto2","getFrameCount","getDuration","search1","search","step","_Timeline","bezierCount","_this","curves","_proto3","setLinear","frame","setStepped","shrink","size","newCurves","arrayCopy","setBezier","bezier","value","time1","value1","cx1","cy1","cx2","cy2","time2","value2","tmpx","tmpy","dddx","dddy","ddx","ddy","dx","dy","x","y","getBezierValue","frameIndex","valueOffset","_x","_y","_x2","_y2","_CurveTimeline","propertyId","_proto4","setFrame","getCurveValue","ii","curveType","before","_CurveTimeline2","propertyId1","propertyId2","_proto5","_CurveTimeline3","boneIndex","_this2","bone","bones","active","setup","rotation","first","add","_CurveTimeline4","_this3","_CurveTimeline5","_this4","_CurveTimeline6","_this5","_CurveTimeline7","_this6","scaleX","scaleY","bx","by","mixOut","MathUtils","signum","_CurveTimeline8","_this7","_CurveTimeline9","_this8","_CurveTimeline10","_this9","shearX","shearY","_CurveTimeline11","_this10","_CurveTimeline12","_this11","_CurveTimeline13","slotIndex","_this12","_proto16","g","b","slot","slots","color","setFromColor","set","_CurveTimeline14","_this13","_proto17","_CurveTimeline15","_this14","_CurveTimeline16","_this15","_proto19","r2","g2","b2","light","dark","darkColor","setupLight","setupDark","_setupDark","_CurveTimeline17","_this16","_proto20","_setupLight","_setupDark2","_Timeline2","_this17","attachmentNames","_proto21","attachmentName","setAttachment","getAttachment","_CurveTimeline18","attachment","_this18","vertices","_proto22","getCurvePercent","_x3","_x4","_x5","_y3","firedEvents","slotAttachment","VertexAttachment","deformAttachment","deform","vertexCount","vertexAttachment","setupVertices","lastVertices","_vertexAttachment","_i2","_setupVertices","_i","_vertexAttachment3","_i4","_setupVertices2","_i3","_i5","_vertexAttachment2","_i7","_setupVertices3","_i6","percent","prevVertices","nextVertices","_vertexAttachment4","_i9","_prev","_setupVertices4","_i8","prev","_i10","_prev2","_vertexAttachment6","_i12","_prev4","_setupVertices5","_i11","_prev3","_setup2","_i13","_prev5","_vertexAttachment5","_i15","_prev7","_setupVertices6","_i14","_prev6","_Timeline3","_this19","_proto23","Number","MAX_VALUE","frameTime","_Timeline4","_this20","drawOrders","_proto24","drawOrder","drawOrderToSetupIndex","_CurveTimeline19","ikConstraintIndex","_this21","_proto25","mix","softness","bendDirection","compress","stretch","constraint","ikConstraints","mixIn","_CurveTimeline20","transformConstraintIndex","_this22","_proto26","mixRotate","mixX","mixY","mixScaleX","mixScaleY","mixShearY","transformConstraints","rotate","_data","_CurveTimeline21","pathConstraintIndex","_this23","pathConstraints","position","_CurveTimeline22","_this24","spacing","_CurveTimeline23","_this25","_proto29","TrackEntry","SUBSEQUENT","SETUP","HOLD_SUBSEQUENT","HOLD_MIX","HOLD_FIRST","FIRST","EventType","EventQueue","CURRENT","AnimationStateAdapter","AnimationState","_Animation","tracks","timeScale","unkeyedState","listeners","queue","propertyIDs","animationsChanged","trackEntryPool","Pool","emptyAnimation","_emptyAnimation","update","delta","current","animationLast","nextAnimationLast","trackLast","nextTrackLast","currentDelta","delay","next","nextTime","trackTime","setCurrent","mixingFrom","mixTime","trackEnd","clearNext","updateMixingFrom","mixingTo","drain","finished","mixDuration","totalAlpha","interruptAlpha","_animationsChanged","applied","_n","mixBlend","applyMixingFrom","animationTime","getAnimationTime","applyTime","applyEvents","reverse","animation","timelineCount","webkit602BugfixHelper","timeline","applyAttachmentTimeline","timelineMode","firstFrame","timelinesRotation","_ii","_timeline","timelineBlend","applyRotateTimeline","queueEvents","setupState","attachmentState","attachments","attachmentThreshold","drawOrderThreshold","alphaHold","alphaMix","eventThreshold","timelineHoldMix","holdMix","r1","lastTotal","lastDiff","total","dir","entry","animationStart","animationEnd","trackLastWrapped","complete","_event","clearTracks","oldDrainDisabled","drainDisabled","clearTrack","trackIndex","interrupt","expandToIndex","previous","setAnimation","animationName","skeletonData","findAnimation","setAnimationWith","trackEntry","addAnimation","addAnimationWith","last","getTrackComplete","setEmptyAnimation","addEmptyAnimation","setEmptyAnimations","ensureArrayCapacity","obtain","holdPrevious","getMix","dispose","clear","computeHold","timelinesCount","outer","getCurrent","addListener","removeListener","clearListeners","clearListenerNotifications","setAnimationLast","isComplete","resetRotationDirections","animState","objects","_event2","type","_ii2","_ii3","_ii4","free","_ii5","_ii6","_event3","AnimationStateData","animationToMixTime","defaultMix","setMix","fromName","toName","setMixWith","AtlasAttachmentLoader","_BoundingBoxAttachment","_ClippingAttachment","_MeshAttachment","_PathAttachment","_PointAttachment","_RegionAttachment","atlas","newRegionAttachment","skin","path","region","findRegion","renderObject","RegionAttachment","setRegion","newMeshAttachment","MeshAttachment","newBoundingBoxAttachment","BoundingBoxAttachment","newPathAttachment","PathAttachment","newPointAttachment","PointAttachment","newClippingAttachment","ClippingAttachment","Bone","_BoneData","children","ax","ay","arotation","ascaleX","ascaleY","ashearX","ashearY","d","worldY","worldX","sorted","setToSetupPose","isActive","updateWorldTransformWith","updateWorldTransform","rotationY","sx","sy","cosDeg","sinDeg","pa","pb","pc","pd","transformMode","TransformMode","Normal","_rotationY","la","lb","lc","ld","OnlyTranslation","_rotationY2","NoRotationOrReflection","s","prx","rx","atan2","radDeg","ry","_la","_lb","_lc","_ld","NoScale","NoScaleOrReflection","cos","sin","za","zc","_s","sqrt","PI","zb","zd","_la2","_lb2","_lc2","_ld2","getWorldRotationX","getWorldRotationY","getWorldScaleX","getWorldScaleY","updateAppliedTransform","pid","ia","ib","ic","ra","rb","rc","rd","det","worldToLocal","world","invDet","localToWorld","local","worldToLocalRotation","worldRotation","localToWorldRotation","localRotation","rotateWorld","degrees","BoneData","skinRequired","Color","ConstraintData","order","Event","intValue","floatValue","stringValue","balance","EventData","audioPath","IkConstraint","target","findBone","apply1","uniform","apply2","targetX","targetY","rotationIK","tx","ty","sa","sc","dd","child","bendDir","px","py","psx","psy","csx","os1","os2","s2","cx","cy","cwx","cwy","pp","a2","l1","l2","sd","td","acos","a1","aa","bb","ta","c1","c2","q","r0","minAngle","minX","minDist","minY","maxAngle","maxX","maxDist","maxY","os","IkConstraintData","_ConstraintData","PathConstraint","_PathConstraintData","spaces","positions","lengths","segments","findSlot","tangents","rotateMode","RotateMode","Tangent","scale","ChainScale","boneCount","spacesCount","setArraySize","spacingMode","SpacingMode","Percent","setupLength","epsilon","arrayFill","Proportional","sum","_bone","_setupLength","lengthSpacing","Length","_n2","_bone2","_setupLength2","_length","computeWorldPositions","boneX","boneY","offsetRotation","tip","Chain","degRad","_p","_bone3","_length2","_length3","PI2","out","closed","verticesLength","worldVerticesLength","curveCount","prevCurve","NONE","constantSpeed","_multiplier","_pathLength","positionMode","PositionMode","curve","space","BEFORE","computeWorldVertices","addBeforePosition","AFTER","addAfterPosition","addCurvePosition","multiplier","pathLength","x1","y1","x2","y2","dddfx","dddfy","ddfx","ddfy","dfx","dfy","w","curveLength","_o","_curve","segment","_space","_p2","_length4","_length5","temp","tt","ttt","uu","uuu","ut","ut3","uut3","utt3","PathConstraintData","Skeleton","_Bone","_IkConstraint","_PathConstraint","_Slot","_TransformConstraint","_updateCache","boneData","slotData","Slot","ikConstraintData","transformConstraintData","TransformConstraint","pathConstraintData","updateCache","skinBones","ikCount","transformCount","pathCount","constraintCount","sortIkConstraint","_constraint","sortTransformConstraint","_constraint2","sortPathConstraint","sortBone","constraints","constrained","sortReset","slotBone","sortPathConstraintAttachment","defaultSkin","skins","sortPathConstraintAttachmentWith","pathBones","nn","_n3","rootBone","getRootBone","updatable","setBonesToSetupPose","setSlotsToSetupPose","_n4","_i16","_n5","_constraint3","_i17","_n6","_constraint4","boneName","slotName","setSkinByName","skinName","findSkin","setSkin","newSkin","attachAll","getAttachmentByName","findIkConstraint","constraintName","ikConstraint","findTransformConstraint","findPathConstraint","getBoundsRect","offset","Vector2","getBounds","width","height","POSITIVE_INFINITY","NEGATIVE_INFINITY","mesh","SkeletonBinary","BinaryInput","_Event","_EventData","_IkConstraintData","_SkeletonData","_Skin","_SlotData","_TransformConstraintData","attachmentLoader","linkedMeshes","readSkeletonData","binary","SkeletonData","input","lowHash","readInt32","highHash","hash","toString","readString","readFloat","nonessential","readBoolean","fps","imagesPath","readInt","strings","rgba8888ToColor","SlotData","rgb888ToColor","readStringRef","blendMode","_data2","readByte","_data3","TransformConstraintData","_nn","relative","offsetX","offsetY","offsetScaleX","offsetScaleY","offsetShearY","_data4","_nn2","Fixed","readSkin","linkedMesh","inheritDeform","setParentMesh","updateUVs","_data5","animations","readAnimation","slotCount","Skin","readAttachment","AttachmentType","Region","updateOffset","BoundingBox","readVertices","_color","box","Mesh","_path","_color2","_vertexCount","uvs","readFloatArray","triangles","readShortArray","_vertices","hullLength","edges","_width","_height","regionUVs","LinkedMesh","_path2","_color3","_width2","_height2","_mesh","Path","_vertexCount2","_vertices2","newArray","_color4","_path3","Point","_rotation","_color5","point","Clipping","endSlotIndex","_vertexCount3","_vertices3","_color6","clip","endSlot","Vertices","weights","bonesArray","toFloatArray","array","readShort","timelineType","frameLast","SLOT_ATTACHMENT","SLOT_RGBA","readUnsignedByte","_frame","CURVE_STEPPED","CURVE_BEZIER","SLOT_RGB","_bezierCount","_timeline2","_time","_r","_g","_b","_frame2","_bezier","_time2","_r2","_g2","_b2","SLOT_RGBA2","_bezierCount2","_timeline3","_time3","_r3","_g3","_b3","_a","_r4","_g4","_b4","_frame3","_bezier2","_time4","nr","ng","nb","na","nr2","ng2","nb2","SLOT_RGB2","_bezierCount3","_timeline4","_time5","_r5","_g5","_b5","_r6","_g6","_b6","_frame4","_bezier3","_time6","_nr","_ng","_nb","_nr2","_ng2","_nb2","SLOT_ALPHA","_timeline5","_time7","_a2","_frame5","_bezier4","_time8","_a3","_nn3","_frameCount","_bezierCount4","BONE_ROTATE","readTimeline1","BONE_TRANSLATE","readTimeline2","BONE_TRANSLATEX","BONE_TRANSLATEY","BONE_SCALE","BONE_SCALEX","BONE_SCALEY","BONE_SHEAR","BONE_SHEARX","BONE_SHEARY","_frameCount2","_frameLast","_timeline6","_time9","_frame6","_bezier5","_time10","mix2","softness2","_index","_frameCount3","_frameLast2","_timeline7","_time11","_frame7","_bezier6","_time12","mixRotate2","mixX2","mixY2","mixScaleX2","mixScaleY2","mixShearY2","_i18","_n7","_index2","_nn4","PATH_POSITION","PATH_SPACING","PATH_MIX","_timeline8","_time13","_mixRotate","_mixX","_mixY","_frame8","_bezier7","_frameLast3","_time14","_mixRotate2","_mixX2","_mixY2","_i19","_n8","_nn5","_slotIndex","iii","nnn","weighted","deformLength","_frameCount4","_frameLast4","_bezierCount5","_timeline9","_time15","_frame9","_bezier8","v","_v","_v2","vn","_time16","drawOrderCount","_timeline10","_i20","_time17","offsetCount","unchanged","originalIndex","unchangedIndex","_ii7","_slotIndex2","_ii8","eventCount","_timeline11","_i21","_time18","eventData","_i22","_n9","DataView","getInt8","getUint8","getInt16","getInt32","optimizePositive","result","byteCount","chars","String","fromCharCode","getFloat32","nvalue1","nvalue2","findEvent","eventDataName","SkinEntry","addSkin","contained","_contained","getAttachments","copySkin","_contained2","newLinkedMesh","copy","dictionary","removeAttachment","entries","slotAttachments","getAttachmentsForSlot","oldSkin","attachmentTime","getSkeleton","setAttachmentTime","getAttachmentTime","BlendMode","TextureWrap","TextureRegion","TextureFilter","Texture","FakeTexture","image","_image","getImage","u2","v2","originalWidth","originalHeight","_Texture","setFilters","minFilter","magFilter","setWraps","uWrap","vWrap","TextureAtlasRegion","TextureAtlasPage","TextureAtlas","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","minLen","_arrayLikeToArray","_unsupportedIterableToArray","done","TypeError","arr","arr2","atlasText","pages","regions","reader","TextureAtlasReader","page","pageFields","filter","enumValue","repeat","Repeat","pma","regionFields","xy","bounds","orig","offsets","line","readLine","trim","readEntry","names","values","count","_field","entryValues","field","setTextures","assetManager","pathPrefix","_iterator","_step","setTexture","get","texture","text","lines","colon","substr","lastMatch","comma","Nearest","ClampToEdge","_TextureRegion","applyRelativeLocal","applyAbsoluteLocal","applyRelativeWorld","applyAbsoluteWorld","translate","tb","tc","degRadReflect","_s2","_d","_s4","_s3","_d2","WindowedMean","TimeKeeper","PowOut","Pow","Interpolation","IntSet","DebugUtils","remove","oldSize","clamp","setFromString","hex","charAt","fromString","WHITE","RED","GREEN","BLUE","MAGENTA","toInt","floor","cbrt","pow","randomTriangular","randomTriangularWith","mode","random","isPowerOfTwo","radiansToDegrees","degreesToRadians","applyInternal","_Interpolation","power","_Pow","sourceStart","dest","destStart","numElements","fromIndex","toIndex","defaultValue","SUPPORTS_TYPED_ARRAYS","Float32Array","newShortArray","Int16Array","toSinglePrecision","fround","element","identity","toUpperCase","logBones","log","instantiator","items","_proto7","item","freeAll","_proto8","normalize","maxDelta","framesPerSecond","totalTime","windowSize","addedValues","lastValue","mean","dirty","_proto10","hasEnoughData","addValue","getMean","Attachment","nextID","ReferenceError","_assertThisInitialized","worldVertices","stride","deformArray","skip","skeletonBones","_w","wx","wy","_vx","_vy","weight","_w2","_wx","_wy","_vx2","_vy2","_weight","vx","vy","copyTo","_VertexAttachment","_TextureAtlas","parentMesh","tempColor","textureWidth","textureHeight","getParentMesh","computeWorldPosition","computeWorldRotation","rendererObject","regionScaleX","regionScaleY","localX","localY","localX2","localY2","radians","localXCos","localXSin","localYCos","localYSin","localX2Cos","localX2Sin","localY2Cos","localY2Sin","vertexOffset","X1","Y1","C1R","C1G","C1B","C1A","U1","V1","X2","Y2","C2R","C2G","C2B","C2A","U2","V2","X3","Y3","C3R","C3G","C3B","C3A","U3","V3","X4","Y4","C4R","C4G","C4B","C4A","U4","V4","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","eye","center","up","z0","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","z1","z2","x0","y0","b0","b1","b3","fovy","aspect","near","far","tan","nf","assert","eachLimit","proc","equal","pending","results","any_err","doNext","idx","parallelLimit","tasks","series","handleItem","each","eachSeries","parallel","limiter","avail","head","tail","onFinish","runit","unit","cb","deps","not_worker","glob","mod","ok","exp","JSON","stringify","Buffer","isBuffer"],"mappings":"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"}