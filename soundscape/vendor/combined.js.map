{"version":3,"sources":["vendor/polyfill.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"combined.js","sourcesContent":["/* eslint no-extend-native:off,no-var:off,func-style:off,no-invalid-this:off */\n\n// TypedArray.slice - not supported on IE, some older Safari\nif (!Uint8Array.prototype.slice) {\n  Object.defineProperty(Uint8Array.prototype, 'slice', {\n    value: function (begin, end) {\n      // PERFTODO: If we use this on any significant audience, this can be likely\n      // way faster by not making a temporary Array in the middle\n      return new Uint8Array(Array.prototype.slice.call(this, begin, end));\n    }\n  });\n  Object.defineProperty(Float32Array.prototype, 'slice', {\n    value: function (begin, end) {\n      // PERFTODO: If we use this on any significant audience, this can be likely\n      // way faster by not making a temporary Array in the middle\n      return new Float32Array(Array.prototype.slice.call(this, begin, end));\n    }\n  });\n}\n\nif (!Uint8Array.prototype.fill) {\n  var fill = function (value, begin, end) {\n    if (end === undefined) {\n      end = this.length;\n    }\n    for (var ii = begin || 0; ii < end; ++ii) {\n      this[ii] = value;\n    }\n    return this;\n  };\n  Object.defineProperty(Uint8Array.prototype, 'fill', {\n    value: fill\n  });\n  Object.defineProperty(Int16Array.prototype, 'fill', {\n    value: fill\n  });\n  Object.defineProperty(Int32Array.prototype, 'fill', {\n    value: fill\n  });\n}\n\nif (!Int16Array.prototype.sort) {\n  var cmpDefault = function (a, b) {\n    return a - b;\n  };\n  var sort = function (cmp) {\n    Array.prototype.sort.call(this, cmp || cmpDefault);\n  };\n  Object.defineProperty(Int16Array.prototype, 'sort', {\n    value: sort\n  });\n}\n"]}