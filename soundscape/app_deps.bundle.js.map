{"version":3,"file":"app_deps.bundle.js","sources":["node_modules/browser-pack/_prelude.js","node_modules/@jimbly/howler/src/howler.core.js","node_modules/dot-prop/index.js","node_modules/gl-mat3/create.js","node_modules/gl-mat3/fromMat4.js","node_modules/gl-mat4/copy.js","node_modules/gl-mat4/create.js","node_modules/gl-mat4/identity.js","node_modules/gl-mat4/invert.js","node_modules/gl-mat4/lookAt.js","node_modules/gl-mat4/multiply.js","node_modules/gl-mat4/perspective.js","node_modules/gl-mat4/transpose.js","node_modules/is-obj/index.js","src/client/app_deps.js","src/client/glov/require.js","src/client/shims/assert.js","src/client/shims/buffer.js","src/client/shims/not_worker.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*!\n *  howler.js v2.1.3\n *  howlerjs.com\n *\n *  (c) 2013-2019, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  Modified by Jimb Esser:\n *    Fix inconsistent return of self.\n *    Do not throw uncaught promise rejections at startup\n *    Fix audio not resuming upon keypress\n *    Fix audio not resuming upon mousedown\n *    Fix pre-loading entire audio file when streaming is desired\n *    Unlock audio even if WebAudio is disabled\n *    Expose `safeToPlay` so app doesn't queue up hundreds of sounds before we can play any\n *    Add `volume` parameter to `play()` so you can play a sound a specific volume without popping\n *    Add extra delay before firing `end` event to prevent sounds from being stopped before they even start on Android\n *    [PR'd] Fix creating unbounded number of Audio elements when `unlock` is called multiple times\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n      self.safeToPlay = false;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n      if  (self.state === 'running') {\n        self.safeToPlay = true;\n      }\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      // JE: Unlock even if not using WebAudio; Also, _audioUnlocked is never true here, and would be false while unlocking anyway\n      // if (self._audioUnlocked || !self.ctx) {\n      //   return self;\n      // }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      if (self.ctx) {\n        // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n        // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n        // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n        if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n          self._mobileUnloaded = true;\n          self.unload();\n        }\n      }\n\n      if (self.ctx) {\n        // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n        // http://stackoverflow.com/questions/24119684\n        self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n      }\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        // JE: Don't add more to the pool than desired\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        function onUnlockFinish() {\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n          self.safeToPlay = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('mousedown', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        }\n\n        if (self.ctx) {\n          // Create an empty buffer.\n          var source = self.ctx.createBufferSource();\n          source.buffer = self._scratchBuffer;\n          source.connect(self.ctx.destination);\n\n          // Play the empty buffer.\n          if (typeof source.start === 'undefined') {\n            source.noteOn(0);\n          } else {\n            source.start(0);\n          }\n\n          // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n          if (typeof self.ctx.resume === 'function') {\n            self.ctx.resume();\n          }\n\n          // Setup a timeout to check that we are unlocked on the next event loop.\n          source.onended = function() {\n            source.disconnect(0);\n            onUnlockFinish();\n          };\n        } else {\n          // JE: non-WebAudio - we received user input, assume unlocked immediately\n          onUnlockFinish();\n        }\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('mousedown', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      // JE: Disabling this, it causes un-ignorable Uncaught Promise Rejection errors in Chrome.\n      // //.Check if the audio is locked and throw a warning.\n      // var testPlay = new Audio().play();\n      // if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n      //   testPlay.catch(function() {\n      //     console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n      //   });\n      // }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return self;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n        self.ctx.suspend().then(function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        });\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return self;\n      }\n\n      if (self.state === 'running' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\n      self._xhrHeaders = o.xhrHeaders || null;\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (Howler.autoUnlock) { // JE: Unlock even if not using WebAudio\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload) {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return self;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return self;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Number} volume\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, volume, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      // JE: With short timeouts, we get clipped on no sound at all on Android\n      timeout += 500;\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return null;\n      }\n\n      var sound_volume = typeof volume === 'number' ? volume : sound._volume;\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound_volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound_volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = parseFloat(from);\n      to = parseFloat(to);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Make sure the volume is in the right bounds.\n        vol = Math.max(0, vol);\n        vol = Math.min(1, vol);\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, undefined, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        // JE: If _html5 was requested, then we want this audio streamed, not buffered!\n        self._node.preload = parent._html5 ? 'metadata' : 'auto';\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.withCredentials = self._xhrWithCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhrHeaders) {\n        Object.keys(self._xhrHeaders).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhrHeaders[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  };\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Define globally in case AMD is not available or unused.\n  if (typeof window !== 'undefined') {\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  }\n}());\n","'use strict';\nconst isObj = require('is-obj');\n\nfunction getPathSegments(path) {\n\tconst pathArr = path.split('.');\n\tconst parts = [];\n\n\tfor (let i = 0; i < pathArr.length; i++) {\n\t\tlet p = pathArr[i];\n\n\t\twhile (p[p.length - 1] === '\\\\' && pathArr[i + 1] !== undefined) {\n\t\t\tp = p.slice(0, -1) + '.';\n\t\t\tp += pathArr[++i];\n\t\t}\n\n\t\tparts.push(p);\n\t}\n\n\treturn parts;\n}\n\nmodule.exports = {\n\tget(obj, path, value) {\n\t\tif (!isObj(obj) || typeof path !== 'string') {\n\t\t\treturn value === undefined ? obj : value;\n\t\t}\n\n\t\tconst pathArr = getPathSegments(path);\n\n\t\tfor (let i = 0; i < pathArr.length; i++) {\n\t\t\tif (!Object.prototype.propertyIsEnumerable.call(obj, pathArr[i])) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tobj = obj[pathArr[i]];\n\n\t\t\tif (obj === undefined || obj === null) {\n\t\t\t\t// `obj` is either `undefined` or `null` so we want to stop the loop, and\n\t\t\t\t// if this is not the last bit of the path, and\n\t\t\t\t// if it did't return `undefined`\n\t\t\t\t// it would return `null` if `obj` is `null`\n\t\t\t\t// but we want `get({foo: null}, 'foo.bar')` to equal `undefined`, or the supplied value, not `null`\n\t\t\t\tif (i !== pathArr.length - 1) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\tset(obj, path, value) {\n\t\tif (!isObj(obj) || typeof path !== 'string') {\n\t\t\treturn obj;\n\t\t}\n\n\t\tconst root = obj;\n\t\tconst pathArr = getPathSegments(path);\n\n\t\tfor (let i = 0; i < pathArr.length; i++) {\n\t\t\tconst p = pathArr[i];\n\n\t\t\tif (!isObj(obj[p])) {\n\t\t\t\tobj[p] = {};\n\t\t\t}\n\n\t\t\tif (i === pathArr.length - 1) {\n\t\t\t\tobj[p] = value;\n\t\t\t}\n\n\t\t\tobj = obj[p];\n\t\t}\n\n\t\treturn root;\n\t},\n\n\tdelete(obj, path) {\n\t\tif (!isObj(obj) || typeof path !== 'string') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pathArr = getPathSegments(path);\n\n\t\tfor (let i = 0; i < pathArr.length; i++) {\n\t\t\tconst p = pathArr[i];\n\n\t\t\tif (i === pathArr.length - 1) {\n\t\t\t\tdelete obj[p];\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tobj = obj[p];\n\n\t\t\tif (!isObj(obj)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t},\n\n\thas(obj, path) {\n\t\tif (!isObj(obj) || typeof path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst pathArr = getPathSegments(path);\n\n\t\tfor (let i = 0; i < pathArr.length; i++) {\n\t\t\tif (isObj(obj)) {\n\t\t\t\tif (!(pathArr[i] in obj)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tobj = obj[pathArr[i]];\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n};\n","module.exports = create\n\n/**\n * Creates a new identity mat3\n *\n * @alias mat3.create\n * @returns {mat3} a new 3x3 matrix\n */\nfunction create() {\n  var out = new Float32Array(9)\n  out[0] = 1\n  out[1] = 0\n  out[2] = 0\n  out[3] = 0\n  out[4] = 1\n  out[5] = 0\n  out[6] = 0\n  out[7] = 0\n  out[8] = 1\n  return out\n}\n","module.exports = fromMat4\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @alias mat3.fromMat4\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nfunction fromMat4(out, a) {\n  out[0] = a[0]\n  out[1] = a[1]\n  out[2] = a[2]\n  out[3] = a[4]\n  out[4] = a[5]\n  out[5] = a[6]\n  out[6] = a[8]\n  out[7] = a[9]\n  out[8] = a[10]\n  return out\n}\n","module.exports = copy;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};","module.exports = create;\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nfunction create() {\n    var out = new Float32Array(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};","module.exports = identity;\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nfunction identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};","module.exports = invert;\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction invert(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};","var identity = require('./identity');\n\nmodule.exports = lookAt;\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction lookAt(out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < 0.000001 &&\n        Math.abs(eyey - centery) < 0.000001 &&\n        Math.abs(eyez - centerz) < 0.000001) {\n        return identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};","module.exports = multiply;\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction multiply(out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};","module.exports = perspective;\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction perspective(out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};","module.exports = transpose;\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n    \n    return out;\n};","'use strict';\nmodule.exports = function (x) {\n\tvar type = typeof x;\n\treturn x !== null && (type === 'object' || type === 'function');\n};\n","/* globals deps */\nrequire('./glov/require.js');\n\n// Node built-in replacements\ndeps.assert = require('assert');\ndeps.buffer = require('buffer');\ndeps.not_worker = require('not_worker');\ndeps['dot-prop'] = require('dot-prop');\ndeps['gl-mat3/create'] = require('gl-mat3/create');\ndeps['gl-mat3/fromMat4'] = require('gl-mat3/fromMat4');\ndeps['gl-mat4/copy'] = require('gl-mat4/copy');\ndeps['gl-mat4/create'] = require('gl-mat4/create');\ndeps['gl-mat4/invert'] = require('gl-mat4/invert');\ndeps['gl-mat4/lookAt'] = require('gl-mat4/lookAt');\ndeps['gl-mat4/multiply'] = require('gl-mat4/multiply');\ndeps['gl-mat4/perspective'] = require('gl-mat4/perspective');\ndeps['gl-mat4/transpose'] = require('gl-mat4/transpose');\ndeps['@jimbly/howler/src/howler.core.js'] = require('@jimbly/howler/src/howler.core.js');\n","/* globals self */\nconst glob = typeof window === 'undefined' ? self : window;\nlet deps = glob.deps = glob.deps || {};\nglob.require = function (mod) {\n  if (!deps[mod]) {\n    throw new Error(`Cannot find module '${mod}' (add it to deps.js or equivalent)`);\n  }\n  return deps[mod];\n};\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nfunction ok(exp, msg) {\n  if (exp) {\n    return;\n  }\n  throw new Error(`Assertion failed: ${msg ? msg : exp === undefined ? '' : JSON.stringify(exp)}`);\n}\nmodule.exports = ok;\nmodule.exports.ok = ok;\n\nfunction equal(a, b) {\n  if (a === b) {\n    return;\n  }\n  throw new Error(`Assertion failed: \"${a}\"===\"${b}\"`);\n}\nmodule.exports.equal = equal;\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nexport let Buffer = {};\nBuffer.isBuffer = function (b) {\n  return false;\n};\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n// Dummy shim module that does not exist in worker bundles, to catch bat requires at bundle-time instead of run-time\n\nmodule.exports = true;\n"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","HowlerGlobal","this","init","Howl","src","console","error","prototype","self","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","window","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","safeToPlay","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","split","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","source","load","onUnlockFinish","document","removeEventListener","_emit","_autoResume","createBufferSource","buffer","connect","destination","start","noteOn","resume","onended","disconnect","addEventListener","_obtainHtml5Audio","pop","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","then","_resumeAfterSuspend","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhrWithCredentials","xhrWithCredentials","_xhrHeaders","xhrHeaders","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","play","url","str","exec","toLowerCase","warn","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","setParams","_start","_stop","playHtml5","listener","sound_volume","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playbackRate","Promise","catch","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","indexOf","apply","fade","from","to","len","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","min","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","index","splice","remCache","cache","on","events","off","isId","keys","Object","Array","isArray","msg","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","xhr","XMLHttpRequest","open","withCredentials","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","define","amd","global","isObj","getPathSegments","path","pathArr","parts","get","obj","value","propertyIsEnumerable","set","root","delete","has","out","Float32Array","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","identity","eye","center","up","z0","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","z1","z2","sqrt","x0","x1","x2","y0","y1","y2","b","b0","b1","b2","b3","fovy","aspect","near","far","tan","nf","x","type","deps","assert","not_worker","glob","mod","ok","exp","JSON","stringify","equal","Buffer","isBuffer"],"mappings":"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"}