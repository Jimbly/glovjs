{"version":3,"file":"worker.bundle.js","names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","deps","assert","glob","window","self","mod","ok","exp","msg","undefined","JSON","stringify","equal","b"],"mappings":"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","sources":["node_modules/browser-pack/_prelude.js","worker_deps.js","../glov/client/require.js","../glov/client/shims/assert.js","node_modules/browser-pack/_prelude.js(2)","worker.js","../glov/client/polyfill.js","../glov/client/worker_thread.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* globals deps */\nrequire('../glov/client/require.js');\n\ndeps.assert = require('assert');\n","/* globals self */\nconst glob = typeof window === 'undefined' ? self : window;\nlet deps = glob.deps = glob.deps || {};\nglob.require = function (mod) {\n  if (!deps[mod]) {\n    throw new Error(`Cannot find module '${mod}' (add it to deps.js or equivalent)`);\n  }\n  return deps[mod];\n};\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\nfunction ok(exp, msg) {\n  if (exp) {\n    return;\n  }\n  msg = msg ? msg : (exp === undefined || exp === false) ? '' : JSON.stringify(exp);\n  throw new Error(`Assertion failed${msg ? `: ${msg}` : ''}`);\n}\nmodule.exports = ok;\nmodule.exports.ok = ok;\n\nfunction equal(a, b) {\n  if (a === b) {\n    return;\n  }\n  throw new Error(`Assertion failed: \"${a}\"===\"${b}\"`);\n}\nmodule.exports.equal = equal;\n","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\nconst worker = require('glov/client/worker_thread.js');\n\nworker.addHandler('test', function () {\n  console.log('Worker Test!');\n});\n","/* eslint no-extend-native:off */\n\n// TypedArray.slice, fill, join, sort, etc - not supported on IE, some older Safari, older Android, Chrome 44\nlet typedarrays = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array];\n\nif (!Uint8Array.prototype.slice) {\n  typedarrays.forEach(function (ArrayType) {\n    Object.defineProperty(ArrayType.prototype, 'slice', {\n      value: function (begin, end) {\n        if (end === undefined) {\n          end = this.length;\n        }\n        if (end < 0) {\n          end = this.length - end;\n        }\n        begin = begin || 0;\n        if (begin >= this.length) {\n          begin = this.length - 1;\n        }\n        if (end > this.length) {\n          end = this.length;\n        }\n        if (end < begin) {\n          end = begin;\n        }\n        let len = end - begin;\n        let ret = new ArrayType(len);\n        for (let ii = 0; ii < len; ++ii) {\n          ret[ii] = this[begin + ii];\n        }\n        return ret;\n      }\n    });\n  });\n}\n\nfunction cmpDefault(a, b) {\n  return a - b;\n}\nlet replacements = {\n  join: function (delim) {\n    return Array.prototype.join.call(this, delim);\n  },\n  fill: function (value, begin, end) {\n    if (end === undefined) {\n      end = this.length;\n    }\n    for (let ii = begin || 0; ii < end; ++ii) {\n      this[ii] = value;\n    }\n    return this;\n  },\n  sort: function (cmp) {\n    Array.prototype.sort.call(this, cmp || cmpDefault);\n  },\n};\n\nfor (let key in replacements) {\n  if (!Uint8Array.prototype[key]) {\n    typedarrays.forEach(function (ArrayType) {\n      Object.defineProperty(ArrayType.prototype, key, {\n        value: replacements[key],\n      });\n    });\n  }\n}\n\nif (!String.prototype.endsWith) {\n  Object.defineProperty(String.prototype, 'endsWith', {\n    value: function (test) {\n      return this.slice(-test.length) === test;\n    },\n  });\n  Object.defineProperty(String.prototype, 'startsWith', {\n    value: function (test) {\n      return this.slice(0, test.length) === test;\n    },\n  });\n}\nif (!String.prototype.includes) {\n  Object.defineProperty(String.prototype, 'includes', {\n    value: function (search, start) {\n      return this.indexOf(search, start) !== -1;\n    },\n  });\n}\n\nif (!Array.prototype.includes) {\n  Object.defineProperty(Array.prototype, 'includes', {\n    value: function (search, start) {\n      return this.indexOf(search, start) !== -1;\n    },\n  });\n}\n\nif (!Object.values) {\n  Object.values = function values(obj) {\n    return Object.keys(obj).map((k) => obj[k]);\n  };\n}\nif (!Object.entries) {\n  Object.entries = function entries(obj) {\n    let keys = Object.keys(obj);\n    let ret = new Array(keys.length);\n    for (let ii = keys.length - 1; ii >= 0; --ii) {\n      ret[ii] = [keys[ii], obj[keys[ii]]];\n    }\n    return ret;\n  };\n}\n\nif (!Object.assign) {\n  Object.assign = function assign(target, source1) {\n    for (let argindex = 1; argindex < arguments.length; ++argindex) {\n      // eslint-disable-next-line prefer-rest-params\n      let source = arguments[argindex];\n      for (let key in source) {\n        target[key] = source[key];\n      }\n    }\n    return target;\n  };\n}\n\nif (!Math.sign) {\n  Math.sign = function sign(a) {\n    return a < 0 ? -1 : a > 0 ? 1 : 0;\n  };\n}\n\nif (typeof window !== 'undefined') {\n  if (!window.Intl) {\n    window.Intl = {};\n  }\n  if (!window.Intl.NumberFormat) {\n    window.Intl.NumberFormat = function () {\n      // Constructor\n    };\n    window.Intl.NumberFormat.prototype.format = function (v) {\n      return String(v);\n    };\n  }\n  if (!window.Intl.DateTimeFormat) {\n    window.Intl.DateTimeFormat = function () {\n      // Constructor\n    };\n    window.Intl.DateTimeFormat.prototype.format = function (v) {\n      return String(v);\n    };\n  }\n}\n","// Portions Copyright 2019 Jimb Esser (https://github.com/Jimbly/)\n// Released under MIT License: https://opensource.org/licenses/MIT\n\n/* eslint-env browser */\n\nrequire('./polyfill.js');\n\nif (!self.profilerStart) {\n  self.profilerStart = self.profilerStop = self.profilerStopStart = function () {\n    // no profiling in the worker thread\n  };\n}\n\nconst assert = require('assert');\n\nexport function sendmsg(id, data, transfer) {\n  postMessage({ id, data }, transfer);\n}\n\nexport function debugmsg(msg, clear) {\n  sendmsg('debugmsg', { msg, clear });\n}\n\nlet handlers = [];\nexport function addHandler(id, cb) {\n  assert(!handlers[id]);\n  handlers[id] = cb;\n}\n\nlet time_work = 0;\nlet time_idle = 0;\nlet batch_timing = [];\nlet last_report_time = Date.now();\nlet timing_enabled = false;\n\nfunction reportTiming(now) {\n  // end work, start yield/idle\n  if (now - last_report_time > 100) {\n    let elapsed = time_work + time_idle;\n    assert(elapsed <= now - last_report_time + 10); // this happened once, why?\n    sendmsg('timing', { time_work, time_idle, elapsed, batches: batch_timing });\n    last_report_time = now;\n    time_idle = time_work = 0;\n    batch_timing.length = 0;\n  }\n}\n\nlet last_work_end = last_report_time;\nlet last_work_start = 0;\nexport function startWork() {\n  let now = Date.now();\n  let idle_time = now - last_work_end;\n  if (timing_enabled) {\n    batch_timing.push(idle_time);\n  }\n  time_idle += idle_time;\n  last_work_start = now;\n}\n\nexport function endWork() {\n  let now = Date.now();\n  last_work_end = now;\n  let batch_time = now - last_work_start;\n  time_work += batch_time;\n  if (timing_enabled) {\n    batch_timing.push(batch_time);\n    reportTiming(now);\n  }\n}\n\nonmessage = function (evt) {\n  // start work, end yield/idle\n  startWork();\n  evt = evt.data;\n  if (evt instanceof Object && evt.id) {\n    assert(handlers[evt.id]);\n    try {\n      handlers[evt.id](evt.data);\n    } catch (e) {\n      sendmsg('error', { message: e.message || String(e), stack: e.stack });\n    }\n  } else {\n    console.log('worker (worker thread) unhandled message', evt);\n  }\n  endWork();\n};\n\naddHandler('busy', function (data) {\n  let start = Date.now();\n  let a = 1;\n  let b = 1;\n  while (Date.now() - start < data) {\n    let c = a + b;\n    a = b;\n    b = c;\n  }\n  sendmsg('busy_done', null);\n});\n\naddHandler('timing_enable', function (data) {\n  timing_enabled = data;\n});\n\nsendmsg('log', 'WebWorker communication initialized');\n"]}